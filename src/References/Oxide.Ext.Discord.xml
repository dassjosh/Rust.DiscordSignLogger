<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Oxide.Ext.Discord</name>
    </assembly>
    <members>
        <member name="T:Oxide.Ext.Discord.Attributes.ApplicationCommands.BaseApplicationCommandAttribute">
            <summary>
            Base attribute for Application Commands
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Attributes.ApplicationCommands.DiscordApplicationCommandAttribute">
            <summary>
            Discord Application Command Attribute for <see cref="F:Oxide.Ext.Discord.Entities.Interactions.InteractionType.ApplicationCommand"/>
            Callback Hook Format:
            <code>
            [DiscordApplicationCommandAttribute("Command", "Sub Command", "Group")]
            private void ApplicationCommandMethod(DiscordInteraction interaction, InteractionDataParsed parsed)
            {
                Puts("ApplicationCommandMethod Works!");
            }
            </code>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Attributes.ApplicationCommands.DiscordApplicationCommandAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="command">Command for the Application Command</param>
            <param name="subCommand">Sub Command for the Application Command</param>
            <param name="group">Sub Command Group for the Application Command</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Attributes.ApplicationCommands.DiscordAutoCompleteCommandAttribute">
            <summary>
            Discord Auto Complete Command Attribute for <see cref="F:Oxide.Ext.Discord.Entities.Interactions.InteractionType.ApplicationCommandAutoComplete"/>
            Callback Hook Format:
            <code>
            [DiscordAutoCompleteCommandAttribute("ArgumentName")]
            private void AutoCompleteCommand(DiscordInteraction interaction, InteractionDataOption focused)
            {
                Puts("AutoCompleteCommand Works!");
            }
            </code>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Attributes.ApplicationCommands.DiscordAutoCompleteCommandAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="command">Command for the Auto Complete</param>
            <param name="argumentName">Argument Name for the Auto Complete</param>
            <param name="subCommand">Sub Command for the Auto Complete</param>
            <param name="group">Sub Command Group for the Auto Complete</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Attributes.ApplicationCommands.DiscordMessageComponentCommandAttribute">
            <summary>
            Discord Message Component Command Attribute for <see cref="F:Oxide.Ext.Discord.Entities.Interactions.InteractionType.MessageComponent"/>
            Callback Hook Format:
            <code>
            [DiscordMessageComponentCommandAttribute("CustomId")]
            private void MessageComponentCommand(DiscordInteraction interaction)
            {
                Puts("MessageComponentCommand Works!");
            }
            </code>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Attributes.ApplicationCommands.DiscordMessageComponentCommandAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="customId">CustomID to match on. Matching uses string.StartsWith</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Attributes.ApplicationCommands.DiscordModalSubmitAttribute">
            <summary>
            Discord Message Component Command Attribute for <see cref="F:Oxide.Ext.Discord.Entities.Interactions.InteractionType.ModalSubmit"/>
            Callback Hook Format:
            <code>
            [DiscordModalSubmitAttribute("CustomId")]
            private void ModalSubmitCommand(DiscordInteraction interaction)
            {
                Puts("ModalSubmitCommand Works!");
            }
            </code>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Attributes.ApplicationCommands.DiscordModalSubmitAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="customId">CustomID to match on. Matching uses string.StartsWith</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Attributes.BaseCommandAttribute">
            <summary>
            Represents a base attribute for commands 
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Attributes.BaseCommandAttribute.Name">
            <summary>
            Name of the command
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Attributes.BaseCommandAttribute.IsLocalized">
            <summary>
            If the command name is the localization key
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Attributes.BaseCommandAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor for a base command
            </summary>
            <param name="name">Name of the command</param>
            <param name="isLocalized">If the command name is the localization key for the command</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Attributes.BaseDiscordAttribute">
            <summary>
            Base Attribute for all Discord Extension Attributes
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Attributes.DirectMessageCommandAttribute">
            <summary>
            Used to identify direct message bot commands
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Attributes.DirectMessageCommandAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a discord command to be used in direct messages to the bot
            </summary>
            <param name="name">Name of the command</param>
            <param name="isLocalized">If the command name is the localization key for the command</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Attributes.GuildCommandAttribute">
            <summary>
            Used to identify guild bot commands
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Attributes.GuildCommandAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a discord command to be used in guild
            </summary>
            <param name="name">Name of the command</param>
            <param name="isLocalized">If the command name is the localization key for the command</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Attributes.Pooling.DiscordPoolAttribute">
            <summary>
            Attribute for setting <see cref="T:Oxide.Ext.Discord.Pooling.DiscordPluginPool"/> on a plugin
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandBuilder">
            <summary>
            Builder to use when building application commands
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandBuilder.CommandName">
            <summary>
            The Name of the command
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandBuilder.#ctor(System.String,System.String,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandType)">
            <summary>
            Creates a new Application Command Builder
            </summary>
            <param name="name">Name of the command</param>
            <param name="description">Description of the command</param>
            <param name="type">Command type</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandBuilder.#ctor(System.String,System.String,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandType,Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <summary>
            Creates a new Application Command Builder
            </summary>
            <param name="name">Name of the command</param>
            <param name="description">Description of the command</param>
            <param name="type">Command type</param>
            <param name="defaultLanguage">Language the application command is being created in</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandBuilder.AddDefaultPermissions(Oxide.Ext.Discord.Entities.Permissions.PermissionFlags)">
            <summary>
            Adds default command permissions
            </summary>
            <param name="permissions">Default Permissions for the command</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandBuilder.AllowInDirectMessages(System.Boolean)">
            <summary>
            Allows the command to be used in a direct message
            </summary>
            <param name="allow">Allows a command to be used in a direct message</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandBuilder.AddNameLocalizations(Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Adds command name localizations for a given plugin and lang key
            </summary>
            <param name="plugin">Plugin containing the localizations</param>
            <param name="langKey">Lang Key containing the localized text</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandBuilder.AddNameLocalization(System.String,Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <summary>
            Adds Application Command Name Localizations
            </summary>
            <param name="name">Localized name value</param>
            <param name="serverLocale">Oxide lang the value is in</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandBuilder.AddDescriptionLocalizations(Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Adds command description localizations for a given plugin and lang key
            </summary>
            <param name="plugin">Plugin containing the localizations</param>
            <param name="langKey">Lang Key containing the localized text</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandBuilder.AddDescriptionLocalization(System.String,Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <summary>
            Adds Application Command Description Localizations
            </summary>
            <param name="description">Localized description value</param>
            <param name="serverLocale">Oxide lang the value is in</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandBuilder.AddSubCommandGroup(System.String,System.String,System.Action{Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandGroupBuilder})">
            <summary>
            Creates a new SubCommandGroup
            SubCommandGroups contain subcommands
            Your root command can only contain 
            </summary>
            <param name="name">Name of the command</param>
            <param name="description">Description of the command</param>
            <param name="builder">Callback with the <see cref="T:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandGroupBuilder"/></param>
            <returns>this</returns>
            <exception cref="T:System.Exception">Thrown if trying to add a subcommand group to</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandBuilder.AddSubCommand(System.String,System.String,System.Action{Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationSubCommandBuilder})">
            <summary>
            Adds a sub command to the root command
            </summary>
            <param name="name">Name of the sub command</param>
            <param name="description">Description for the sub command</param>
            <param name="builder">Callback with the <see cref="T:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationSubCommandBuilder"/>"/></param>
            <returns>this</returns>
            <exception cref="T:System.Exception">Thrown if previous type was not SubCommand or Creation type is not ChatInput</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandBuilder.AddOption(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType,System.String,System.String,System.Action{Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder})">
            <summary>
            Adds a command option.
            </summary>
            <param name="type">The type of option. Cannot be SubCommand or SubCommandGroup</param>
            <param name="name">Name of the option</param>
            <param name="description">Description for the option</param>
            <param name="builder">Callback with the <see cref="T:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder"/></param>
            <returns>this</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandBuilder.Build">
            <summary>
            Returns the created command
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandBuilder.BuildCommandLocalization(System.String)">
            <summary>
            Returns a built <see cref="T:Oxide.Ext.Discord.Libraries.Templates.Commands.DiscordCommandLocalization"/> using the provided name / descriptions as the default
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandGroupBuilder">
            <summary>
            Builder for Sub Command Groups
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandGroupBuilder.CommandName">
            <summary>
            The Name of the command
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandGroupBuilder.GroupName">
            <summary>
            The Name of the group
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandGroupBuilder.AddNameLocalizations(Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Adds command name localizations for a given plugin and lang key
            </summary>
            <param name="plugin">Plugin containing the localizations</param>
            <param name="langKey">Lang Key containing the localized text</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandGroupBuilder.AddNameLocalization(System.String,Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <summary>
            Adds Application Sub Command Group Name Localizations
            </summary>
            <param name="name">Localized name value</param>
            <param name="serverLocale">Oxide lang the value is in</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandGroupBuilder.AddDescriptionLocalizations(Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Adds command description localizations for a given plugin and lang key
            </summary>
            <param name="plugin">Plugin containing the localizations</param>
            <param name="langKey">Lang Key containing the localized text</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandGroupBuilder.AddDescriptionLocalization(System.String,Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <summary>
            Adds Application Command Description Localizations
            </summary>
            <param name="description">Localized description value</param>
            <param name="serverLocale">Oxide lang the value is in</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandGroupBuilder.AddSubCommand(System.String,System.String,System.Action{Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationSubCommandBuilder})">
            <summary>
            Adds a sub command to this sub command group
            </summary>
            <param name="name">Name of the command</param>
            <param name="description">Description of the command</param>
            <param name="builder">Callback with the <see cref="T:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationSubCommandBuilder"/></param>
            <returns>this</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder">
            <summary>
            Represents a Subcommand Option Builder for SubCommands
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.CommandName">
            <summary>
            The Name of the command
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.GroupName">
            <summary>
            The Name of the group
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.SubCommandName">
            <summary>
            The Name of the Sub Command
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.OptionName">
            <summary>
            The Name of the Option
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.#ctor(System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption},Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType,System.String,System.String,Oxide.Ext.Discord.Libraries.Locale.ServerLocale,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="parent"></param>
            <param name="type"></param>
            <param name="name"></param>
            <param name="description"></param>
            <param name="defaultLanguage"></param>
            <param name="commandName"></param>
            <param name="groupName"></param>
            <param name="subCommandName"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.AddNameLocalizations(Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Adds command name localizations for a given plugin and lang key
            </summary>
            <param name="plugin">Plugin containing the localizations</param>
            <param name="langKey">Lang Key containing the localized text</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.AddNameLocalization(System.String,Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <summary>
            Adds Application Command Option Name Localization
            </summary>
            <param name="name">Localized name value</param>
            <param name="serverLocale">Oxide lang the value is in</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.AddDescriptionLocalizations(Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Adds command description localizations for a given plugin and lang key
            </summary>
            <param name="plugin">Plugin containing the localizations</param>
            <param name="langKey">Lang Key containing the localized text</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.AddDescriptionLocalization(System.String,Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <summary>
            Adds Application Command Option Description Localization
            </summary>
            <param name="description">Localized description value</param>
            <param name="serverLocale">Oxide lang the value is in</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.Required(System.Boolean)">
            <summary>
            Set the required state for the option
            </summary>
            <param name="required">If the option is required (Default: true)</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.AutoComplete(System.Boolean)">
            <summary>
            Enable auto complete for the option
            </summary>
            <param name="autoComplete">If the option support auto complete (Default: true)</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.MinValue(System.Int32)">
            <summary>
            Min Value for Integer Option
            </summary>
            <param name="minValue">Min Value</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.MinValue(System.Double)">
            <summary>
            Min Value for Number Option
            </summary>
            <param name="minValue">Min Value</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.MaxValue(System.Int32)">
            <summary>
            Max Value for Integer Option
            </summary>
            <param name="maxValue">Max Value</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.MaxValue(System.Double)">
            <summary>
            Max Value for Number Option
            </summary>
            <param name="maxValue">Max Value</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.MinLength(System.Int32)">
            <summary>
            Min Length for String Option
            Max Of 6000
            </summary>
            <param name="minLength">Min Length for the string</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.MaxLength(System.Int32)">
            <summary>
            Max Length for String Option
            Max Of 6000
            </summary>
            <param name="maxLength">Max Length</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.ChannelTypes(System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Channels.ChannelType})">
            <summary>
            Set's the channel types for the option
            </summary>
            <param name="types">Types of channels the option allows</param>
            <returns>This</returns>
            <exception cref="T:System.Exception">Thrown if <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType"/> is not Channel</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.AddChoice(System.String,System.String,Oxide.Plugins.Hash{System.String,System.String})">
            <summary>
            Adds a choice to this option of type string
            </summary>
            <param name="name">Name of the choice</param>
            <param name="value">Value of the choice</param>
            <param name="nameLocalizations">Localizations for the name</param>
            <returns>This</returns>
            <exception cref="T:System.Exception">Thrown if option type is not string</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.AddChoice(System.String,System.Int32,Oxide.Plugins.Hash{System.String,System.String})">
            <summary>
            Adds a choice to this option of type int
            </summary>
            <param name="name">Name of the choice</param>
            <param name="value">Value of the choice</param>
            <param name="nameLocalizations">Localizations for the name</param>
            <returns>This</returns>
            <exception cref="T:System.Exception">Thrown if option type is not int</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder.AddChoice(System.String,System.Double,Oxide.Plugins.Hash{System.String,System.String})">
            <summary>
            Adds a choice to this option of type double
            </summary>
            <param name="name">Name of the choice</param>
            <param name="value">Value of the choice</param>
            <param name="nameLocalizations">Localizations for the name</param>
            <returns>This</returns>
            <exception cref="T:System.Exception">Thrown if option type is not double</exception>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationSubCommandBuilder">
            <summary>
            Application Sub Command Builder
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationSubCommandBuilder.CommandName">
            <summary>
            The Name of the command
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationSubCommandBuilder.GroupName">
            <summary>
            The Name of the group
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationSubCommandBuilder.SubCommandName">
            <summary>
            The Name of the Sub Command
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationSubCommandBuilder.#ctor(System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption},System.String,System.String,Oxide.Ext.Discord.Libraries.Locale.ServerLocale,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="options">Options for the sub command</param>
            <param name="name">Name of the sub command</param>
            <param name="description">Description of the sub command</param>
            <param name="defaultLanguage"></param>
            <param name="commandName"></param>
            <param name="groupName"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationSubCommandBuilder.AddNameLocalizations(Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Adds command name localizations for a given plugin and lang key
            </summary>
            <param name="plugin">Plugin containing the localizations</param>
            <param name="langKey">Lang Key containing the localized text</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationSubCommandBuilder.AddNameLocalization(System.String,Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <summary>
            Adds Application Sub Command Name Localization
            </summary>
            <param name="name">Localized name value</param>
            <param name="serverLocale">Oxide lang the value is in</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationSubCommandBuilder.AddDescriptionLocalizations(Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Adds command description localizations for a given plugin and lang key
            </summary>
            <param name="plugin">Plugin containing the localizations</param>
            <param name="langKey">Lang Key containing the localized text</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationSubCommandBuilder.AddDescriptionLocalization(System.String,Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <summary>
            Adds Application Sub Command Description Localizations
            </summary>
            <param name="description">Localized description value</param>
            <param name="serverLocale">Oxide lang the value is in</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationSubCommandBuilder.AddOption(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType,System.String,System.String,System.Action{Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder})">
            <summary>
            Adds a new option
            </summary>
            <param name="type">Option data type (Cannot be SubCommand or SubCommandGroup)</param>
            <param name="name">Name of the option</param>
            <param name="description">Description of the option</param>
            <param name="builder">Callback with the <see cref="T:Oxide.Ext.Discord.Builders.ApplicationCommands.ApplicationCommandOptionBuilder"/></param>
            <returns>This</returns>
            <exception cref="T:System.Exception">Thrown if type is <see cref="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType.SubCommand"/> or <see cref="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType.SubCommandGroup"/></exception>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder">
            <summary>
            Builds a new DiscordEmbed
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.#ctor">
            <summary>
            Constructor for the builder creating a new embed
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.#ctor(Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed)">
            <summary>
            Constructor for the builder using an existing embed
            </summary>
            <param name="embed"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddTitle(System.String)">
            <summary>
            Adds a title to the embed message
            </summary>
            <param name="title">Title to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddDescription(System.String)">
            <summary>
            Adds a description to the embed message
            </summary>
            <param name="description">description to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddUrl(System.String)">
            <summary>
            Adds a url to the embed message
            </summary>
            <param name="url"></param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddAuthor(System.String,System.String,System.String,System.String)">
            <summary>
            Adds an author to the embed message. The author will appear above the title
            </summary>
            <param name="name">Name of the author</param>
            <param name="url">Url to go to when the authors name is clicked on</param>
            <param name="iconUrl">Icon Url to use for the author</param>
            <param name="proxyIconUrl">Backup icon url. Can be left null if you only have one icon url</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddFooter(System.String,System.String,System.String)">
            <summary>
            Adds a footer to the embed message
            </summary>
            <param name="text">Text to be added to the footer</param>
            <param name="iconUrl">Icon url to add in the footer. Appears to the left of the text</param>
            <param name="proxyIconUrl">Backup icon url. Can be left null if you only have one icon url</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddColor(Oxide.Ext.Discord.Entities.DiscordColor)">
            <summary>
            Adds a Discord Color to the embed
            </summary>
            <param name="color"></param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddColor(System.UInt32)">
            <summary>
            Adds an int based color to the embed. Color appears as a bar on the left side of the message
            </summary>
            <param name="color"></param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddColor(System.String)">
            <summary>
            Adds a hex based color. Color appears as a bar on the left side of the message
            </summary>
            <param name="color">Color in string hex format</param>
            <returns>This</returns>
            <exception cref="T:System.Exception">Exception thrown if color is outside of range</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddColor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Adds a RGB based color. Color appears as a bar on the left side of the message
            </summary>
            <param name="red">Red value</param>
            <param name="green">Green value</param>
            <param name="blue">Blue value</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddColor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a RGB based color. Color appears as a bar on the left side of the message
            </summary>
            <param name="red">Red value between 0 - 255</param>
            <param name="green">Green value between 0 - 255</param>
            <param name="blue">Blue value between 0 - 255</param>
            <returns>This</returns>
            <exception cref="T:System.Exception">Thrown if red, green, or blue is outside of range</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddColor(System.Single,System.Single,System.Single)">
            <summary>
            Adds a RGB based color. Color appears as a bar on the left side of the message
            </summary>
            <param name="red">Red value between 0 - 1</param>
            <param name="green">Green value between 0 - 1</param>
            <param name="blue">Blue value between 0 - 1</param>
            <returns>This</returns>
            <exception cref="T:System.Exception">Thrown if red, green, or blue is outside of range</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddColor(System.Double,System.Double,System.Double)">
            <summary>
            Adds a RGB based color. Color appears as a bar on the left side of the message
            </summary>
            <param name="red">Red value between 0 - 1</param>
            <param name="green">Green value between 0 - 1</param>
            <param name="blue">Blue value between 0 - 1</param>
            <returns>This</returns>
            <exception cref="T:System.Exception">Thrown if red, green, or blue is outside of range</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddNowTimestamp">
            <summary>
            Adds a timestamp to an embed with the current time
            </summary>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddTimestamp(System.DateTime)">
            <summary>
            Adds a timestamp to an embed with the given time
            </summary>
            <param name="timestamp">Timestamp to set for the embed</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddBlankField(System.Boolean)">
            <summary>
            Adds a blank field.
            If inline it will add a blank column.
            If not inline will add a blank row
            </summary>
            <param name="inline">If the field is inline</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddField(System.String,System.String,System.Boolean)">
            <summary>
            Adds a new field with the name as the title and value as the value.
            If inline will add a new column. If row will add in a new row.
            </summary>
            <param name="name">Name of the field</param>
            <param name="value">Value of the field</param>
            <param name="inline">If the field should be inlined</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddImage(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds an image to the embed. The url should point to the url of the image.
            If using attachment image you can make the url: "attachment://{image name}.{image extension}
            </summary>
            <param name="url">Url for the image</param>
            <param name="width">width of the image</param>
            <param name="height">height of the image</param>
            <param name="proxyUrl">Backup url for the image</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddThumbnail(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds a thumbnail in the top right corner of the embed
            If using attachment image you can make the url: "attachment://{image name}.{image extension}
            </summary>
            <param name="url">Url for the image</param>
            <param name="width">width of the image</param>
            <param name="height">height of the image</param>
            <param name="proxyUrl">Backup url for the image</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddVideo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds a video to the embed
            </summary>
            <param name="url">Url for the video</param>
            <param name="width">Width of the video</param>
            <param name="height">Height of the video</param>
            <param name="proxyUrl">Proxy Url for the video</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.AddProvider(System.String,System.String)">
            <summary>
            Adds a provider to the embed
            </summary>
            <param name="name">Name for the provider</param>
            <param name="url">Url for the provider</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.Build">
            <summary>
            Returns the built embed
            </summary>
            <returns><see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder.BuildList">
            <summary>
            Returns the built embed in a list
            </summary>
            <returns>List of <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed"/></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode">
            <summary>
            AutoComplete Search Mode for <see cref="T:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder"/>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode.StartsWith">
            <summary>
            Filter using StartsWith
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode.Contains">
            <summary>
            Filter using Contains
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode.EndsWith">
            <summary>
            Filter using EndsWith
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerDisplayNameMode">
            <summary>
            AutoComplete Player Search Options for <see cref="T:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder"/>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerDisplayNameMode.Default">
            <summary>
            Defaults search options
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerDisplayNameMode.IncludeClanName">
            <summary>
            Include Clan Name in search
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerDisplayNameMode.IncludePlayerId">
            <summary>
            Include Steam ID
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerDisplayNameMode.All">
            <summary>
            All display name options
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerNameFormatter">
            <summary>
            Formatter for player names
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerNameFormatter.Default">
            <summary>
            Default Player Name Formatter
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerNameFormatter.ClanName">
            <summary>
            Include clan name in the player name
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerNameFormatter.PlayerId">
            <summary>
            Include Player Id in the player name
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerNameFormatter.All">
            <summary>
            Include all name options in the player name
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerNameFormatter.Create(Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerDisplayNameMode)">
            <summary>
            Create a new Player Name formatter with the given <see cref="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerDisplayNameMode"/>
            </summary>
            <param name="mode">Mode to use for Player Display Name</param>
            <returns>A new <see cref="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerNameFormatter"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerNameFormatter.Create(System.Func{Oxide.Core.Libraries.Covalence.IPlayer,System.String})">
            <summary>
            Create a new Player Name formatter with the given Custom Name Function
            </summary>
            <param name="customNameFunc">Function to use for formatting the name</param>
            <returns>A new <see cref="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerNameFormatter"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerNameFormatter.Format(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Formats the player name
            </summary>
            <param name="player">Player to have their name formatted</param>
            <returns>Formatted player name</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.Interactions.BaseInteractionMessageBuilder`2">
            <summary>
            Represents a builder for <see cref="T:Oxide.Ext.Discord.Entities.Interactions.Response.BaseInteractionMessage"/>
            </summary>
            <typeparam name="TMessage"></typeparam>
            <typeparam name="TBuilder"></typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.BaseInteractionMessageBuilder`2.#ctor(Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction,`0)">
            <summary>
            Constructor
            </summary>
            <param name="interaction">Interaction this builder is for</param>
            <param name="message">Message to be created</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.BaseInteractionMessageBuilder`2.AsEphemeral">
            <summary>
            Marks the response as Ephemeral so only the person who executed the command can see
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder">
            <summary>
            Builder for Auto Complete Interaction
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.#ctor(Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction,Oxide.Ext.Discord.Entities.Interactions.Response.InteractionAutoCompleteMessage)">
            <summary>
            Constructor
            </summary>
            <param name="interaction">Interaction this build is for</param>
            <param name="message">Starting <see cref="T:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionAutoCompleteMessage"/></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddChoice(System.String,System.Object)">
            <summary>
            Adds a <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice"/> to the response
            </summary>
            <param name="name">Name of the choice</param>
            <param name="value">Value of the choice</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddChoice(System.String,System.Object,Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Adds a <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice"/> to the response
            </summary>
            <param name="name">Name of the choice</param>
            <param name="value">Value of the choice</param>
            <param name="plugin">Plugin to lookup the langkey for</param>
            <param name="langKey">Lang key for the name</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddChoice(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice)">
            <summary>
            Adds a <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice"/> to the response
            </summary>
            <param name="choice">Choice to be added</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddChoices(System.Collections.Generic.ICollection{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice})">
            <summary>
            Adds a collection of <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice"/> to the response
            </summary>
            <param name="choices">Choices to be added</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.CanAddChoice">
            <summary>
            Returns if the Auto Complete can add any more choices
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.Build">
            <summary>
            Returns the built message
            </summary>
            <returns><see cref="T:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionAutoCompleteMessage"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddGroups(System.String,System.StringComparison,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode)">
            <summary>
            Adds Oxide Groups to the AutoComplete
            </summary>
            <param name="filter">String to filter by</param>
            <param name="comparison"><see cref="T:System.StringComparison"/> to use</param>
            <param name="search"><see cref="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode"/> Filter search mode</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddPermissions(System.String,System.StringComparison,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode)">
            <summary>
            Adds Oxide Permissions to the AutoComplete
            </summary>
            <param name="filter">String to filter by</param>
            <param name="comparison"><see cref="T:System.StringComparison"/> to use</param>
            <param name="search"><see cref="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode"/> Filter search mode</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddGroupsWithPermission(System.String,System.String,System.StringComparison,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode)">
            <summary>
            Adds The List of Groups that have this permission
            </summary>
            <param name="permission">Permission to get groups for</param>
            <param name="filter">String to filter by</param>
            <param name="comparison"><see cref="T:System.StringComparison"/> to use</param>
            <param name="search"><see cref="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode"/> Filter search mode</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddGroupsWithoutPermission(System.String,System.String,System.StringComparison,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode)">
            <summary>
            Adds The List of Groups that have this permission
            </summary>
            <param name="permission">Permission to get groups for</param>
            <param name="filter">String to filter by</param>
            <param name="comparison"><see cref="T:System.StringComparison"/> to use</param>
            <param name="search"><see cref="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode"/> Filter search mode</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddPermissionsInGroup(System.String,System.String,System.StringComparison,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode)">
            <summary>
            Adds List of Permissions that are in the given group
            </summary>
            <param name="group">Group to get permissions for</param>
            <param name="filter">Permission filter</param>
            <param name="comparison"><see cref="T:System.StringComparison"/> to use</param>
            <param name="search"><see cref="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode"/> Filter search mode</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddPermissionsNotInGroup(System.String,System.String,System.StringComparison,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode)">
            <summary>
            Adds a List of Permissions that are not in a given group
            </summary>
            <param name="group">Group that doesn't have the permissions</param>
            <param name="filter">Permission filter</param>
            <param name="comparison"><see cref="T:System.StringComparison"/> to use</param>
            <param name="search"><see cref="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode"/> Filter search mode</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddGroupsWithPlayer(System.String,System.String,System.StringComparison,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode)">
            <summary>
            Adds The List of Groups that playerId has
            </summary>
            <param name="playerId">Player ID to get groups for</param>
            <param name="filter">String to filter by</param>
            <param name="comparison"><see cref="T:System.StringComparison"/> to use</param>
            <param name="search"><see cref="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode"/> Filter search mode</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddGroupsWithoutPlayer(System.String,System.String,System.StringComparison,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode)">
            <summary>
            Adds The List of Groups that playerId has
            </summary>
            <param name="playerId">Player ID to get groups for</param>
            <param name="filter">String to filter by</param>
            <param name="comparison"><see cref="T:System.StringComparison"/> to use</param>
            <param name="search"><see cref="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode"/> Filter search mode</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddPermissionsPlayerIn(System.String,System.String,System.StringComparison,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode)">
            <summary>
            Adds The List of Permissions that playerId has
            </summary>
            <param name="playerId">Player ID to get permissions for</param>
            <param name="filter">String to filter by</param>
            <param name="comparison"><see cref="T:System.StringComparison"/> to use</param>
            <param name="search"><see cref="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode"/> Filter search mode</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddPermissionsPlayerNotIn(System.String,System.String,System.StringComparison,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode)">
            <summary>
            Adds The List of Permissions that playerId does not have
            </summary>
            <param name="playerId">Player ID to get permissions for</param>
            <param name="filter">String to filter by</param>
            <param name="comparison"><see cref="T:System.StringComparison"/> to use</param>
            <param name="search"><see cref="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode"/> Filter search mode</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddOnlinePlayers(System.String,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerNameFormatter)">
            <summary>
            Adds Online Players to the list
            </summary>
            <param name="filter">String to filter by</param>
            <param name="formatter">Formatter for the player name</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddOfflinePlayers(System.String,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerNameFormatter)">
            <summary>
            Adds Online Players to the list
            </summary>
            <param name="filter">String to filter by</param>
            <param name="formatter">Formatter for the player name</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddAllOnlineFirstPlayers(System.String,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerNameFormatter)">
            <summary>
            Adds Online Players to the list first
            If there is still space add Offline Players
            </summary>
            <param name="filter">String to filter by</param>
            <param name="formatter">Formatter for the player name</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddAllPlayers(System.String,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerNameFormatter)">
            <summary>
            Adds Any Player to the list
            </summary>
            <param name="filter">String to filter by</param>
            <param name="formatter">Formatter for the player name</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddByPlayerId(System.String,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.PlayerNameFormatter)">
            <summary>
            Adds a player by player Id to the list
            </summary>
            <param name="playerId">Player ID to add</param>
            <param name="formatter">Formatter for the player name</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddLoadablePlugins(System.String,System.StringComparison,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode)">
            <summary>
            Adds a list of plugins that can be loaded
            </summary>
            <param name="filter">String to filter by</param>
            <param name="comparison"><see cref="T:System.StringComparison"/> to use</param>
            <param name="search"><see cref="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode"/> Filter search mode</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder.AddLoadedPlugins(System.String,System.StringComparison,Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode)">
            <summary>
            Adds a list of plugins that are currently loaded
            </summary>
            <param name="filter">String to filter by</param>
            <param name="comparison"><see cref="T:System.StringComparison"/> to use</param>
            <param name="search"><see cref="T:Oxide.Ext.Discord.Builders.Interactions.AutoComplete.AutoCompleteSearchMode"/> Filter search mode</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.Interactions.InteractionFollowupBuilder">
            <summary>
            Represents a builder for <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandFollowupCreate"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionFollowupBuilder.#ctor(Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction)">
            <summary>
            Constructor for creating a new CommandFollowupCreate
            </summary>
            <param name="interaction">Interaction this followup is for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionFollowupBuilder.#ctor(Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandFollowupCreate)">
            <summary>
            Constructor for using an existing CommandFollowupCreate
            </summary>
            <param name="interaction">Interaction this followup is for</param>
            <param name="message">Message to use</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.Interactions.InteractionModalBuilder">
            <summary>
            Builds a Modal Interaction Response Message
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionModalBuilder.#ctor(Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction)">
            <summary>
            Constructor
            </summary>
            <param name="interaction">Interaction this build is for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionModalBuilder.#ctor(Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction,Oxide.Ext.Discord.Entities.Interactions.Response.InteractionModalMessage)">
            <summary>
            Constructor
            </summary>
            <param name="interaction">Interaction this build is for</param>
            <param name="message">Starting <see cref="T:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionAutoCompleteMessage"/></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionModalBuilder.AddModalCustomId(System.String)">
            <summary>
            Adds a custom ID for the modal
            </summary>
            <param name="customId">Custom ID for the modal</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionModalBuilder.AddModalTitle(System.String)">
            <summary>
            Adds a custom ID for the modal
            </summary>
            <param name="title">Title for the Modal</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionModalBuilder.AddInputText(System.String,System.String,Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextStyles,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Adds a select menu to a new action row
            </summary>
            <param name="customId">Unique ID for the select menu</param>
            <param name="label">Label for the input text</param>
            <param name="style">Style of the Input Text</param>
            <param name="value">Default value for the Input Text</param>
            <param name="required">Is the Input Text Required to be filled out</param>
            <param name="placeholder">Text to display if no value is selected yet</param>
            <param name="minLength">The min number of options you must select</param>
            <param name="maxLength">The max number of options you can select</param>
            <returns><see cref="T:Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionModalBuilder.Build">
            <summary>
            Returns a built Modal Response Message
            </summary>
            <returns><see cref="T:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionModalMessage"/></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.Interactions.InteractionResponseBuilder">
            <summary>
            Represents a builder for <see cref="T:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionCallbackData"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionResponseBuilder.#ctor(Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction)">
            <summary>
            Constructor for creating a new InteractionCallbackData
            </summary>
            <param name="interaction">Interaction this followup is for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Interactions.InteractionResponseBuilder.#ctor(Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction,Oxide.Ext.Discord.Entities.Interactions.Response.InteractionCallbackData)">
            <summary>
            Constructor for using an existing InteractionCallbackData
            </summary>
            <param name="interaction">Interaction this followup is for</param>
            <param name="message">Message to use</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder">
            <summary>
            Builder for Message Components
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder.#ctor">
            <summary>
            Creates a new MessageComponentBuilder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder.AddActionButton(Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonStyle,System.String,System.String,System.Boolean,System.Boolean,Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji)">
            <summary>
            Adds an action button to the current action row
            </summary>
            <param name="style">Button Style <a href="https://discord.com/developers/docs/interactions/message-components#button-object-button-styles">Button Styles</a></param>
            <param name="label">The text of the button</param>
            <param name="customId">The unique id of the button. Used to identify which button was clicked</param>
            <param name="disabled">If this button is disabled</param>
            <param name="addToNewRow">Should the button be added to a new row</param>
            <param name="emoji">Emoji to display with the button</param>
            <returns><see cref="T:Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder"/></returns>
            <exception cref="T:System.Exception">
                Throw if the button style is link or if the button goes outside the max number of action rows
            </exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder.AddDummyButton(System.String,System.Boolean)">
            <summary>
            Adds a dummy button that doesn't do anything
            </summary>
            <param name="label">The text of the button</param>
            <param name="disabled">If this button is disabled</param>
            <returns><see cref="T:Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder"/></returns>
            <exception cref="T:System.Exception"> Throw if the button goes outside the max number of action rows</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder.AddLinkButton(System.String,System.String,System.Boolean,System.Boolean,Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji)">
            <summary>
            Adds a link button to the current action row
            </summary>
            <param name="label">Text on the button</param>
            <param name="url">URL for the button</param>
            <param name="disabled">if the button should be disabled</param>
            <param name="addToNewRow">Show the button be added to a new row</param>
            <param name="emoji">Emoji to display on the button</param>
            <returns><see cref="T:Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder"/></returns>
            <exception cref="T:System.Exception">Thrown if the button goes outside the max number of action rows</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder.AddSelectMenu(Oxide.Ext.Discord.Entities.Interactions.MessageComponents.MessageComponentType,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Adds a select menu to a new action row
            </summary>
            <param name="type">Select Menu Message Component Type</param>
            <param name="customId">Unique ID for the select menu</param>
            <param name="placeholder">Text to display if no value is selected yet</param>
            <param name="minValues">The min number of options you must select</param>
            <param name="maxValues">The max number of options you can select</param>
            <param name="disabled">If the select menu should be disabled</param>
            <returns><see cref="T:Oxide.Ext.Discord.Builders.MessageComponents.SelectMenuComponentBuilder"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder.AddInputText(System.String,System.String,Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextStyles,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Adds a select menu to a new action row
            </summary>
            <param name="customId">Unique ID for the select menu</param>
            <param name="label">Label for the input text</param>
            <param name="style">Style of the Input Text</param>
            <param name="value">Default value for the Input Text</param>
            <param name="required">Is the Input Text Required to be filled out</param>
            <param name="placeholder">Text to display if no value is selected yet</param>
            <param name="minLength">The min number of options you must select</param>
            <param name="maxLength">The max number of options you can select</param>
            <returns><see cref="T:Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder.Build">
            <summary>
            Returns the built action rows
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.MessageComponents.SelectMenuComponentBuilder">
            <summary>
            Builder for Select Menus
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.MessageComponents.SelectMenuComponentBuilder.AddOption(System.String,System.String,System.String,System.Boolean,Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji)">
            <summary>
            Adds an option to a select menu;
            </summary>
            <param name="label">Display text for the select option</param>
            <param name="value">Selected value for the select option</param>
            <param name="description">Description of the select option</param>
            <param name="default">Default selected option</param>
            <param name="emoji">Emoji to display with the option</param>
            <exception cref="T:System.Exception">Throw is more than 25 options are added</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.MessageComponents.SelectMenuComponentBuilder.AddChannelType(Oxide.Ext.Discord.Entities.Channels.ChannelType)">
            <summary>
            Adds an allow channel type for <see cref="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.MessageComponentType.ChannelSelect"/>
            </summary>
            <param name="type">Channel Type to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.MessageComponents.SelectMenuComponentBuilder.Build">
            <summary>
            Returns the root builder
            </summary>
            <returns><see cref="T:Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder"/></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseChannelMessageBuilder`2">
            <summary>
            Represents a builder for <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageCreate"/>
            </summary>
            <typeparam name="TMessage">Type of the message</typeparam>
            <typeparam name="TBuilder">Type of the builder</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseChannelMessageBuilder`2.#ctor(`0)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message being created</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseChannelMessageBuilder`2.AddSticker(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Adds a sticker to the message
            </summary>
            <param name="stickerId">Sticker ID to be added</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseChannelMessageBuilder`2.AddStickers(System.Collections.Generic.ICollection{Oxide.Ext.Discord.Entities.Snowflake})">
            <summary>
            Adds stickers to the message
            </summary>
            <param name="stickerIds">Sticker ID's to be added</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseChannelMessageBuilder`2.AddSticker(Oxide.Ext.Discord.Entities.Stickers.DiscordSticker)">
            <summary>
            Adds a sticker to the message
            </summary>
            <param name="sticker">Sticker to be added</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseChannelMessageBuilder`2.AddStickers(System.Collections.Generic.ICollection{Oxide.Ext.Discord.Entities.Stickers.DiscordSticker})">
            <summary>
            Adds stickers to the message
            </summary>
            <param name="stickerIds">Sticker ID's to be added</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseChannelMessageBuilder`2.AddMessageReference(Oxide.Ext.Discord.Entities.Messages.MessageReference)">
            <summary>
            Adds a <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageReference"/> to the message
            </summary>
            <param name="reference">Message Reference to be added</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseChannelMessageBuilder`2.AddReply(Oxide.Ext.Discord.Entities.Messages.DiscordMessage,System.Boolean)">
            <summary>
            Adds a <see cref="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseChannelMessageBuilder`2.AddMessageReference(Oxide.Ext.Discord.Entities.Messages.MessageReference)"/> to the message
            </summary>
            <param name="message">Message to reply to</param>
            <param name="failIfNotExists">Should the API call error if the message does not exist (Default true)</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseChannelMessageBuilder`2.AddReply(Oxide.Ext.Discord.Entities.Snowflake,System.Nullable{Oxide.Ext.Discord.Entities.Snowflake},System.Boolean)">
            <summary>
            Adds a <see cref="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseChannelMessageBuilder`2.AddMessageReference(Oxide.Ext.Discord.Entities.Messages.MessageReference)"/> to the message
            </summary>
            <param name="messageId">ID of the message to reply to</param>
            <param name="guildId">Guild ID of the message if one exists</param>
            <param name="failIfNotExists">Should the API call error if the message does not exist (Default true)</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseChannelMessageBuilder`2.SuppressNotifications(Oxide.Ext.Discord.Entities.Stickers.DiscordSticker)">
            <summary>
            Adds a sticker to the message
            </summary>
            <param name="sticker">Sticker to be added</param>
            <returns>This</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2">
            <summary>
            Represents a builder for <see cref="T:Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate"/>
            </summary>
            <typeparam name="TMessage"></typeparam>
            <typeparam name="TBuilder"></typeparam>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2.Message">
            <summary>
            Message the builder is for
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2.Builder">
            <summary>
            This builder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2.#ctor(`0)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message being created</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2.AddContent(System.String)">
            <summary>
            Adds message text
            </summary>
            <param name="content">Text to be added</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2.AsTts(System.Boolean)">
            <summary>
            Marks the message As Text-To-Speech
            </summary>
            <param name="enabled">Should TTS be enabled (Default true)</param>
            <returns>this</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2.AddEmbed(Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed)">
            <summary>
            Adds a <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed"/>
            </summary>
            <param name="embed">Embed to be added</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2.AddEmbed(Oxide.Ext.Discord.Builders.DiscordEmbedBuilder)">
            <summary>
            Adds <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed"/> created from a <see cref="T:Oxide.Ext.Discord.Builders.DiscordEmbedBuilder"/>
            </summary>
            <param name="builder">Build to add embeds from</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2.AddEmbeds(System.Collections.Generic.ICollection{Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed})">
            <summary>
            Adds a collection of <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed"/> to the response
            </summary>
            <param name="embeds">Embeds to be added</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2.AddAllowedMentions(Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMention)">
            <summary>
            Adds <see cref="T:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMention"/> to the response
            </summary>
            <param name="mention">Mentions to be added</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2.SuppressEmbeds">
            <summary>
            Suppresses embeds on this response
            </summary>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2.AddActionRow(Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ActionRowComponent)">
            <summary>
            Adds a single <see cref="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ActionRowComponent"/> 
            </summary>
            <param name="component">Component to be added</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2.AddComponents(System.Collections.Generic.ICollection{Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ActionRowComponent})">
            <summary>
            Adds a collection MessageComponents/>
            </summary>
            <param name="components">Components to be added</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2.AddComponents(Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder)">
            <summary>
            Adds MessageComponents from <see cref="T:Oxide.Ext.Discord.Builders.MessageComponents.MessageComponentBuilder"/>
            </summary>
            <param name="builder">Build to add components from</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2.AddAttachment(System.String,System.Byte[],System.String,System.String)">
            <summary>
            Adds an attachment to the message
            </summary>
            <param name="filename">Name of the file</param>
            <param name="data">byte[] of the attachment</param>
            <param name="contentType">Attachment content type</param>
            <param name="description">Description for the attachment</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseMessageBuilder`2.Build">
            <summary>
            Returns the built message
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseWebhookMessageBuilder`2">
            <summary>
            Represents a builder for <see cref="T:Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage"/>
            </summary>
            <typeparam name="TMessage">Type of the message</typeparam>
            <typeparam name="TBuilder">Type of the builder</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseWebhookMessageBuilder`2.#ctor(`0)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message being created</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseWebhookMessageBuilder`2.AddUserName(System.String)">
            <summary>
            Adds a custom username for the sender
            </summary>
            <param name="userName">Username to be displayed as the sender</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.BaseBuilders.BaseWebhookMessageBuilder`2.AddAvatarUrl(System.String)">
            <summary>
            Adds a custom avatar url for the sender
            </summary>
            <param name="avatarUrl">Avatar URL to be displayed for the sender</param>
            <returns>This</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.Messages.DiscordMessageBuilder">
            <summary>
            Represents a builder for <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageCreate"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.DiscordMessageBuilder.#ctor">
            <summary>
            Constructor creating a new message
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.DiscordMessageBuilder.#ctor(Oxide.Ext.Discord.Entities.Messages.MessageCreate)">
            <summary>
            Constructor to use existing message
            </summary>
            <param name="message">Message to use</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.Messages.WebhookMessageBuilder">
            <summary>
            Represents a builder for <see cref="T:Oxide.Ext.Discord.Builders.Messages.WebhookMessageBuilder"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.WebhookMessageBuilder.#ctor">
            <summary>
            Constructor for creating a new WebhookCreateMessage
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.Messages.WebhookMessageBuilder.#ctor(Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage)">
            <summary>
            Constructor for using an existing WebhookCreateMessage
            </summary>
            <param name="message">Message to use</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Builders.QueryStringBuilder">
            <summary>
            Builder used to build query strings for urls
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.QueryStringBuilder.Create(Oxide.Ext.Discord.Pooling.DiscordPluginPool)">
            <summary>
            Creates a pooled <see cref="T:Oxide.Ext.Discord.Builders.QueryStringBuilder"/>
            </summary>
            <returns><see cref="T:Oxide.Ext.Discord.Builders.QueryStringBuilder"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.QueryStringBuilder.Add(System.String,System.String)">
            <summary>
            Add a key value pair to the query string
            </summary>
            <param name="key">Key name</param>
            <param name="value">Key value</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.QueryStringBuilder.AddList``1(System.String,System.Collections.Generic.List{``0},System.String)">
            <summary>
            Add a list of values with the specified separator
            </summary>
            <param name="key">Key name</param>
            <param name="list">List to be added</param>
            <param name="separator">Separator for the list</param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.QueryStringBuilder.ToString">
            <summary>
            Returns the query string as a string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.QueryStringBuilder.ToStringAndFree">
            <summary>
            Returns the query string and returns the builder back to the pool
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.QueryStringBuilder.EnterPool">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Builders.QueryStringBuilder.LeavePool">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Cache.DiscordPluginCache">
            <summary>
            Represents a cache for Loaded and Loadable plugins
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Cache.DiscordPluginCache.GetLoadedPlugins">
            <summary>
            Returns a list of plugins loaded by oxide
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Cache.DiscordPluginCache.GetLoadablePlugins">
            <summary>
            Returns a list of plugins that can be loaded by oxide
            Already loaded plugins are excluded from the list
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Cache.Entities.EntityCache`1">
            <summary>
            Cache for {T} 
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Cache.Entities.EntityCache`1.Cache">
            <summary>
            Readonly Cache of <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Cache.Entities.EntityCache`1.Get(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns the cached entity with the given ID; default(T) otherwise
            </summary>
            <param name="id">ID of the entity</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Cache.Entities.EntityCache`1.GetOrCreate(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns a cached for the given user ID or creates a new with that ID
            </summary>
            <param name="id">User ID to lookup in the cache</param>
            <returns>Cached <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Cache.Entities.EntityCache`1.Update(`0)">
            <summary>
            Updates the cached entity
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Cache.EnumCache`1">
            <summary>
            Represents a cache of enum strings
            </summary>
            <typeparam name="T">Enum type</typeparam>
        </member>
        <member name="F:Oxide.Ext.Discord.Cache.EnumCache`1.Values">
            <summary>
            Readonly Collection of Enum Values
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Cache.EnumCache`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Cache.EnumCache`1.ToString(`0)">
            <summary>
            Returns the string representation of the enum
            </summary>
            <param name="value">Enum value</param>
            <returns>Enum value as string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Cache.EnumCache`1.ToLower(`0)">
            <summary>
            Returns the lowered string representation of the enum
            </summary>
            <param name="value">Enum value</param>
            <returns>Enum value as lowered string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Cache.EnumCache`1.ToNumber(`0)">
            <summary>
            Converts the enum to it's number form as a string
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Cache.FileAttachmentCache">
            <summary>
            Caches file names when sending attachments
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Cache.ServerPlayerCache">
            <summary>
            Cache for server <see cref="T:Oxide.Core.Libraries.Covalence.IPlayer"/>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Cache.ServerPlayerCache.Cache">
            <summary>
            Readonly Cache of <see cref="T:Oxide.Core.Libraries.Covalence.IPlayer"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Cache.ServerPlayerCache.GetPlayerById(System.String)">
            <summary>
            Returns the <see cref="T:Oxide.Core.Libraries.Covalence.IPlayer"/> for the given ID
            </summary>
            <param name="id">ID of the player</param>
            <returns><see cref="T:Oxide.Core.Libraries.Covalence.IPlayer"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Cache.ServerPlayerCache.GetOrAddPlayerById(System.String)">
            <summary>
            Returns the <see cref="T:Oxide.Core.Libraries.Covalence.IPlayer"/> for the given ID
            </summary>
            <param name="id">ID of the player</param>
            <returns><see cref="T:Oxide.Core.Libraries.Covalence.IPlayer"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Cache.ServerPlayerCache.GetOnlinePlayers(System.String)">
            <summary>
            Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> matching player names that are online
            </summary>
            <param name="name">Name to match on</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Cache.ServerPlayerCache.GetAllPlayers(System.String)">
            <summary>
            Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> matching player names
            </summary>
            <param name="name">Name to match on</param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Cache.StringCache`1">
            <summary>
            Caches strings from {T} ToString method
            </summary>
            <typeparam name="T">Type for the cache</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Cache.StringCache`1.ToString(`0)">
            <summary>
            Returns a cached ToString call of type {T}
            </summary>
            <param name="value">value to ToString</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Cache.StringCache`1.ToLower(`0)">
            <summary>
            Returns the lowered string representation of type {T}
            </summary>
            <param name="value">value to lower</param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Callbacks.BaseAsyncCallback">
            <summary>
            Represents a base callback to be used when needing a lambda callback so no delegate or class is generated
            This class is pooled to prevent allocations
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Callbacks.BaseAsyncCallback._callback">
            <summary>
            The callback to be called by the delegate
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Callbacks.BaseAsyncCallback.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Callbacks.BaseAsyncCallback.HandleCallback">
            <summary>
            Overridden in the child class to handle the callback
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Callbacks.BaseAsyncCallback.GetExceptionMessage">
            <summary>
            Returns Exception message if an error occurs 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Callbacks.BaseAsyncCallback.Run">
            <summary>
            Runs the callback using async
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Callbacks.BaseCallback">
            <summary>
            Represents a base callback to be used when needing a lambda callback so no delegate or class is generated
            This class is pooled to prevent allocations
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Callbacks.BaseCallback.Callback">
            <summary>
            The callback to be called by the delegate
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Callbacks.BaseCallback.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Callbacks.BaseCallback.HandleCallback">
            <summary>
            Overridden in the child class to handle the callback
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Callbacks.BaseCallback.Run">
            <summary>
            Run the callback
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Callbacks.BaseCallback`1">
            <summary>
            Represents a base callback to be used when needing a lambda callback so no delegate or class is generated
            This class is pooled to prevent allocations
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Callbacks.BaseCallback`1._callback">
            <summary>
            The callback to be called by the delegate
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Callbacks.BaseCallback`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Callbacks.BaseCallback`1.HandleCallback(`0)">
            <summary>
            Overridden in the child class to handle the callback
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Callbacks.BaseCallback`1.Start(`0)">
            <summary>
            Run the callback
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Callbacks.BaseNextTickCallback">
            <summary>
            Represents a callback that calls next tick
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Callbacks.BaseNextTickCallback.Run">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Clients.BotClient">
            <summary>
            Represents a bot that is connected to discord
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Clients.BotClient.Servers">
            <summary>
            All the servers that this bot is in
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Clients.BotClient.DirectMessagesByChannelId">
            <summary>
            All the direct messages that we have seen by channel Id
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Clients.BotClient.DirectMessagesByUserId">
            <summary>
            All the direct messages that we have seen by User ID
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Clients.BotClient.Initialized">
            <summary>
            If the connection is initialized and not disconnected
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Clients.BotClient.Application">
            <summary>
            Application reference for this bot
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Clients.BotClient.BotUser">
            <summary>
            Bot User
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Clients.BotClient.Rest">
            <summary>
            Rest handler for all discord API calls
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Clients.BotClient.IsFullyLoaded">
            <summary>
            Returns if the bot has fully loaded.
            All guilds are loaded and if <see cref="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.GuildMembers"/> is specified all guild members have been loaded
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Clients.BotClient.Clients">
            <summary>
            List of all clients that are using this bot client
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.#ctor(Oxide.Ext.Discord.Connections.BotConnection)">
            <summary>
            Connection settings to use for the bot
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.ConnectWebSocket">
            <summary>
            Connects the websocket to discord. Should only be called if the websocket is disconnected
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.DisconnectWebsocket(System.Boolean,System.Boolean)">
            <summary>
            Close the websocket with discord
            </summary>
            <param name="reconnect">Should we attempt to reconnect to discord after closing</param>
            <param name="resume">Should we attempt to resume the previous session</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.ShutdownBot">
            <summary>
            Called when bot client is no longer used by any client and can be shutdown.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.AddClient(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Plugins.Setup.PluginSetup)">
            <summary>
            Add a client to this bot client
            </summary>
            <param name="client">Client to add to the bot</param>
            <param name="setup">Setup data for the plugin</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.RemoveClient(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Remove a client from the bot client
            If not clients are left bot will shutdown
            </summary>
            <param name="client">Client to remove from bot client</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.GetClientPluginList">
            <summary>
            Returns the list of plugins for this bot
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.GetFirstClient">
            <summary>
            Returns the first client connected to this bot.
            Only use for Gateway API call
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.SendWebSocketCommand(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Gateway.Commands.GatewayCommandCode,System.Object)">
            <summary>
            Sends a websocket command
            </summary>
            <param name="client">Client sending the command</param>
            <param name="opCode"><see cref="T:Oxide.Ext.Discord.Entities.Gateway.Commands.GatewayCommandCode"/> OP Code for the command</param>
            <param name="data">Command Payload</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.GetGuild(System.Nullable{Oxide.Ext.Discord.Entities.Snowflake})">
            <summary>
            Returns a guild for the specific ID
            </summary>
            <param name="guildId">ID of the guild</param>
            <returns>Guild with the specified ID</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.GetChannel(Oxide.Ext.Discord.Entities.Snowflake,System.Nullable{Oxide.Ext.Discord.Entities.Snowflake})">
            <summary>
            Returns the channel for the given channel ID.
            If guild ID is null it will search for a direct message channel
            If guild ID is not null it will search for a guild channel
            </summary>
            <param name="channelId"></param>
            <param name="guildId"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.AddGuild(Oxide.Ext.Discord.Entities.Guilds.DiscordGuild)">
            <summary>
            Adds a guild to the list of servers a bot is in
            </summary>
            <param name="guild"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.AddGuildOrUpdate(Oxide.Ext.Discord.Entities.Guilds.DiscordGuild)">
            <summary>
            Adds a guild if it does not exist or updates the guild with
            </summary>
            <param name="guild"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.RemoveGuild(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Removes guild from the list of servers a bot is in
            </summary>
            <param name="guildId">Guild to remove from bot</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.AddDirectChannel(Oxide.Ext.Discord.Entities.Channels.DiscordChannel)">
            <summary>
            Adds a Direct Message Channel to the bot cache
            </summary>
            <param name="channel">Channel to be added</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.RemoveDirectMessageChannel(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Removes a direct message channel if it exists
            </summary>
            <param name="id">ID of the channel to remove</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.BotClient.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Clients.DiscordClient">
            <summary>
            Represents the object a plugin uses to connects to discord
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Clients.DiscordClient.Plugin">
            <summary>
            Which plugin is the owner of this client
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Clients.DiscordClient.PluginId">
            <summary>
            The ID of the plugin
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Clients.DiscordClient.PluginName">
            <summary>
            The full plugin name including author and version
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Clients.DiscordClient.Bot">
            <summary>
            The bot client that is unique to the Token used
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Clients.DiscordClient.Connection">
            <summary>
            Settings used to connect to discord and configure the extension
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.DiscordClient.#ctor(Oxide.Core.Plugins.Plugin)">
            <summary>
            Constructor for a discord client
            </summary>
            <param name="plugin">Plugin that will own this discord client</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.DiscordClient.Connect(System.String,Oxide.Ext.Discord.Entities.Gateway.GatewayIntents)">
            <summary>
            Starts a connection to discord with the given apiKey and intents
            </summary>
            <param name="apiKey">API key for the connecting bot</param>
            <param name="intents">Intents the bot needs in order to function</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.DiscordClient.Connect(Oxide.Ext.Discord.Connections.BotConnection)">
            <summary>
            Starts a connection to discord with the given discord settings
            </summary>
            <param name="connection">Discord connection settings</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.DiscordClient.Disconnect">
            <summary>
            Disconnects this client from discord
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.DiscordClient.IsConnected">
            <summary>
            Returns if the client is connected to a bot and if the bot is initialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.DiscordClient.RequestGuildMembers(Oxide.Ext.Discord.Entities.Gateway.Commands.GuildMembersRequestCommand)">
            <summary>
            Used to request guild members from discord for a specific guild
            </summary>
            <param name="request">Request for guild members</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.DiscordClient.UpdateVoiceState(Oxide.Ext.Discord.Entities.Gateway.Commands.UpdateVoiceStatusCommand)">
            <summary>
            Used to update the voice state for the bot
            </summary>
            <param name="voiceState"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Clients.DiscordClient.UpdateStatus(Oxide.Ext.Discord.Entities.Gateway.Commands.UpdatePresenceCommand)">
            <summary>
            Used to update the bots status in discord
            </summary>
            <param name="presenceUpdate"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Configuration.DiscordCommandsConfig">
            <summary>
            Represents discord extension command configuration
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Configuration.DiscordCommandsConfig.CommandPrefixes">
            <summary>
            Array of command prefixes for discord commands
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Configuration.DiscordConfig">
            <summary>
            Represents Discord Extension Config
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Configuration.DiscordConfig.Commands">
            <summary>
            Discord Command Options
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Configuration.DiscordConfig.Logging">
            <summary>
            Discord Logging Options
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Configuration.DiscordConfig.Users">
            <summary>
            Discord Users Options
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Configuration.DiscordConfig.Search">
            <summary>
            Discord Logging Options
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Configuration.DiscordConfig.Validation">
            <summary>
            Discord Logging Options
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Configuration.DiscordConfig.#ctor(System.String)">
            <summary>
            Constructor for discord config
            </summary>
            <param name="filename">Filename to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Configuration.DiscordConfig.Load(System.String)">
            <summary>
            Load the config file and populate it.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Configuration.DiscordLoggingConfig">
            <summary>
            Represents Discord Extension Logging Config
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Configuration.DiscordLoggingConfig.ConsoleLogLevel">
            <summary>
            Server Console Log Level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Configuration.DiscordLoggingConfig.FileLogLevel">
            <summary>
            File Log Level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Configuration.DiscordLoggingConfig.HideDiscordErrorCodes">
            <summary>
            Discord Response Error codes that will not be logged
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Configuration.DiscordUsersConfig">
            <summary>
            Discord User Config
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Configuration.DiscordUsersConfig.DmBlockedDuration">
            <summary>
            How long to block DM's after we receive a 50007 Discord API Error code
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Configuration.DiscordValidationConfig">
            <summary>
            Discord Validation Config
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Configuration.DiscordValidationConfig.EnableValidation">
            <summary>
            Enables request validation
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Connections.BotConnection">
            <summary>
            Bot Connection Settings
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Connections.BotConnection.ApiToken">
            <summary>
            API token for the bot
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Connections.BotConnection.Intents">
            <summary>
            Intents that your bot needs to work
            See <see cref="T:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Connections.BotConnection.LogLevel">
            <summary>
            Discord Extension Logging Level.
            See <see cref="P:Oxide.Ext.Discord.Connections.BotConnection.LogLevel"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Connections.BotConnection.HiddenToken">
            <summary>
            Hidden Bot Token. Used when needing to display the token.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Connections.BotConnection.ApplicationId">
            <summary>
            Application ID of the Bot Token
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Connections.BotConnection.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Connections.BotConnection.#ctor(System.String,Oxide.Ext.Discord.Entities.Gateway.GatewayIntents,Oxide.Ext.Discord.Logging.DiscordLogLevel)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Connections.BotConnection.HasIntents(Oxide.Ext.Discord.Entities.Gateway.GatewayIntents)">
            <summary>
            Returns if the settings has the given intents
            </summary>
            <param name="intents">Intents to be compared against</param>
            <returns>True if settings has the given intents; False otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Connections.BotConnection.HasAnyIntent(Oxide.Ext.Discord.Entities.Gateway.GatewayIntents)">
            <summary>
            Returns if the settings has any intent specified
            </summary>
            <param name="intents">Intents to compare against</param>
            <returns>True if settings has at least one of the given intents</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Connections.BotTokenData">
            <summary>
            Represents the parsed Bot Token data
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Connections.BotTokenData.HiddenToken">
            <summary>
            Hidden Token. Used when Displaying
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Connections.BotTokenData.ApplicationId">
            <summary>
            Application ID of the token
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Connections.BotTokenData.#ctor(System.String,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Constructor
            </summary>
            <param name="hiddenToken"></param>
            <param name="applicationId"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Constants.DiscordEncoding">
            <summary>
            Encoding format the Discord Uses
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordEncoding.Encoding">
            <summary>
            Encoding format used by Discord
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Constants.DiscordEndpoints">
            <summary>
            Discord API endpoint settings
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Constants.DiscordEndpoints.Rest">
            <summary>
            Represents Discord Rest API endpoints
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordEndpoints.Rest.DiscordBaseUrl">
            <summary>
            Base URL for Discord
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordEndpoints.Rest.ApiVersion">
            <summary>
            API Version for Rest requests
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordEndpoints.Rest.ApiUrl">
            <summary>
            Discord API Url
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Constants.DiscordEndpoints.Websocket">
            <summary>
            Represents Discord Websocket Connection Args
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordEndpoints.Websocket.Version">
            <summary>
            Which websocket version to use
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordEndpoints.Websocket.Encoding">
            <summary>
            How the data sent / received will be encoded
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordEndpoints.Websocket.WebsocketArgs">
            <summary>
            Generated connection string for the websocket
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Constants.DiscordExtHooks">
            <summary>
            Represents all hooks available in the discord extension
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.AllHooks">
            <summary>
            Hooks that are called on Discord Plugins
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.PluginHooks">
            <summary>
            Hooks that are called on Discord Plugins
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.GlobalHooks">
            <summary>
            Hooks that are call globally
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.GatewayIntentHooks">
            <summary>
            A mapping of Gateway Intent to Hooks
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.HookGatewayIntent">
            <summary>
            A mapping of Hooks required Gateway Intent
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Constants.DiscordExtHooks.IsGlobalHook(System.String)">
            <summary>
            Returns true if the hook is a Discord Extension Global Hook
            </summary>
            <param name="hook">Name of the hook</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Constants.DiscordExtHooks.IsPluginHook(System.String)">
            <summary>
            Returns true if the hook is a Discord Extension Plugin Hook
            </summary>
            <param name="hook">Name of the hook</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Constants.DiscordExtHooks.IsDiscordHook(System.String)">
            <summary>
            Returns true if the hook is a Discord Extension Hook
            </summary>
            <param name="hook">Name of the hook</param>
            <returns></returns>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordClientCreated">
            <code>
            void OnDiscordClientCreated()
            {
                Puts("OnDiscordClientCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordBotFullyLoaded">
            <code>
            void OnDiscordBotFullyLoaded()
            {
                Puts("OnDiscordBotFullyLoaded Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordWebsocketOpened">
            <code>
            void OnDiscordWebsocketOpened()
            {
                Puts("OnDiscordWebsocketOpened Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordWebsocketClosed">
            <code>
            void OnDiscordWebsocketClosed(string reason, ushort code, bool wasClean)
            {
                Puts("OnDiscordWebsocketClosed Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordWebsocketErrored">
            <code>
            void OnDiscordWebsocketErrored(Exception ex, string message)
            {
                Puts("OnDiscordWebsocketErrored Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordSetupHeartbeat">
            <code>
            void OnDiscordSetupHeartbeat(float heartbeat)
            {
                Puts("OnDiscordHeartbeatSent Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordHeartbeatSent">
            <code>
            void OnDiscordHeartbeatSent()
            {
                Puts("OnDiscordHeartbeatSent Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordPlayerLinked">
            <code>
            void OnDiscordPlayerLinked(IPlayer player, DiscordUser discord)
            {
                Puts("OnDiscordPlayerLinked Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordPlayerUnlink">
            <code>
            void OnDiscordPlayerUnlink(IPlayer player, DiscordUser discord)
            {
                Puts("OnDiscordPlayerUnlink Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordPlayerUnlinked">
            <code>
            void OnDiscordPlayerUnlinked(IPlayer player, DiscordUser discord)
            {
                Puts("OnDiscordPlayerUnlinked Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGatewayReady">
            <code>
            void OnDiscordGatewayReady(GatewayReadyEvent ready)
            {
                Puts("OnDiscordGatewayReady Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGatewayResumed">
            <code>
            void OnDiscordGatewayResumed(GatewayResumedEvent resume)
            {
                Puts("OnDiscordGatewayResumed Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectChannelCreated">
            <code>
            void OnDiscordDirectChannelCreated(Channel channel)
            {
                Puts("OnDiscordDirectChannelCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildChannelCreated">
            <code>
            void OnDiscordGuildChannelCreated(Channel channel, DiscordGuild guild)
            {
                Puts("OnDiscordGuildChannelCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectChannelUpdated">
            <code>
            Note: previous will be null if previous channel not found
            void OnDiscordDirectChannelUpdated(Channel channel, DiscordChannel previous)
            {
                Puts("OnDiscordDirectChannelUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildChannelUpdated">
            <code>
            void OnDiscordGuildChannelUpdated(DiscordChannel channel, DiscordChannel previous, DiscordGuild guild)
            {
                Puts("OnDiscordGuildChannelUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectChannelDeleted">
            <code>
            Note: Not sure if this will ever happen but we handle it if it does
            void OnDiscordDirectChannelDeleted(DiscordChannel channel)
            {
                Puts("OnDiscordDirectChannelDeleted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildChannelDeleted">
            <code>
            void OnDiscordGuildChannelDeleted(DiscordChannel channel, DiscordGuild guild)
            {
                Puts("OnDiscordGuildChannelDeleted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectChannelPinsUpdated">
            <code>
            Note: Channel will be null if we haven't seen it yet
            void OnDiscordDirectChannelPinsUpdated(ChannelPinsUpdatedEvent update, DiscordChannel channel)
            {
                Puts("OnDiscordDirectChannelPinsUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildChannelPinsUpdated">
            <code>
            void OnDiscordGuildChannelPinsUpdated(ChannelPinsUpdatedEvent update, DiscordChannel channel, DiscordGuild guild)
            {
                Puts("OnDiscordGuildChannelPinsUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildCreated">
            <code>
            void OnDiscordGuildCreated(GuildDiscordGuild guild)
            {
                Puts("OnDiscordGuildCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildUpdated">
            <code>
            Note: previous will be null if guild previously not loaded
            void OnDiscordGuildUpdated(DiscordGuild guild, DiscordGuild previous)
            {
                Puts("OnDiscordGuildUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildUnavailable">
            <code>
            void OnDiscordGuildUnavailable(DiscordGuild guild)
            {
                Puts("OnDiscordGuildUnavailable Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildDeleted">
            <code>
            void OnDiscordGuildDeleted(DiscordGuild guild)
            {
                Puts("OnDiscordGuildDeleted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberBanned">
            <code>
            void OnDiscordGuildMemberBanned(GuildMemberBannedEvent ban, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberBanned Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberUnbanned">
            <code>
            void OnDiscordGuildMemberUnbanned(GuildMemberBannedEvent ban, DiscordGuild guild)
            {
                Puts("OnDiscordGuildBanRemoved Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildEmojisUpdated">
            <code>
            void OnDiscordGuildEmojisUpdated(GuildEmojisUpdatedEvent emojis, Hash&lt;Snowflake, DiscordEmoji&gt; previous, DiscordGuild guild)
            {
                Puts("OnDiscordGuildEmojisUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildStickersUpdated">
            <code>
            void OnDiscordGuildStickersUpdated(GuildStickersUpdatedEvent stickers, Hash&lt;Snowflake, DiscordSticker&gt; previous, DiscordGuild guild)
            {
                Puts("OnDiscordGuildStickersUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildIntegrationsUpdated">
            <code>
            void OnDiscordGuildIntegrationsUpdated(GuildIntegrationsUpdatedEvent integration, DiscordGuild guild)
            {
                Puts("OnDiscordGuildIntegrationsUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberAdded">
            <code>
            void OnDiscordGuildMemberAdded(GuildMemberAddedEvent member, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberAdded Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberRemoved">
            <code>
            void OnDiscordGuildMemberRemoved(GuildMemberRemovedEvent member, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberRemoved Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberUpdated">
            <code>
            void OnDiscordGuildMemberUpdated(GuildMemberUpdatedEvent member, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberNicknameUpdated">
            <code>
            void OnDiscordGuildMemberNicknameUpdated(GuildMember member, string oldNickname, string newNickname, DateTime? lastNicknameUpdate, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberNicknameUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberAvatarUpdated">
            <code>
            void OnDiscordGuildMemberAvatarUpdated(GuildMember member, string oldAvatar, string newAvatar, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberAvatarUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberDeafened">
            <code>
            void OnDiscordGuildMemberDeafened(GuildMember member, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberDeafened Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberUndeafened">
            <code>
            void OnDiscordGuildMemberUndeafened(GuildMember member, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberUndeafened Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberMuted">
            <code>
            void OnDiscordGuildMemberMuted(GuildMember member, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberMuted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberUnmuted">
            <code>
            void OnDiscordGuildMemberUnmuted(GuildMember member, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberUnmuted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberTimeout">
            <code>
            void OnDiscordGuildMemberTimeout(GuildMember member, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberTimeout Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberTimeoutEnded">
            <code>
            void OnDiscordGuildMemberTimeoutEnded(GuildMember member, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberTimeoutEnded Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberBoosted">
            <code>
            void OnDiscordGuildMemberBoosted(GuildMember member, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberBoosted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberBoostExtended">
            <code>
            void OnDiscordGuildMemberBoostExtended(GuildMember member, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberBoostExtended Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberBoostEnded">
            <code>
            void OnDiscordGuildMemberBoostEnded(GuildMember member, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberBoostEnded Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberRoleAdded">
            <code>
            void OnDiscordGuildMemberRoleAdded(GuildMember member, Snowflake roleId, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberRoleAdded Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberRoleRemoved">
            <code>
            void OnDiscordGuildMemberRoleRemoved(GuildMember member, Snowflake roleId, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberRoleRemoved Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMembersLoaded">
            <code>
            void OnDiscordGuildMembersLoaded(DiscordGuild guild)
            {
                Puts("OnDiscordGuildMembersLoaded Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMembersChunk">
            <code>
            void OnDiscordGuildMembersChunk(GuildMembersChunkEvent chunk, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMembersChunk Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildRoleCreated">
            <code>
            void OnDiscordGuildRoleCreated(DiscordRole role, DiscordGuild guild)
            {
                Puts("OnDiscordGuildRoleCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildRoleUpdated">
            <code>
            void OnDiscordGuildRoleUpdated(DiscordRole role, DiscordRole previous, DiscordGuild guild)
            {
                Puts("OnDiscordGuildRoleUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildRoleDeleted">
            <code>
            void OnDiscordGuildRoleDeleted(DiscordRole role, DiscordGuild guild)
            {
                Puts("OnDiscordGuildRoleDeleted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildScheduledEventCreated">
            <code>
            void OnDiscordGuildScheduledEventCreated(GuildScheduledEvent guildEvent, DiscordGuild guild)
            {
                Puts("OnDiscordGuildScheduledEventCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildScheduledEventUpdated">
            <code>
            void OnDiscordGuildScheduledEventUpdated(GuildScheduledEvent guildEvent, DiscordGuild guild)
            {
                Puts("OnDiscordGuildScheduledEventUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildScheduledEventDeleted">
            <code>
            void OnDiscordGuildScheduledEventDeleted(GuildScheduledEvent guildEvent, DiscordGuild guild)
            {
                Puts("OnDiscordGuildScheduledEventDeleted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildScheduledEventUserAdded">
            <code>
            void OnDiscordGuildScheduledEventUserAdded(GuildScheduleEventUserAddedEvent added, GuildScheduledEvent, scheduledEvent, DiscordGuild guild)
            {
                Puts("OnDiscordGuildScheduledEventUserAdded Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildScheduledEventUserRemoved">
            <code>
            void OnDiscordGuildScheduledEventUserRemoved(GuildScheduleEventUserRemovedEvent removed, GuildScheduledEvent, scheduledEvent, DiscordGuild guild)
            {
                Puts("OnDiscordGuildScheduledEventUserRemoved Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectMessageCreated">
            <code>
            Note: Channel may be null if we haven't seen it yet
            void OnDiscordDirectMessageCreated(DiscordMessage message, DiscordChannel channel)
            {
                Puts("OnDiscordDirectMessageCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMessageCreated">
            <code>
            void OnDiscordGuildMessageCreated(DiscordMessage message, DiscordChannel channel, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMessageCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectMessageUpdated">
            <code>
            void OnDiscordDirectMessageUpdated(DiscordMessage message, DiscordChannel channel)
            {
                Puts("OnDiscordDirectMessageUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMessageUpdated">
            <code>
            void OnDiscordDirectMessageUpdated(DiscordMessage message, DiscordChannel channel)
            {
                Puts("OnDiscordDirectMessageUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectMessageDeleted">
            <code>
            void OnDiscordDirectMessageDeleted(DiscordMessage message, DiscordChannel channel)
            {
                Puts("OnDiscordDirectMessageDeleted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMessageDeleted">
            <code>
            void OnDiscordDirectMessageDeleted(DiscordMessage message, DiscordChannel channel, DiscordGuild guild)
            {
                Puts("OnDiscordDirectMessageDeleted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectMessagesBulkDeleted">
            <code>
            void OnDiscordDirectMessagesBulkDeleted(List&lt;Snowflake&gt; messageIds, DiscordChannel channel)
            {
                Puts("OnDiscordDirectMessagesBulkDeleted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMessagesBulkDeleted">
            <code>
            void OnDiscordGuildMessagesBulkDeleted(List&lt;Snowflake&gt; messageIds, DiscordChannel channel, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMessagesBulkDeleted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectMessageReactionAdded">
            <code>
            void OnDiscordDirectMessageReactionAdded(MessageReactionAddedEvent reaction, DiscordChannel channel)
            {
                Puts("OnDiscordDirectMessageReactionAdded Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMessageReactionAdded">
            <code>
            void OnDiscordGuildMessageReactionAdded(MessageReactionAddedEvent reaction, DiscordChannel channel, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMessageReactionAdded Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectMessageReactionRemoved">
            <code>
            void OnDiscordDirectMessageReactionRemoved(MessageReactionRemovedEvent reaction, DiscordChannel channel)
            {
                Puts("OnDiscordDirectMessageReactionRemoved Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMessageReactionRemoved">
            <code>
            void OnDiscordGuildMessageReactionRemoved(MessageReactionRemovedEvent reaction, DiscordChannel channel, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMessageReactionRemoved Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectMessageReactionRemovedAll">
            <code>
            void OnDiscordDirectMessageReactionRemovedAll(MessageReactionRemovedAllEmojiEvent reaction, DiscordChannel channel)
            {
                Puts("OnDiscordDirectMessageReactionRemovedAll Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMessageReactionRemovedAll">
            <code>
            void OnDiscordGuildMessageReactionRemovedAll(MessageReactionRemovedAllEmojiEvent reaction, DiscordChannel channel, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMessageReactionRemovedAll Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectMessageReactionEmojiRemoved">
            <code>
            void OnDiscordDirectMessageReactionEmojiRemoved(MessageReactionRemovedAllEmojiEvent reaction, DiscordChannel channel)
            {
                Puts("OnDiscordDirectMessageReactionEmojiRemoved Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMessageReactionEmojiRemoved">
            <code>
            void OnDiscordGuildMessageReactionEmojiRemoved(MessageReactionRemovedAllEmojiEvent reaction, DiscordChannel channel, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMessageReactionEmojiRemoved Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildMemberPresenceUpdated">
            <code>
            void OnDiscordGuildMemberPresenceUpdated(PresenceUpdatedEvent update, GuildMember member, DiscordGuild guild)
            {
                Puts("OnDiscordGuildMemberPresenceUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectTypingStarted">
            <code>
            void OnDiscordDirectTypingStarted(TypingStartedEvent typing, DiscordChannel channel)
            {
                Puts("OnDiscordDirectTypingStarted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildTypingStarted">
            <code>
            void OnDiscordGuildTypingStarted(TypingStartedEvent typing, DiscordChannel channel, DiscordGuild guild)
            {
                Puts("OnDiscordGuildTypingStarted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordUserUpdated">
            <code>
            void OnDiscordUserUpdated(DiscordUser user)
            {
                Puts("OnDiscordUserUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectVoiceStateUpdated">
            <code>
            void OnDiscordDirectVoiceStateUpdated(VoiceState voice, DiscordChannel channel)
            {
                Puts("OnDiscordDirectVoiceStateUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildVoiceStateUpdated">
            <code>
            void OnDiscordGuildVoiceStateUpdated(VoiceState voice, DiscordChannel channel, DiscordGuild guild)
            {
                Puts("OnDiscordGuildVoiceStateUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildVoiceServerUpdated">
            <code>
            void OnDiscordGuildVoiceServerUpdated(VoiceServerUpdatedEvent voice, DiscordChannel channel, DiscordGuild guild)
            {
                Puts("OnDiscordGuildVoiceServerUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildWebhookUpdated">
            <code>
            void OnDiscordGuildWebhookUpdated(WebhooksUpdatedEvent webhook, DiscordChannel channel, DiscordGuild guild)
            {
                Puts("OnDiscordGuildWebhookUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectInviteCreated">
            <code>
            void OnDiscordDirectInviteCreated(InviteCreatedEvent invite, DiscordChannel channel)
            {
                Puts("OnDiscordDirectInviteCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildInviteCreated">
            <code>
            void OnDiscordGuildInviteCreated(InviteCreatedEvent invite, DiscordChannel channel, DiscordGuild guild)
            {
                Puts("OnDiscordGuildInviteCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordDirectInviteDeleted">
            <code>
            void OnDiscordDirectInviteDeleted(InviteCreatedEvent invite, DiscordChannel channel)
            {
                Puts("OnDiscordDirectInviteDeleted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildInviteDeleted">
            <code>
            void OnDiscordGuildInviteDeleted(InviteCreatedEvent invite, DiscordChannel channel, DiscordGuild guild)
            {
                Puts("OnDiscordGuildInviteDeleted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordApplicationCommandPermissionsUpdated">
            <code>
            void OnDiscordApplicationCommandPermissionsUpdated(CommandPermissions permissions)
            {
                Puts("OnDiscordInteractionCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordInteractionCreated">
            <code>
            void OnDiscordInteractionCreated(DiscordInteraction interaction)
            {
                Puts("OnDiscordInteractionCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildIntegrationCreated">
            <code>
            void OnDiscordGuildIntegrationCreated(IntegrationCreatedEvent integration, DiscordGuild guild)
            {
                Puts("OnDiscordGuildIntegrationCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildIntegrationUpdated">
            <code>
            void OnDiscordGuildIntegrationUpdated(IntegrationUpdatedEvent interaction, DiscordGuild guild)
            {
                Puts("OnDiscordGuildIntegrationUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildIntegrationDeleted">
            <code>
            void OnDiscordGuildIntegrationDeleted(IntegrationDeletedEvent interaction, DiscordGuild guild)
            {
                Puts("OnDiscordGuildIntegrationDeleted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildThreadCreated">
            <code>
            void OnDiscordGuildThreadCreated(DiscordChannel thread, DiscordGuild guild)
            {
                Puts("OnDiscordGuildThreadCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildThreadUpdated">
            <code>
            void OnDiscordGuildThreadUpdated(DiscordChannel thread, DiscordChannel previous, DiscordGuild guild)
            {
                Puts("OnDiscordGuildThreadUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildThreadDeleted">
            <code>
            void OnDiscordGuildThreadDeleted(DiscordChannel thread, DiscordGuild guild)
            {
                Puts("OnDiscordGuildThreadDeleted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildThreadListSynced">
            <code>
            void OnDiscordGuildThreadListSynced(ThreadListSyncEvent sync, DiscordGuild guild)
            {
                Puts("OnDiscordGuildThreadListSynced Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildThreadMemberUpdated">
            <code>
            void OnDiscordGuildThreadMemberUpdated(ThreadMember member, DiscordChannel thread, DiscordGuild guild)
            {
                Puts("OnDiscordGuildThreadMemberUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordGuildThreadMembersUpdated">
            <code>
            void OnDiscordGuildThreadMembersUpdated(ThreadMembersUpdatedEvent members, DiscordGuild guild)
            {
                Puts("OnDiscordGuildThreadMembersUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordStageInstanceCreated">
            <code>
            void OnDiscordStageInstanceCreated(StageInstance stage, DiscordGuild guild)
            {
                Puts("OnDiscordStageInstanceCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordStageInstanceUpdated">
            <code>
            void OnDiscordStageInstanceUpdated(StageInstance stage, StageInstance previous, DiscordGuild guild)
            {
                Puts("OnDiscordStageInstanceUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordStageInstanceDeleted">
            <code>
            void OnDiscordStageInstanceDeleted(StageInstance stage, DiscordGuild guild)
            {
                Puts("OnDiscordStageInstanceDeleted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordAutoModRuleCreated">
            <code>
            void OnDiscordAutoModRuleCreated(AutoModRule rule, DiscordGuild guild)
            {
                Puts("OnDiscordAutoModRuleCreated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordAutoModRuleUpdated">
            <code>
            void OnDiscordAutoModRuleUpdated(AutoModRule rule, DiscordGuild guild)
            {
                Puts("OnDiscordAutoModRuleUpdated Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordAutoModRuleDeleted">
            <code>
            void OnDiscordAutoModRuleDeleted(AutoModRule rule, DiscordGuild guild)
            {
                Puts("OnDiscordAutoModRuleDeleted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordAutoModActionExecuted">
            <code>
            void OnDiscordAutoModActionExecuted(AutoModActionExecutionEvent rule, DiscordGuild guild)
            {
                Puts("OnDiscordAutoModActionExecuted Works!");
            }
            </code>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.DiscordExtHooks.OnDiscordUnhandledCommand">
            <code>
            void OnDiscordUnhandledCommand(EventPayload payload)
            {
                Puts("OnDiscordUnhandledCommand Works!");
            }
            </code>
        </member>
        <member name="T:Oxide.Ext.Discord.Constants.RateLimitHeaders">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/rate-limits#header-format">Header Format</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.RateLimitHeaders.RetryAfter">
            <summary>
            The number of seconds to wait before submitting another request.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.RateLimitHeaders.IsGlobal">
            <summary>
            Returned only on HTTP 429 responses if the rate limit encountered is the global rate limit (not per-route)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.RateLimitHeaders.BucketId">
            <summary>
            A unique string denoting the rate limit being encountered (non-inclusive of top-level resources in the path)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.RateLimitHeaders.BucketLimit">
            <summary>
            The number of requests that can be made
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.RateLimitHeaders.BucketRemaining">
            <summary>
            The number of remaining requests that can be made
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.RateLimitHeaders.BucketResetAfter">
            <summary>
            Total time (in seconds) of when the current rate limit bucket will reset. Can have decimals to match previous millisecond ratelimit precision
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.RateLimitHeaders.BucketReset">
            <summary>
            Epoch time (seconds since 00:00:00 UTC on January 1, 1970) at which the rate limit resets
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Constants.RateLimitHeaders.Scope">
            <summary>
            Scope of the rate limit
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.DiscordExtension">
            <summary>
            Discord Extension that is loaded by Oxide
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.DiscordExtension.TestVersion">
            <summary>
            Test version information if using test version
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.DiscordExtension.ExtensionVersion">
            <summary>
            Version number of the extension
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.DiscordExtension.FullExtensionVersion">
            <summary>
            Gets full extension version including test version
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.DiscordExtension.GlobalLogger">
            <summary>
            Global logger for areas that aren't part of a client connection
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.DiscordExtension.#ctor(Oxide.Core.Extensions.ExtensionManager)">
            <summary>
            Constructor for the extension
            </summary>
            <param name="manager">Oxide extension manager</param>
        </member>
        <member name="P:Oxide.Ext.Discord.DiscordExtension.Name">
            <summary>
            Name of the extension
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.DiscordExtension.Author">
            <summary>
            Authors for the extension
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.DiscordExtension.Version">
            <summary>
            Version number used by oxide
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.DiscordExtension.OnModLoad">
            <summary>
            Called when mod is loaded
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.DiscordExtension.OnShutdown">
            <summary>
            Called when server is shutdown
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Activities.ActivityAssets">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#activity-object-activity-assets">Activity Assets</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityAssets.LargeImage">
            <summary>
            The id for a large asset of the activity, usually a snowflake
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityAssets.LargeText">
            <summary>
            Text displayed when hovering over the large image of the activity
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityAssets.SmallImage">
            <summary>
            The id for a small asset of the activity, usually a snowflake
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityAssets.SmallText">
            <summary>
            Text displayed when hovering over the small image of the activity
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Activities.ActivityButton">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#activity-object-activity-buttons">Activity Buttons</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityButton.Label">
            <summary>
            The text shown on the button (1-32 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityButton.Url">
            <summary>
            The url opened when clicking the button (1-512 characters)
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Activities.ActivityFlags">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#activity-object-activity-flags">Activity Flags</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.None">
            <summary>
            No Actions can be done to this activity
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.Instance">
            <summary>
            No Actions can be done to this activity
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.Join">
            <summary>
            Activity can be joined
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.Spectate">
            <summary>
            Activity can be spectated
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.JoinRequest">
            <summary>
            User may request to join activity
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.Sync">
            <summary>
            User can listen along in spotify
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.Play">
            <summary>
            User can play this song
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.PartyPrivacyFriends">
            <summary>
            User is playing an activity in a voice channel with friends
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.PartyPrivacyVoiceChannel">
            <summary>
            User is playing an activity in a voice channel
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.Embedded">
            <summary>
            User is playing embedded activity
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Activities.ActivityParty">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#activity-object-activity-party">Activity Party</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityParty.Id">
            <summary>
            The id of the party
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityParty.Size">
            <summary>
            Used to show the party's current and maximum size
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityParty.CurrentSize">
            <summary>
            The current party size
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityParty.MaxSize">
            <summary>
            The maximum party size
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Activities.ActivitySecrets">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#activity-object-activity-secrets">Activity Secrets</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivitySecrets.Join">
            <summary>
            The secret for joining a party
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivitySecrets.Spectate">
            <summary>
            The secret for spectating a game
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivitySecrets.Match">
            <summary>
            The secret for a specific instanced match
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Activities.ActivityTimestamps">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#activity-object-activity-timestamps">Activity Timestamps</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityTimestamps.Start">
            <summary>
            Unix time (in milliseconds) of when the activity started
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityTimestamps.End">
            <summary>
            Unix time (in milliseconds) of when the activity ends
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Activities.ActivityType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#activity-object-activity-types">Activity Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityType.Game">
            Playing {name}
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityType.Streaming">
            Streaming {name}
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityType.Listening">
            Listening {name}
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityType.Watching">
            Watching {name}
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityType.Custom">
            {emoji} {name} EX: ":smiley: I am cool"
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityType.Competing">
            Competing in {name}
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Activities.DiscordActivity">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#activity-object">Activity Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.Name">
            <summary>
            The activity's name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.Type">
            <summary>
            Activity type
            See <see cref="T:Oxide.Ext.Discord.Entities.Activities.ActivityType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.Url">
            <summary>
            Stream url, is validated when type is 1
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.CreatedAt">
            <summary>
            Timestamp of when the activity was added to the user's session
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.Timestamps">
            <summary>
            Unix timestamps for start and/or end of the game
            See <see cref="T:Oxide.Ext.Discord.Entities.Activities.ActivityTimestamps"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.ApplicationId">
            <summary>
            Application id for the game
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.Details">
            <summary>
            What the player is currently doing
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.State">
            <summary>
            The user's current party status
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.Emoji">
            <summary>
            tTe emoji used for a custom status
            See <see cref="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.Emoji"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.Party">
            <summary>
            Information for the current party of the player
            See <see cref="T:Oxide.Ext.Discord.Entities.Activities.ActivityParty"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.Assets">
            <summary>
            Images for the presence and their hover texts
            See <see cref="T:Oxide.Ext.Discord.Entities.Activities.ActivityAssets"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.Secrets">
            <summary>
            Secrets for Rich Presence joining and spectating
            See <see cref="T:Oxide.Ext.Discord.Entities.Activities.ActivitySecrets"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.Instance">
            <summary>
            Whether or not the activity is an instanced game session
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.Flags">
            <summary>
            Describes what the payload includes
            See <see cref="T:Oxide.Ext.Discord.Entities.Activities.ActivityFlags"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.Buttons">
            <summary>
            The custom buttons shown in the Rich Presence (max 2)
            See <see cref="T:Oxide.Ext.Discord.Entities.Activities.ActivityButton"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.GetLargeImageUrl">
            <summary>
            Returns the large image url for the presence asset
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.DiscordActivity.GetSmallImageUrl">
            <summary>
            Returns the small image url for the presence asset
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Api.DiscordHttpStatusCode">
            <summary>
            Represents possible HTTP Codes sent from discord
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.DiscordHttpStatusCode.Ok">
            <summary>
            The request completed successfully.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.DiscordHttpStatusCode.Created">
            <summary>
            The entity was created successfully.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.DiscordHttpStatusCode.NoContent">
            <summary>
            The request completed successfully but returned no content.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.DiscordHttpStatusCode.NotModified">
            <summary>
            The entity was not modified (no action was taken).
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.DiscordHttpStatusCode.BadRequest">
            <summary>
            The request was improperly formatted, or the server couldn't understand it.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.DiscordHttpStatusCode.Unauthorized">
            <summary>
            The Authorization header was missing or invalid.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.DiscordHttpStatusCode.Forbidden">
            <summary>
            The Authorization token you passed did not have permission to the resource.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.DiscordHttpStatusCode.NotFound">
            <summary>
            The resource at the location specified doesn't exist.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.DiscordHttpStatusCode.MethodNotAllowed">
            <summary>
            The HTTP method used is not valid for the location specified.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.DiscordHttpStatusCode.TooManyRequests">
            <summary>
            You are being rate limited, see Rate Limits.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.DiscordHttpStatusCode.InternalServerError">
            <summary>
            Server Error
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.DiscordHttpStatusCode.GatewayUnavailable">
            <summary>
            There was not a gateway available to process your request. Wait a bit and retry.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Api.RateLimitResponse">
            <summary>
            Represents a rate limit response from an API request
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.RateLimitResponse.BucketId">
            <summary>
            The Bucket ID of the rate limit
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.RateLimitResponse.IsGlobalRateLimit">
            <summary>
            If we hit the global rate limit with this request
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.RateLimitResponse.ResetAt">
            <summary>
            The date time when this bucket will reset
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.RateLimitResponse.Limit">
            <summary>
            The number of request for this bucket
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.RateLimitResponse.Remaining">
            <summary>
            The number of remaining requests for this bucket
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.RateLimitResponse.Scope">
            <summary>
            The scope the rate limit is for
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.RateLimitResponse.Message">
            <summary>
            Rate Limit Message
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.RateLimitResponse.Code">
            <summary>
            Rate Limit Code
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Api.RateLimitResponse.Init(Oxide.Ext.Discord.Clients.DiscordClient,System.Net.Http.Headers.HttpResponseHeaders,Oxide.Ext.Discord.Entities.Api.DiscordHttpStatusCode,System.String)">
            <summary>
            Initialize the RateLimitResponse
            </summary>
            <param name="client">Client for the rate limit</param>
            <param name="headers">Headers for the rate limit</param>
            <param name="code">Http code for the request</param>
            <param name="content">Request response content</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Api.RateLimitResponse.EnterPool">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Api.RequestErrorType">
            <summary>
            Represents a Discord Request Error Type
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.RequestErrorType.GenericWeb">
            <summary>
            A generic web error occured
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.RequestErrorType.Internal">
            <summary>
            An Internal HTTP Error Occured
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.RequestErrorType.RateLimit">
            <summary>
            A Ratelimit Error Occured
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.RequestErrorType.ApiError">
            <summary>
            An Invalid request was passed to discord
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.RequestErrorType.Serialization">
            <summary>
            An error occured during JSON serialization
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.RequestErrorType.Generic">
            <summary>
            A non web error occured
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Api.RequestResponse">
            <summary>
            Represents a REST response from discord
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Api.RequestResponse.Init(Oxide.Ext.Discord.Clients.DiscordClient,System.Net.Http.HttpResponseMessage,Oxide.Ext.Discord.Rest.Requests.RequestCompletedStatus,Oxide.Ext.Discord.Entities.Api.ResponseError)">
            <summary>
            Create new REST response with the given data
            </summary>
            <param name="client">BotClient for the response</param>
            <param name="response">The Web Response for the request</param>
            <param name="status">The status of the request indicating if it was successful</param>
            <param name="error">If the request had an error the error created from the request</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Api.RequestResponse.CreateSuccessResponse(Oxide.Ext.Discord.Clients.DiscordClient,System.Net.Http.HttpResponseMessage)">
            <summary>
            Creates a success REST API response
            </summary>
            <param name="client">Client making the request</param>
            <param name="httpResponse">The Web Response for the request</param>
            <returns>A success <see cref="T:Oxide.Ext.Discord.Entities.Api.RequestResponse"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Api.RequestResponse.CreateExceptionResponse(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Api.ResponseError,System.Net.Http.HttpResponseMessage,Oxide.Ext.Discord.Rest.Requests.RequestCompletedStatus)">
            <summary>
            Creates a Web Exception REST API response
            </summary>
            <param name="client">Client making the request</param>
            <param name="error">Rest Error that occured</param>
            <param name="httpResponse">Web Response for the request</param>
            <param name="status">The request status containing the fail reason</param>
            <returns>A web exception <see cref="T:Oxide.Ext.Discord.Entities.Api.RequestResponse"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Api.RequestResponse.CreateCancelledResponse(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Creates a REST API response for a cancelled request
            </summary>
            <param name="client">Client the request was for</param>
            <returns>A cancelled <see cref="T:Oxide.Ext.Discord.Entities.Api.RequestResponse"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Api.RequestResponse.EnterPool">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Api.ResponseError">
            <summary>
            Error object that is returned to the caller when a request fails
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.ResponseError.RequestId">
            <summary>
            ID of the request
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.ResponseError.RequestMethod">
            <summary>
            The request method that was called
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Api.ResponseError.Exception">
            <summary>
            The exception from the request
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.ResponseError.Url">
            <summary>
            The URI that was called
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.ResponseError.RequestData">
            <summary>
            What data was passed to the request
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Api.ResponseError.ContentType">
            <summary>
            HTTP Content Type for the request
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.ResponseError.ErrorDate">
            <summary>
            <see cref="T:System.DateTimeOffset"/> when the error occured
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Api.ResponseError.StringContents">
            <summary>
            The string contents of the request
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Api.ResponseError.HttpStatusCode">
            <summary>
            HTTP Status code
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Api.ResponseError.DiscordError">
            <summary>
            If discord returned an error this will contain that error message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Api.ResponseError.ResponseMessage">
            <summary>
            Full string response if we received one
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Api.ResponseError.RateLimitMessage">
            <summary>
            If error was a rate limit the message from the rate limit
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Api.ResponseError.RateLimitCode">
            <summary>
            If error was a rate limit the code from the rate limit
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Api.ResponseError._showErrorMessage">
            <summary>
            Should we display the error message
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Api.ResponseError.#ctor(Oxide.Ext.Discord.Rest.Requests.BaseRequest,Oxide.Ext.Discord.Entities.Api.RequestErrorType,Oxide.Ext.Discord.Logging.DiscordLogLevel)">
            <summary>
            Creates a new rest error
            </summary>
            <param name="request">Request the error is for</param>
            <param name="type"><see cref="T:Oxide.Ext.Discord.Entities.Api.RequestErrorType"/> of the error</param>
            <param name="log"><see cref="T:Oxide.Ext.Discord.Logging.DiscordLogLevel"/> log level of the error</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Api.ResponseError.SuppressErrorMessage">
            <summary>
            Suppresses the error message from being logged
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Api.ResponseError.SetResponse(Oxide.Ext.Discord.Entities.Api.DiscordHttpStatusCode,System.String)">
            <summary>
            Sets the HTTP Response data
            </summary>
            <param name="code">HTTP Response Code</param>
            <param name="content">HTTP Response Body Stream</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Api.ResponseError.LogError">
            <summary>
            Performs the error logging for the request
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Api.ResponseErrorMessage">
            <summary>
            Represents an <a href="https://discord.com/developers/docs/reference#error-messages">error from the discord API</a> 
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Api.ResponseErrorMessage.Code">
            <summary>
            Error code from the discord API
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Api.ResponseErrorMessage.Message">
            <summary>
            Error message from the discord API
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Api.ResponseErrorMessage.Errors">
            <summary>
            An JObject containing the errors that occured
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Applications.ApplicationFlags">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/application#application-object-application-flags">Application Flags</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.ApplicationFlags.None">
            <summary>
            This application has no flags
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.ApplicationFlags.ApplicationAutoModerationRuleCreateBadge">
            <summary>
            Indicates if an app uses the Auto Moderation API
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.ApplicationFlags.GatewayPresence">
            <summary>
            Intent required for bots in 100 or more servers to receive presence_update events
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.ApplicationFlags.GatewayPresenceLimited">
            <summary>
            Intent required for bots in under 100 servers to receive presence_update events, found in Bot Settings
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.ApplicationFlags.GatewayGuildMembers">
            <summary>
            Intent required for bots in 100 or more servers to receive member-related events like guild_member_add.
            See list of member-related events under GUILD_MEMBERS
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.ApplicationFlags.GatewayGuildMembersLimited">
            <summary>
            Intent required for bots in under 100 servers to receive member-related events like guild_member_add, found in Bot Settings.
            See list of member-related events under GUILD_MEMBERS
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.ApplicationFlags.VerificationPendingGuildLimit">
            <summary>
            Indicates unusual growth of an app that prevents verification
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.ApplicationFlags.Embedded">
            <summary>
            Indicates if an app is embedded within the Discord client (currently unavailable publicly)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.ApplicationFlags.GatewayMessageContent">
            <summary>
            Intent required for bots in 100 or more servers to receive message content
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.ApplicationFlags.GatewayMessageContentLimited">
            <summary>
            Intent required for bots in under 100 servers to receive message content, found in Bot Settings
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.ApplicationFlags.ApplicationCommandBadge">
            <summary>
            Indicates if an app has registered global application commands
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Applications.DiscordApplication">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/application#application-object">Application Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.Id">
            <summary>
            The id of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.Name">
            <summary>
            The name of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.Icon">
            <summary>
            The icon hash of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.Description">
            <summary>
            The description of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.RpcOrigins">
            <summary>
            An array of rpc origin urls, if rpc is enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.BotPublic">
            <summary>
            When false only app owner can join the app's bot to guilds
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.BotRequireCodeGrant">
            <summary>
            When true the app's bot will only join upon completion of the full oauth2 code grant flow
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.TermsOfServiceUrl">
            <summary>
            The url of the app's terms of service
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.PrivacyPolicyUrl">
            <summary>
            The url of the app's privacy policy
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.Owner">
            <summary>
            Partial user object containing info on the owner of the application
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.Verify">
            <summary>
            The hex encoded key for verification in interactions and the GameSDK's GetTicket
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.Team">
            <summary>
            If the application belongs to a team, this will be a list of the members of that team
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.GuildId">
            <summary>
            If this application is a game sold on Discord, this field will be the guild to which it has been linked
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.PrimarySkuId">
            <summary>
            If this application is a game sold on Discord, this field will be the id of the "Game SKU" that is created, if exists
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.Slug">
            <summary>
            If this application is a game sold on Discord, this field will be the URL slug that links to the store page
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.CoverImage">
            <summary>
            If this application is a game sold on Discord, this field will be the hash of the image on store embeds
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.Flags">
            <summary>
            The application's public flags
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.Tags">
            <summary>
            Up to 5 tags describing the content and functionality of the application
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.InstallParams">
            <summary>
            Settings for the application's default in-app authorization link, if enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.CustomInstallUrl">
            <summary>
            The application's default custom authorization link, if enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.RoleConnectionsVerificationUrl">
            <summary>
            The application's role connection verification entry point, which when configured will render the app as a verification method in the guild role verification configuration
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.GetApplicationIconUrl">
            <summary>
            Returns the URL for the applications Icon
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.GetApplicationCoverUrl">
            <summary>
            Returns the URL for the application cover
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.HasApplicationFlag(Oxide.Ext.Discord.Entities.Applications.ApplicationFlags)">
            <summary>
            Returns if the given application has the passed in application flag
            If <see cref="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.Flags"/>  is null false is returned
            </summary>
            <param name="flag">Flag to compare against</param>
            <returns>True of application has flag; False Otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.HasAnyApplicationFlags(Oxide.Ext.Discord.Entities.Applications.ApplicationFlags)">
            <summary>
            Returns if the given application has any of the passed in application flags
            If <see cref="P:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.Flags"/> is null false is returned
            </summary>
            <param name="flag">Flag to compare against</param>
            <returns>True of application has flag; False Otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.GetGlobalCommands(Oxide.Ext.Discord.Clients.DiscordClient,System.Boolean)">
            <summary>
            Fetch all of the global commands for your application.
            Returns a list of ApplicationCommand.
            See <a href="https://discord.com/developers/docs/interactions/application-commands#get-global-application-commands">Get Global Application Commands</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="withLocalizations">Include Command Localizations</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.GetGlobalCommand(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Fetch global command by ID
            See <a href="https://discord.com/developers/docs/interactions/application-commands#get-global-application-command">Get Global Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="commandId">ID of command to get</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.CreateGlobalCommand(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate)">
            <summary>
            Create a new global command.
            New global commands will be available in all guilds after 1 hour.
            Note: Creating a command with the same name as an existing command for your application will overwrite the old command.
            See <a href="https://discord.com/developers/docs/interactions/application-commands#create-global-application-command">Create Global Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="create">Command to create</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.BulkOverwriteGlobalCommands(Oxide.Ext.Discord.Clients.DiscordClient,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandBulkOverwrite})">
            <summary>
            Takes a list of application commands, overwriting existing commands that are registered globally for this application. Updates will be available in all guilds after 1 hour.
            See <a href="https://discord.com/developers/docs/interactions/application-commands#bulk-overwrite-global-application-commands">Bulk Overwrite Global Application Commands</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="commands">List of commands to overwrite</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.GetGuildCommands(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Boolean)">
            <summary>
            Fetch all of the guild commands for your application for a specific guild.
            See <a href="https://discord.com/developers/docs/interactions/application-commands#get-guild-application-commands">Get Guild Application Commands</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">ID of the guild to get commands for</param>
            <param name="withLocalizations">Include Command Localizations</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.GetGuildCommand(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Get guild command by Id
            See <a href="https://discord.com/developers/docs/interactions/application-commands#get-guild-application-command">Get Guild Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">ID of the guild to get commands for</param>
            <param name="commandId">ID of the command to get</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.CreateGuildCommand(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate)">
            <summary>
            Create a new guild command.
            New guild commands will be available in the guild immediately.
            See <a href="https://discord.com/developers/docs/interactions/application-commands#create-guild-application-command">Create Guild Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID to create the command in</param>
            <param name="create">Command to create</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.GetGuildCommandPermissions(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Fetches command permissions for all commands for your application in a guild. Returns an array of GuildApplicationCommandPermissions objects.
            See <a href="https://discord.com/developers/docs/interactions/application-commands#get-guild-application-command-permissions">Get Guild Application Command Permissions</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID to get the permissions from</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.GetAllCommands(Oxide.Ext.Discord.Clients.DiscordClient,System.Boolean)">
            <summary>
            Returns all commands registered to this application
            </summary>
            <param name="client">Client to use</param>
            <param name="withLocalizations">Should the response include localizations</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.GetRoleConnectionMetadata(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns a list of application role connection metadata objects for the given application.
            See <a href="https://discord.com/developers/docs/resources/application-role-connection-metadata#get-application-role-connection-metadata-records">Get Application Role Connection Metadata Records</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.EditRoleConnectionMetadata(Oxide.Ext.Discord.Clients.DiscordClient,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadata})">
            <summary>
            Updates and returns a list of application role connection metadata objects for the given application.
            See <a href="https://discord.com/developers/docs/resources/application-role-connection-metadata#update-application-role-connection-metadata-records">Update Application Role Connection Metadata Records</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="records">The records to update on the application</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Applications.DiscordApplication.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Applications.InstallParams">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/application#install-params-object">Install Params Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.InstallParams.Scopes">
            <summary>
            The scopes to add the application to the server with
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.InstallParams.Permissions">
            <summary>
            The permissions to request for the bot role
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadata">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/application-role-connection-metadata#application-role-connection-metadata-object-application-role-connection-metadata-structure">Application Role Connection Metadata Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadata.Type">
            <summary>
            Type of metadata value
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadata.Key">
            <summary>
            Dictionary key for the metadata field (must be a-z, 0-9, or _ characters; 1-50 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadata.Name">
            <summary>
            Name of the metadata field (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadata.NameLocalizations">
            <summary>
            Translations of the name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadata.Description">
            <summary>
            Description of the metadata field (1-200 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadata.DescriptionLocalizations">
            <summary>
            Translations of the description
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadata.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadataType">
            <summary>
            Represents <a href="Application Role Connection Metadata Structure">Application Role Connection Metadata Type</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadataType.IntegerLessThanOrEqual">
            <summary>
            The metadata value (integer) is less than or equal to the guild's configured value (integer)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadataType.IntegerGreaterThanOrEqual">
            <summary>
            The metadata value (integer) is greater than or equal to the guild's configured value (integer)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadataType.IntegerEqual">
            <summary>
            The metadata value (integer) is equal to the guild's configured value (integer)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadataType.IntegerNotEqual">
            <summary>
            The metadata value (integer) is not equal to the guild's configured value (integer)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadataType.DatetimeLessThanOrEqual">
            <summary>
            The metadata value (ISO8601 string) is less than or equal to the guild's configured value (integer; days before current date)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadataType.DatetimeGreaterThanOrEqual">
            <summary>
            The metadata value (ISO8601 string) is greater than or equal to the guild's configured value (integer; days before current date)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadataType.BooleanEqual">
            <summary>
            The metadata value (integer) is equal to the guild's configured value (integer; 1)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadataType.BooleanNotEqual">
            <summary>
            The metadata value (integer) is not equal to the guild's configured value (integer; 1)
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModAction">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-action-object">Auto Mod Action</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModAction.Type">
            <summary>
            Type of <see cref="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModActionType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModAction.Metadata">
            <summary>
            Additional metadata needed during execution for this specific action type
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModActionMetadata">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-action-object-action-metadata">Auto Mod Action Metadata</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModActionMetadata.ChannelId">
            <summary>
            Associated Action Type: <see cref="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModActionType.SendAlertMessage"/>
            Channel to which user content should be logged
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModActionMetadata.DurationSeconds">
            <summary>
            Associated Action Type: <see cref="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModActionType.Timeout"/>
            Timeout duration in seconds
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModActionMetadata.CustomMessage">
            <summary>
            Associated Action Type: <see cref="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModActionType.BlockMessage"/>
            Additional explanation that will be shown to members whenever their message is blocked
            Max 150 characters
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModActionType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-action-object-action-types">Auto Mod Action Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModActionType.BlockMessage">
            <summary>
            Blocks the content of a message according to the rule
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModActionType.SendAlertMessage">
            <summary>
            Logs user content to a specified channel
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModActionType.Timeout">
            <summary>
            Timeout user for a specified duration
            A TIMEOUT action can only be setup for KEYWORD rules.
            MODERATE_MEMBERS permission is required to use the TIMEOUT action type.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModEventType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object-event-types">Auto Mod Event Type</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModEventType.MessageSend">
            <summary>
            When a member sends or edits a message in the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModKeywordPresetType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object-keyword-preset-types">Auto Mod Keyword Preset Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModKeywordPresetType.Profanity">
            <summary>
            Words that may be considered forms of swearing or cursing
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModKeywordPresetType.SexualContent">
            <summary>
            Words that refer to sexually explicit behavior or activity
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModKeywordPresetType.Slurs">
            <summary>
            Personal insults or words that may be considered hate speech
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object">Auto Mod Rule</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.Id">
            <summary>
            Id of this rule
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.GuildId">
            <summary>
            ID of the Guild which this rule belongs to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.Name">
            <summary>
            Rule name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.CreatorId">
            <summary>
            User which first created this rule
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.EventType">
            <summary>
            Rule <see cref="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModEventType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.TriggerType">
            <summary>
            Rule <see cref="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.TriggerMetadata">
            <summary>
            Rule <see cref="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerMetadata"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.Actions">
            <summary>
            Actions which will execute when the rule is triggered
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.Enabled">
            <summary>
            Whether the rule is enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.ExemptRoles">
            <summary>
            Role ids that should not be affected by the rule (Maximum of 20)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.ExemptChannels">
            <summary>
            Channel ids that should not be affected by the rule (Maximum of 50)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.GetAll(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Modify an existing rule
            Requires <see cref="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ManageGuild"/> permissions.
            See <a href="https://discord.com/developers/docs/resources/auto-moderation#list-auto-moderation-rules-for-guild">List Auto Moderation Rules for Guild</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID to list the rules for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.Get(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Get a single rule
            Requires <see cref="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ManageGuild"/> permissions.
            See <a href="https://discord.com/developers/docs/resources/auto-moderation#get-auto-moderation-rule">Get Auto Moderation Rule</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID of the rule</param>
            <param name="ruleId">Rule ID to get the rule for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.Create(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleCreate)">
            <summary>
            Create a new rule
            Requires <see cref="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ManageGuild"/> permissions.
            See <a href="https://discord.com/developers/docs/resources/auto-moderation#create-auto-moderation-rule">Create Auto Moderation Rule</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID of the rule</param>
            <param name="create">Rule to be created</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.Edit(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleModify)">
            <summary>
            Modify an existing rule
            Requires <see cref="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ManageGuild"/> permissions.
            See <a href="https://discord.com/developers/docs/resources/auto-moderation#modify-auto-moderation-rule">Modify Auto Moderation Rule</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="modify"><see cref="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleModify"/></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.Delete(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Delete a rule
            Requires <see cref="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ManageGuild"/> permissions.
            See <a href="https://discord.com/developers/docs/resources/auto-moderation#delete-auto-moderation-rule">Delete Auto Moderation Rule</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleCreate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/auto-moderation#create-auto-moderation-rule-json-params">Auto Mod Rule Create</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleCreate.Name">
            <summary>
            Rule name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleCreate.EventType">
            <summary>
            Rule <see cref="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModEventType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleCreate.TriggerType">
            <summary>
            Rule <see cref="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleCreate.TriggerMetadata">
            <summary>
            Rule <see cref="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerMetadata"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleCreate.Actions">
            <summary>
            Actions which will execute when the rule is triggered
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleCreate.Enabled">
            <summary>
            Whether the rule is enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleCreate.ExemptRoles">
            <summary>
            Role ids that should not be affected by the rule (Maximum of 20)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleCreate.ExemptChannels">
            <summary>
            Channel ids that should not be affected by the rule (Maximum of 50)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleCreate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleModify">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/auto-moderation#modify-auto-moderation-rule-json-params">Auto Mod Rule Modify</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleModify.Name">
            <summary>
            Rule name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleModify.EventType">
            <summary>
            Rule <see cref="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModEventType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleModify.TriggerMetadata">
            <summary>
            Rule <see cref="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerMetadata"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleModify.Actions">
            <summary>
            Actions which will execute when the rule is triggered
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleModify.Enabled">
            <summary>
            Whether the rule is enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleModify.ExemptRoles">
            <summary>
            Role ids that should not be affected by the rule (Maximum of 20)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleModify.ExemptChannels">
            <summary>
            Channel ids that should not be affected by the rule (Maximum of 50)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleModify.TriggerType">
            <summary>
            Rule <see cref="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleModify.#ctor(Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType)">
            <summary>
            Constructor
            </summary>
            <param name="triggerType">Trigger type being modified</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleModify.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerMetadata">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object-trigger-metadata">Auto Mod Trigger Metadata</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerMetadata.KeywordFilter">
            <summary>
            Associated Trigger Types: <see cref="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType.Keyword"/>
            Substrings which will be searched for in content
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerMetadata.RegexPatterns">
            <summary>
            Associated Trigger Types: <see cref="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType.Keyword"/>
            Regular expression patterns which will be matched against content (Maximum of 10)
            * Only Rust flavored regex is currently supported, which can be tested in online editors such as <a href="https://rustexp.lpil.uk/">Rustexp</a>. Each regex pattern must be 260 characters or less.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerMetadata.Presets">
            <summary>
            Associated Trigger Types: <see cref="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType.KeywordPreset"/>
            The internally pre-defined wordsets which will be searched for in content
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerMetadata.AllowList">
            <summary>
            Associated Trigger Types: <see cref="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType.KeywordPreset"/> and <see cref="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType.Keyword"/>
            Substrings which should not trigger the rule (Maximum of 100 or 1000)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerMetadata.MentionTotalLimit">
            <summary>
            Associated Trigger Types: <see cref="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType.MentionSpam"/>
            Total number of unique role and user mentions allowed per message
            Maximum of 50
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerMetadata.MentionRaidProtectionEnabled">
            <summary>
            Associated Trigger Types: <see cref="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType.MentionSpam"/>
            Whether to automatically detect mention raids
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object-trigger-types">Auto Mod Trigger Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType.Keyword">
            <summary>
            Check if content contains words from a user defined list of keywords
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType.Spam">
            <summary>
            Check if content represents generic spam
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType.KeywordPreset">
            <summary>
            Check if content contains words from internal pre-defined wordsets
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType.MentionSpam">
            <summary>
            Check if content contains more unique mentions than allowed
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.ChannelCreate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/guild#create-guild-channel-json-params">Guild Channel Create Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.Name">
            <summary>
            The name of the channel (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.Type">
            <summary>
            the type of channel <see cref="T:Oxide.Ext.Discord.Entities.Channels.ChannelType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.Topic">
            <summary>
            The channel topic (0-1024 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.Bitrate">
            <summary>
            The bitrate (in bits) of the voice channel
            8000 to 96000 (128000 for VIP servers)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.UserLimit">
            <summary>
            The user limit of the voice channel
            0 refers to no limit, 1 to 99 refers to a user limit
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.RateLimitPerUser">
            <summary>
            Amount of seconds a user has to wait before sending another message (0-21600);
            bots, as well as users with the permission manage_messages or manage_channel, are unaffected
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.Position">
            <summary>
            Sorting position of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.PermissionOverwrites">
            <summary>
            Explicit permission overwrites for members and roles <see cref="T:Oxide.Ext.Discord.Entities.Channels.Overwrite"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.ParentId">
            <summary>
            ID of the parent category for a channel (each parent category can contain up to 50 channels)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.Nsfw">
            <summary>
            Whether the channel is nsfw
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.DefaultAutoArchiveDuration">
            <summary>
            The default duration that the clients use (not the API) for newly created threads in the channel, in minutes, to automatically archive the thread after recent activity
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.DefaultReactionEmoji">
            <summary>
            Emoji to show in the add reaction button on a thread in a `GUILD_FORUM` channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.AvailableTags">
            <summary>
            Set of tags that can be used in a `GUILD_FORUM` channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.DefaultSortOrder">
            <summary>
            The default <see cref="T:Oxide.Ext.Discord.Entities.Channels.SortOrderType"/> used to order posts in `GUILD_FORUM` channels
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.DefaultForumLayout">
            <summary>
            The default <see cref="T:Oxide.Ext.Discord.Entities.Channels.ForumLayoutTypes"/> used to display posts in GUILD_FORUM channels.
            Defaults to <see cref="F:Oxide.Ext.Discord.Entities.Channels.ForumLayoutTypes.NotSet"/>, which indicates a layout view has not been set by a channel admin
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.ChannelFlags">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#channel-object-channel-flags">Channel Flags</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelFlags.None">
            <summary>
            Represents no channel flags
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelFlags.Pinned">
            <summary>
            This thread is pinned to the top of its parent GUILD_FORUM channel
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelFlags.RequireTag">
            <summary>
            Whether a tag is required to be specified when creating a thread in a GUILD_FORUM channel. Tags are specified in the applied_tags field.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.ChannelInvite">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#create-channel-invite-json-params">Channel Invite Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelInvite.MaxAge">
            <summary>
            Duration of invite in seconds before expiry, or 0 for never
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelInvite.MaxUses">
            <summary>
            Max number of uses or 0 for unlimited
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelInvite.Temporary">
            <summary>
            Whether this invite only grants temporary membership
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelInvite.Unique">
            <summary>
            If true, don't try to reuse a similar invite (useful for creating many unique one time use invites)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelInvite.TargetUserType">
            <summary>
            The type of target user for this invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelInvite.TargetUser">
            <summary>
            The target user id for this invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelInvite.TargetApplicationId">
            <summary>
            The id of the embedded application to open for this invite,
            Required if TargetUserType is EMBEDDED_APPLICATION, the application must have the EMBEDDED flag	
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.ChannelInvite.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.ChannelMention">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#channel-mention-object-channel-mention-structure">Channel Mention Structure</a> in a message 
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelMention.Id">
            <summary>
            ID of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelMention.GuildId">
            <summary>
            ID of the guild containing the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelMention.Type">
            <summary>
            The type of channel
            <see cref="T:Oxide.Ext.Discord.Entities.Channels.ChannelType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelMention.Name">
            <summary>
            The name of the channel
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.ChannelMessagesRequest">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#get-channel-messages">Get Channel Messages Request</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelMessagesRequest.Around">
            <summary>
            Get messages around this message ID
            Before, after, and around keys are mutually exclusive, only one may be passed at a time
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelMessagesRequest.Before">
            <summary>
            Get messages before this message ID
            Before, after, and around keys are mutually exclusive, only one may be passed at a time
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelMessagesRequest.After">
            <summary>
            Get messages after this message ID
            Before, after, and around keys are mutually exclusive, only one may be passed at a time
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelMessagesRequest.Limit">
            <summary>
            Max number of messages to return (1-100)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.ChannelMessagesRequest.ToQueryString">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.ChannelType">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#channel-object-channel-types">Types of Channels</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GuildText">
            <summary>
            A text channel within a server
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.Dm">
            <summary>
            A direct message between users
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GuildVoice">
            <summary>
            A voice channel within a server
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GroupDm">
            <summary>
            A direct message between multiple users
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GuildCategory">
            <summary>
            An organizational category that contains up to 50 channels
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GuildNews">
            <summary>
            A channel that users can follow and crosspost into their own server
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GuildNewsThread">
            <summary>
            A temporary sub-channel within a GUILD_NEWS channel
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GuildPublicThread">
            <summary>
            A temporary sub-channel within a GUILD_TEXT or GUILD_FORUM channel
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GuildPrivateThread">
            <summary>
            A temporary sub-channel within a GUILD_TEXT channel that is only viewable by those invited and those with the MANAGE_THREADS permission
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GuildStageVoice">
            <summary>
            A voice channel for <a href="https://support.discord.com/hc/en-us/articles/1500005513722">hosting events with an audience</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GuildDirectory">
            <summary>
            The channel in a <a href="https://support.discord.com/hc/en-us/articles/4406046651927-Discord-Student-Hubs-FAQ">hub</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GuildForum">
            <summary>
            (still in development) a channel that can only contain threads
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.DiscordChannel">
            <summary>
            Represents a guild or DM <a href="https://discord.com/developers/docs/resources/channel#channel-object">Channel Structure</a> within Discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Id">
            <summary>
            The ID of this channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Type">
            <summary>
            the type of channel <see cref="T:Oxide.Ext.Discord.Entities.Channels.ChannelType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.GuildId">
            <summary>
            the ID of the guild
            Warning: May be missing for some channel objects received over gateway guild dispatches
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Position">
            <summary>
            Sorting position of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.PermissionOverwrites">
            <summary>
            Explicit permission overwrites for members and roles <see cref="T:Oxide.Ext.Discord.Entities.Channels.Overwrite"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Name">
            <summary>
            The name of the channel (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Topic">
            <summary>
            The channel topic (0-1024 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Nsfw">
            <summary>
            Whether the channel is nsfw
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.LastMessageId">
            <summary>
            The id of the last message sent in this channel (or thread for GUILD_FORUM channels)
            May not point to an existing or valid message or thread
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Bitrate">
            <summary>
            The bitrate (in bits) of the voice channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.UserLimit">
            <summary>
            The user limit of the voice channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.RateLimitPerUser">
            <summary>
            Amount of seconds a user has to wait before sending another message (0-21600);
            bots, as well as users with the permission manage_messages or manage_channel, are unaffected
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Recipients">
            <summary>
            The recipients of the DM
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Icon">
            <summary>
            icon hash of the group DM  
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.OwnerId">
            <summary>
            ID of the DM creator
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.ApplicationId">
            <summary>
            Application id of the group DM creator if it is bot-created
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Managed">
            <summary>
            For group DM channels: whether the channel is managed by an application via the `gdm.join` OAuth2 scope
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.ParentId">
            <summary>
            ID of the parent category for a channel (each parent category can contain up to 50 channels)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.LastPinTimestamp">
            <summary>
            When the last pinned message was pinned.
            This may be null in events such as GUILD_CREATE when a message is not pinned.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.RtcRegion">
            <summary>
            Voice region id for the voice channel, automatic when set to null
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.VideoQualityMode">
            <summary>
            The camera video quality mode of the voice channel
            1 when not present
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.MessageCount">
            <summary>
            umber of messages (not including the initial messages or deleted messages) in a thread (if the thread was created before July 1, 2022, it stops counting at 50)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.MemberCount">
            <summary>
            An approximate count of users in a thread, stops counting at 50
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.ThreadMetadata">
            <summary>
            Thread-specific fields not needed by other channels
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Member">
            <summary>
            Thread member object for the current user, if they have joined the thread, only included on certain API endpoints
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.DefaultAutoArchiveDuration">
            <summary>
            Default duration for newly created threads, in minutes, to automatically archive the thread after recent activity, can be set to: 60, 1440, 4320, 10080
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Permissions">
            <summary>
            Default duration for newly created threads, in minutes, to automatically archive the thread after recent activity, can be set to: 60, 1440, 4320, 10080
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Flags">
            <summary>
            Flags for this channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.TotalMessageSent">
            <summary>
            Number of messages ever sent in a thread, it's similar to message_count on message creation, but will not decrement the number when a message is deleted
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.AvailableTags">
            <summary>
            The set of tags that can be used in a GUILD_FORUM channel
            Limited to 20
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.AppliedTags">
            <summary>
            The IDs of the set of tags that have been applied to a thread in a GUILD_FORUM channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.DefaultReactionEmoji">
            <summary>
            The emoji to show in the add reaction button on a thread in a GUILD_FORUM channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.DefaultThreadRateLimitPerUser">
            <summary>
            The initial rate_limit_per_user to set on newly created threads in a channel. this field is copied to the thread at creation time and does not live update.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.DefaultSortOrder">
            <summary>
            The default <see cref="T:Oxide.Ext.Discord.Entities.Channels.SortOrderType"/> used to order posts in `GUILD_FORUM` channels
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.DefaultForumLayout">
            <summary>
            The default <see cref="T:Oxide.Ext.Discord.Entities.Channels.ForumLayoutTypes"/> used to display posts in GUILD_FORUM channels.
            Defaults to <see cref="F:Oxide.Ext.Discord.Entities.Channels.ForumLayoutTypes.NotSet"/>, which indicates a layout view has not been set by a channel admin
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.ThreadMembers">
            <summary>
            List of thread members if channel is thread; Null Otherwise.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Mention">
            <summary>
            Returns a string to mention this channel in a message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.IconUrl">
            <summary>
            Returns the Icon URL for the given channel
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.IsGuildChannel">
            <summary>
            Returns if the channel is a guild channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.IsDmChannel">
            <summary>
            Returns if a channel is a DM channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.IsThreadChannel">
            <summary>
            Returns if a channel is a thread channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Create(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Channels.ChannelCreate)">
            <summary>
            Create a new channel object for the guild.
            Requires the MANAGE_CHANNELS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#create-guild-channel">Create Guild Channel</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild to create the channel in</param>
            <param name="channel">Channel to create</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Get(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Get a channel by ID
            See <a href="https://discord.com/developers/docs/resources/channel#get-channel">Get Channel</a>
            If the channel is a thread, a thread member object is included in the returned result.
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">ID of the channel to get</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.EditGroupDmChannel(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.GroupDmChannelUpdate)">
            <summary>
            Update a group dm channel's settings.
            See <a href="https://discord.com/developers/docs/resources/channel#modify-channel">Modify Channel</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="update">Update to be made to the channel. All fields are optional</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.EditGuildChannel(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate)">
            <summary>
            Update a guild channel's settings.
            Requires the MANAGE_CHANNELS permission for the guild.
            See <a href="https://discord.com/developers/docs/resources/channel#modify-channel">Modify Channel</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="update">Update to be made to the channel. All fields are optional</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.EditThreadChannel(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Threads.ThreadChannelUpdate)">
            <summary>
            Update a thread channel's settings.
            Requires the MANAGE_THREADS permission for the guild.
            See <a href="https://discord.com/developers/docs/resources/channel#modify-channel">Modify Channel</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="update">Update to be made to the channel. All fields are optional</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Delete(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Delete a channel, or close a private message.
            Requires the MANAGE_CHANNELS or MANAGE_THREADS permission for the guild depending on the channel type.
            See <a href="https://discord.com/developers/docs/resources/channel#deleteclose-channel">Delete/Close Channel</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.GetMessages(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.ChannelMessagesRequest)">
            <summary>
            Returns the messages for a channel.
            If operating on a guild channel, this endpoint requires the VIEW_CHANNEL permission to be present on the current user.
            If the current user is missing the 'READ_MESSAGE_HISTORY' permission in the channel then this will return no messages (since they cannot read the message history).
            See <a href="https://discord.com/developers/docs/resources/channel#get-channel-messages">Get Channel Messages</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="request">Optional request filters</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.GetMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns a specific message in the channel.
            If operating on a guild channel, this endpoint requires the 'READ_MESSAGE_HISTORY' permission to be present on the current user.
            See <a href="https://discord.com/developers/docs/resources/channel#get-channel-message">Get Channel Messages</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="messageId">Message ID of the message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.CreateMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Messages.MessageCreate)">
            <summary>
            Post a message to a guild text or DM channel.
            If operating on a guild channel, this endpoint requires the SEND_MESSAGES permission to be present on the current user.
            If the tts field is set to true, the SEND_TTS_MESSAGES permission is required for the message to be spoken.
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Message to be created</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.CreateMessage(Oxide.Ext.Discord.Clients.DiscordClient,System.String)">
            <summary>
            Post a message to a guild text or DM channel.
            If operating on a guild channel, this endpoint requires the SEND_MESSAGES permission to be present on the current user.
            If the tts field is set to true, the SEND_TTS_MESSAGES permission is required for the message to be spoken.
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Content of the message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.CreateMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed)">
            <summary>
            Post a message to a guild text or DM channel.
            If operating on a guild channel, this endpoint requires the SEND_MESSAGES permission to be present on the current user.
            If the tts field is set to true, the SEND_TTS_MESSAGES permission is required for the message to be spoken.
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="embed">Embed to be send in the message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.CreateMessage(Oxide.Ext.Discord.Clients.DiscordClient,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed})">
            <summary>
            Post a message to a guild text or DM channel.
            If operating on a guild channel, this endpoint requires the SEND_MESSAGES permission to be present on the current user.
            If the tts field is set to true, the SEND_TTS_MESSAGES permission is required for the message to be spoken.
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="embeds">Embeds to be send in the message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.CreateGlobalTemplateMessage(Oxide.Ext.Discord.Clients.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Messages.MessageCreate,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Creates a message in a text channel using a global message template
            </summary>
            <param name="client">Client to use</param>
            <param name="templateName">Template name</param>
            <param name="message">message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.CreateTemplateMessage(Oxide.Ext.Discord.Clients.DiscordClient,System.String,System.String,Oxide.Ext.Discord.Entities.Messages.MessageCreate,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Creates a message in a text channel using a localized message template
            </summary>
            <param name="client">Client to use</param>
            <param name="templateName">Template name</param>
            <param name="language">Oxide language for the template</param>
            <param name="message">message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.BulkDeleteMessages(Oxide.Ext.Discord.Clients.DiscordClient,System.Collections.Generic.ICollection{Oxide.Ext.Discord.Entities.Snowflake})">
            <summary>
            Delete multiple messages in a single request.
            This endpoint can only be used on guild channels and requires the MANAGE_MESSAGES permission.
            See <a href="https://discord.com/developers/docs/resources/channel#bulk-delete-messages">Bulk Delete Messages</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="messageIds">Collect of message ids to delete (Between 2 - 100)</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.EditPermissions(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Overwrite)">
            <summary>
            Edit the channel permission overwrites for a user or role in a channel.
            Only usable for guild channels.
            Requires the MANAGE_ROLES permission.
            See <a href="https://discord.com/developers/docs/resources/channel#edit-channel-permissions">Edit Channel Permissions</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="overwrite">Overwrite to edit with changes</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.DeletePermission(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Overwrite)">
            <summary>
            Delete a channel permission overwrite for a user or role in a channel.
            Only usable for guild channels.
            Requires the MANAGE_ROLES permission.
            See <a href="https://discord.com/developers/docs/resources/channel#delete-channel-permission">Delete Channel Permission</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="overwrite">Overwrite to delete</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.DeletePermission(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Delete a channel permission overwrite for a user or role in a channel.
            Only usable for guild channels.
            Requires the MANAGE_ROLES permission.
            See <a href="https://discord.com/developers/docs/resources/channel#delete-channel-permission">Delete Channel Permission</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="overwriteId">Overwrite ID to delete</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.GetInvites(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns a list of invite objects (with invite metadata) for the channel.
            Only usable for guild channels.
            Requires the MANAGE_CHANNELS permission.
            See <a href="https://discord.com/developers/docs/resources/channel#get-channel-invites">Get Channel Invites</a>
            </summary>
            <param name="client">Client to use</param>
            <exception cref="T:System.Exception">Thrown when the channel type is Dm or GroupDm</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.CreateInvite(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.ChannelInvite)">
            <summary>
            Create a new invite object for the channel.
            Only usable for guild channels.
            Requires the CREATE_INSTANT_INVITE permission.
            See <a href="https://discord.com/developers/docs/resources/channel#create-channel-invite">Create Channel Invite</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="invite">Invite to create</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.FollowNewsChannel(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Follow a News Channel to send messages to a target channel.
            Requires the MANAGE_WEBHOOKS permission in the target channel.
            See <a href="https://discord.com/developers/docs/resources/channel#follow-announcement-channel">Follow Announcement Channel</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="webhookChannelId">ID of target channel</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.TriggerTypingIndicator(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Post a typing indicator for the specified channel.
            Generally bots should not implement this route. However, if a bot is responding to a command and expects the computation to take a few seconds, this endpoint may be called to let the user know that the bot is processing their message.
            See <a href="https://discord.com/developers/docs/resources/channel#trigger-typing-indicator">Trigger Typing Indicator</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.GetPinnedMessages(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns all pinned messages in the channel
            See <a href="https://discord.com/developers/docs/resources/channel#get-pinned-messages">Get Pinned Messages</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.GroupDmAddRecipient(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Users.DiscordUser,System.String)">
            <summary>
            Adds a recipient to a Group DM using their access token
            See <a href="https://discord.com/developers/docs/resources/channel#group-dm-add-recipient">Group DM Add Recipient</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="user">User to add</param>
            <param name="accessToken">Users access token</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.GroupDmAddRecipient(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.String,System.String)">
            <summary>
            Adds a recipient to a Group DM using their access token
            See <a href="https://discord.com/developers/docs/resources/channel#group-dm-add-recipient">Group DM Add Recipient</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User to add</param>
            <param name="accessToken">Users access token</param>
            <param name="nick">User nickname</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.GroupDmRemoveRecipient(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Removes a recipient from a Group DM
            See <a href="https://discord.com/developers/docs/resources/channel#group-dm-remove-recipient">Group DM Remove Recipient</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID to remove</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.StartThreadFromMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Channels.Threads.ThreadCreateFromMessage)">
            <summary>
            Creates a new public thread from a message
            See <a href="https://discord.com/developers/docs/resources/channel#start-thread-from-message">Start Thread with Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="messageId">ID of the message to start the thread from</param>
            <param name="create">Data to use when creating the thread</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.StartThreadWithoutMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Threads.ThreadCreate)">
            <summary>
            Creates a new thread that is not connected to an existing message. The created thread is always a GUILD_PRIVATE_THREAD
            See <a href="https://discord.com/developers/docs/resources/channel#start-thread-without-message">Start Thread without Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="create">Data to use when creating the thread</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.StartThreadInForumChannel(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Threads.ThreadForumCreate)">
            <summary>
            Creates a new thread in a forum channel, and sends a message within the created thread. Returns a channel, with a nested message object
            See <a href="https://discord.com/developers/docs/resources/channel#start-thread-in-forum-channel">Start Thread in Forum Channel</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="create">Data to use when creating the thread</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.JoinThread(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Adds the bot to the thread. Also requires the thread is not archived.
            See <a href="https://discord.com/developers/docs/resources/channel#join-thread">Join Thread</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.AddThreadMember(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Adds another user to a thread.
            Requires the ability to send messages in the thread. Also requires the thread is not archived.
            See <a href="https://discord.com/developers/docs/resources/channel#add-thread-member">Add Thread Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">ID of the user to thread</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.LeaveThread(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Removes the bot from the thread. Also requires the thread is not archived.
            See <a href="https://discord.com/developers/docs/resources/channel#leave-thread">Leave Thread</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.RemoveThreadMember(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Removes another user from a thread.
            Requires the MANAGE_THREADS permission or that you are the creator of the thread. Also requires the thread is not archived.
            See <a href="https://discord.com/developers/docs/resources/channel#remove-thread-member">Remove Thread Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">ID of the user to thread</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.GetThreadMember(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Channels.Threads.GetThreadMember)">
            <summary>
            Returns a thread member object for the specified user if they are a member of the thread
            returns a 404 response otherwise.
            See <a href="https://discord.com/developers/docs/resources/channel#get-thread-member">Remove Thread Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">ID of the user to thread</param>
            <param name="request">Query String Arguments</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.ListThreadMembers(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Threads.ListThreadMembers)">
            <summary>
            Returns array of thread members objects that are members of the thread.
            This endpoint is restricted according to whether the GUILD_MEMBERS Privileged Intent is enabled for your application.
            See <a href="https://discord.com/developers/docs/resources/channel#list-thread-members">List Thread Members</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="request">Query string for the List Thread Members</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.ListPublicArchivedThreads(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Threads.ThreadArchivedLookup)">
            <summary>
            Returns archived threads in the channel that are public.
            When called on a GUILD_TEXT channel, returns threads of type GUILD_PUBLIC_THREAD. When called on a GUILD_NEWS channel returns threads of type GUILD_NEWS_THREAD. Threads are ordered by archive_timestamp, in descending order.
            Requires the READ_MESSAGE_HISTORY permission.
            See <a href="https://discord.com/developers/docs/resources/channel#list-public-archived-threads">List Public Archived Threads</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="request">The options to use when looking up the archived threads</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.ListPrivateArchivedThreads(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Threads.ThreadArchivedLookup)">
            <summary>
            Returns archived threads in the channel that are of type GUILD_PRIVATE_THREAD.
            Threads are ordered by archive_timestamp, in descending order.
            Requires both the READ_MESSAGE_HISTORY and MANAGE_THREADS permissions.
            See <a href="https://discord.com/developers/docs/resources/channel#list-private-archived-threads">List Private Archived Threads</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="request">The options to use when looking up the archived threads</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.ListJoinedPrivateArchivedThreads(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Threads.ThreadArchivedLookup)">
            <summary>
            Returns archived threads in the channel that are of type GUILD_PRIVATE_THREAD, and the user has joined.
            Threads are ordered by their id, in descending order.
            Requires the READ_MESSAGE_HISTORY permission.
            See <a href="https://discord.com/developers/docs/resources/channel#list-joined-private-archived-threads">List Joined Private Archived Threads</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="lookup">The options to use when looking up the archived threads</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.GetStageInstance(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Gets the stage instance associated with the Stage channel, if it exists.
            See <a href="https://discord.com/developers/docs/resources/stage-instance#get-stage-instance">Get Stage Instance</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.FollowedChannel">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#followed-channel-object-followed-channel-structure">Followed Channel Structure</a> from an API response
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.FollowedChannel.ChannelId">
            <summary>
            Source channel ID
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.FollowedChannel.WebhookId">
            <summary>
            Created target webhook ID
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.ForumLayoutTypes">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#channel-object-forum-layout-types">Forum Layout Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ForumLayoutTypes.NotSet">
            <summary>
            No default has been set for forum channel
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ForumLayoutTypes.ListView">
            <summary>
            Display posts as a list
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ForumLayoutTypes.GalleryView">
            <summary>
            Display posts as a collection of tiles
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.ForumTag">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#overwrite-object-overwrite-structure">Overwrite Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ForumTag.Id">
            <summary>
            The id of the tag
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ForumTag.Name">
            <summary>
            The name of the tag (0-20 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ForumTag.Moderated">
            <summary>
            Whether this tag can only be added to or removed from threads by a member with the MANAGE_THREADS permission
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ForumTag.EmojiId">
            <summary>
            The id of a guild's custom emoji
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ForumTag.EmojiName">
            <summary>
            The unicode character of the emoji
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.ForumTag.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.GroupDmChannelUpdate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#modify-channel-json-params-group-dm">Group DM Channel Update Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GroupDmChannelUpdate.Name">
            <summary>
            The name of the channel (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GroupDmChannelUpdate.Icon">
            <summary>
            Base64 encoded icon
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.GroupDmChannelUpdate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#modify-channel-json-params-guild-channel">Guild Channel Update Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.Name">
            <summary>
            The name of the channel (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.Type">
            <summary>
            the type of channel
            See <see cref="T:Oxide.Ext.Discord.Entities.Channels.ChannelType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.Position">
            <summary>
            The position of the channel in the left-hand listing
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.Topic">
            <summary>
            The channel topic (0-1024 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.Nsfw">
            <summary>
            Whether the channel is nsfw
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.RateLimitPerUser">
            <summary>
            Amount of seconds a user has to wait before sending another message (0-21600);
            bots, as well as users with the permission manage_messages or manage_channel, are unaffected
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.Bitrate">
            <summary>
            The bitrate (in bits) of the voice channel
            8000 to 96000 (128000 for VIP servers)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.UserLimit">
            <summary>
            The user limit of the voice channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.PermissionOverwrites">
            <summary>
            Explicit permission overwrites for members and roles <see cref="T:Oxide.Ext.Discord.Entities.Channels.Overwrite"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.ParentId">
            <summary>
            ID of the parent category for a channel (each parent category can contain up to 50 channels)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.RtcRegion">
            <summary>
            Channel voice region id, automatic when set to null
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.VideoQualityMode">
            <summary>
            The camera video quality mode of the voice channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.DefaultAutoArchiveDuration">
            <summary>
            The default duration for newly created threads in the channel, in minutes, to automatically archive the thread after recent activity
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.AvailableTags">
            <summary>
            The set of tags that can be used in a GUILD_FORUM channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.DefaultReactionEmoji">
            <summary>
            The emoji to show in the add reaction button on a thread in a GUILD_FORUM channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.DefaultThreadRateLimitPerUser">
            <summary>
            The initial rate_limit_per_user to set on newly created threads in a channel. this field is copied to the thread at creation time and does not live update.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.GuildChannelUpdate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Overwrite">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#overwrite-object-overwrite-structure">Overwrite Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Overwrite.Id">
            <summary>
            Role or user ID
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Overwrite.Type">
            <summary>
            Permission Type <see cref="T:Oxide.Ext.Discord.Entities.Channels.PermissionType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Overwrite.Allow">
            <summary>
            Permissions allowed <see cref="T:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Overwrite.Deny">
            <summary>
            Permissions denied <see cref="T:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.PermissionType">
            <summary>
            Represents the type of a permission
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionType.Role">
            <summary>
            This permission belongs to a role
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionType.Member">
            <summary>
            This permission belongs to a member
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.SortOrderType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#channel-object-sort-order-types">Sort Order Types</a> in Discord
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.SortOrderType.LatestActivity">
            <summary>
            Sort forum posts by activity
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.SortOrderType.CreationDate">
            <summary>
            Sort forum posts by creation time (from most recent to oldest)
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Stages.PrivacyLevel">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/stage-instance#stage-instance-object-privacy-level">Stage Privacy Level</a> within Discord.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.Stages.PrivacyLevel.Public">
            <summary>
            The Stage instance is visible publicly. (deprecated)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.Stages.PrivacyLevel.GuildOnly">
            <summary>
            The Stage instance is visible to only guild members.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstance">
            <summary>
            Represents a channel <a href="https://discord.com/developers/docs/resources/stage-instance#stage-instance-object-stage-instance-structure">Stage Instance</a> within Discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstance.Id">
            <summary>
            The ID of this Stage instance
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstance.GuildId">
            <summary>
            The guild ID of the associated Stage channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstance.ChannelId">
            <summary>
            The ID of the associated Stage channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstance.Topic">
            <summary>
            The topic of the Stage instance (1-120 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstance.PrivacyLevel">
            <summary>
            The privacy level of the Stage instance
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstance.DiscoverableDisabled">
            <summary>
            Whether or not Stage discovery is disabled (deprecated)   
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstance.GuildScheduledEventId">
            <summary>
            The id of the scheduled event for this Stage instance
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstance.Create(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Stages.StageInstanceCreate)">
            <summary>
            Creates a new Stage instance associated to a Stage channel.
            Requires the user to be a moderator of the Stage channel.
            See <a href="https://discord.com/developers/docs/resources/stage-instance#create-stage-instance">Create Stage Instance</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="create">Create Stage Instance Object</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstance.Get(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Gets the stage instance associated with the Stage channel, if it exists.
            See <a href="https://discord.com/developers/docs/resources/stage-instance#get-stage-instance">Get Stage Instance</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to get the stage instance for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstance.Edit(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Stages.StageInstanceUpdate)">
            <summary>
            Modifies fields of an existing Stage instance.
            Requires the user to be a moderator of the Stage channel.
            See <a href="https://discord.com/developers/docs/resources/stage-instance#modify-stage-instance">Update Stage Instance</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="update">Update for the stage instance</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstance.Delete(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Deletes the Stage instance.
            Requires the user to be a moderator of the Stage channel.
            See <a href="https://discord.com/developers/docs/resources/stage-instance#delete-stage-instance">Delete Stage Instance</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstanceCreate">
            <summary>
            Represents a <a> href="https://discord.com/developers/docs/resources/stage-instance#create-stage-instance-json-params">Stage Instance Create Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstanceCreate.ChannelId">
            <summary>
            The id of the Stage channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstanceCreate.Topic">
            <summary>
            The topic of the Stage instance (1-120 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstanceCreate.PrivacyLevel">
            <summary>
            The privacy level of the Stage instance (default GUILD_ONLY)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstanceCreate.SendStartNotification">
            <summary>
            Notify @everyone that a Stage instance has started
            The stage moderator must have the MENTION_EVERYONE permission for this notification to be sent.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstanceUpdate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/stage-instance#modify-stage-instance-json-params">Modify Stage Instance</a> Structure
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstanceUpdate.Topic">
            <summary>
            The topic of the Stage instance (1-120 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstanceUpdate.PrivacyLevel">
            <summary>
            The privacy level of the Stage instance
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Threads.GetThreadMember">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#get-thread-member-query-string-params">Get Thread Member Query String Params</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.GetThreadMember.WithMember">
            <summary>
            Whether to include a guild member object for the thread member
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Threads.GetThreadMember.ToQueryString">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Threads.ListThreadMembers">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#list-thread-members-query-string-params">List Thread Member Query String Params</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ListThreadMembers.WithMember">
            <summary>
            Whether to include a guild member object for the thread member
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ListThreadMembers.After">
            <summary>
            Get thread members after this user ID
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ListThreadMembers.Limit">
            <summary>
            Max number of thread members to return (1-100). Defaults to 100.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Threads.ListThreadMembers.ToQueryString">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadArchivedLookup">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#list-public-archived-threads-query-string-params">Thread Archive Lookup Structure</a> within Discord.
            Represents a <a href="https://discord.com/developers/docs/resources/channel#list-private-archived-threads-query-string-params">Thread Archive Lookup Structure</a> within Discord.
            Represents a <a href="https://discord.com/developers/docs/resources/channel#list-joined-private-archived-threads-query-string-params">Thread Archive Lookup Structure</a> within Discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadArchivedLookup.Before">
            <summary>
            Returns threads before this timestamp
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadArchivedLookup.Limit">
            <summary>
            Optional maximum number of threads to return
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadArchivedLookup.ToQueryString">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadChannelUpdate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#modify-channel-json-params-thread">Thread Channel Update Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadChannelUpdate.Name">
            <summary>
            The name of the channel (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadChannelUpdate.Archived">
            <summary>
            Whether the channel is archived
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadChannelUpdate.AutoArchiveDuration">
            <summary>
            Duration in minutes to automatically archive the thread after recent activity
            Can be set to: 60, 1440, 4320, 10080
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadChannelUpdate.Locked">
            <summary>
            Whether the thread is locked
            When a thread is locked, only users with MANAGE_THREADS can unarchive it
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadChannelUpdate.Invitable">
            <summary>
            Whether non-moderators can add other non-moderators to a thread
            Only available on private threads
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadChannelUpdate.RateLimitPerUser">
            <summary>
            Amount of seconds a user has to wait before sending another message (0-21600)
            Bots and users with the permission manage_messages, manage_thread, or manage_channel, are unaffected
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadChannelUpdate.Flags">
            <summary>
            Channel flags combined as a bitfield; PINNED can only be set for threads in forum channels
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadChannelUpdate.AppliedTags">
            <summary>
            The IDs of the set of tags that have been applied to a thread in a GUILD_FORUM channel
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadChannelUpdate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadCreate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#start-thread-without-message-json-params">Thread Create Structure</a> within Discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadCreate.Name">
            <summary>
            1-100 character thread name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadCreate.AutoArchiveDuration">
            <summary>
            Duration in minutes to automatically archive the thread after recent activity, can be set to: 60, 1440, 4320, 10080
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadCreate.Type">
            <summary>
            The type of thread to create
            Can only be GuildNewsThread, GuildPublicThread, or GuildPrivateThread
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadCreate.Invitable">
            <summary>
            Whether non-moderators can add other non-moderators to a thread; only available when creating a private thread
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadCreate.RateLimitPerUser">
            <summary>
            Amount of seconds a user has to wait before sending another message (0-21600)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadCreate.Validate">
            <summary>
            Validates the Thread Forum Create
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadCreateFromMessage">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#start-thread-from-message-json-params">Thread Create From Message</a> Structure
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadCreateFromMessage.Name">
            <summary>
            1-100 character thread name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadCreateFromMessage.AutoArchiveDuration">
            <summary>
            Duration in minutes to automatically archive the thread after recent activity, can be set to: 60, 1440, 4320, 10080
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadCreateFromMessage.RateLimitPerUser">
            <summary>
            Amount of seconds a user has to wait before sending another message (0-21600)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadCreateFromMessage.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadForumCreate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#start-thread-in-forum-channel-jsonform-params">Start Thread in Forum Channel</a> Structure
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadForumCreate.Name">
            <summary>
            1-100 character thread name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadForumCreate.AutoArchiveDuration">
            <summary>
            Duration in minutes to automatically archive the thread after recent activity, can be set to: 60, 1440, 4320, 10080
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadForumCreate.RateLimitPerUser">
            <summary>
            Amount of seconds a user has to wait before sending another message (0-21600)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadForumCreate.Message">
            <summary>
            Contents of the first message in the forum thread
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadForumCreate.AppliedTags">
            <summary>
            The IDs of the set of tags that have been applied to a thread in a GUILD_FORUM channel
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadForumCreate.Validate">
            <summary>
            Validates the Thread Forum Create
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadList">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#list-active-threads">Thread List Structure</a> within Discord.
            Represents a <a href="https://discord.com/developers/docs/resources/channel#list-public-archived-threads-response-body">Thread List Public Archived Structure</a> within Discord.
            Represents a <a href="https://discord.com/developers/docs/resources/channel#list-private-archived-threads-response-body">Thread List Private Archived Structure</a> within Discord.
            Represents a <a href="https://discord.com/developers/docs/resources/guild#list-active-threads">Thread List Private Archived Structure</a> within Discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadList.Threads">
            <summary>
            The active threads
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadList.Members">
            <summary>
            A thread member object for each returned thread the current user has joined
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadList.HasMore">
            <summary>
            Whether there are potentially additional threads that could be returned on a subsequent call
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadMember">
            <summary>
            Represents a guild or DM <a href="https://discord.com/developers/docs/resources/channel#thread-member-object">Thread Member Structure</a> within Discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadMember.Id">
            <summary>
            The id of the thread
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadMember.UserId">
            <summary>
            The id of the user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadMember.JoinTimestamp">
            <summary>
            The time the current user last joined the thread
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadMember.Flags">
            <summary>
            Any user-thread settings, currently only used for notifications
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadMember.Member">
            <summary>
            The time the current user last joined the thread
            * field is only present when withMember is set to true when calling List Thread Members or Get Thread Member.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadMetadata">
            <summary>
            Represents a guild or DM <a href="https://discord.com/developers/docs/resources/channel#thread-metadata-object-thread-metadata-structure">Thread Metadata Structure</a> within Discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadMetadata.Archived">
            <summary>
            Whether the thread is archived
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadMetadata.AutoArchiveDuration">
            <summary>
            Duration in minutes to automatically archive the thread after recent activity, can be set to: 60, 1440, 4320, 10080
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadMetadata.ArchiveTimestamp">
            <summary>
            Timestamp when the thread's archive status was last changed, used for calculating recent activity
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadMetadata.Locked">
            <summary>
            Whether the thread is locked
            When a thread is locked, only users with MANAGE_THREADS can unarchive it
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadMetadata.Invitable">
            <summary>
            Whether non-moderators can add other non-moderators to a thread
            Only available on private threads
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Threads.ThreadMetadata.CreateTimestamp">
            <summary>
            Timestamp when the thread was created; only populated for threads created after 2022-01-09
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.VideoQualityMode">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#channel-object-video-quality-modes">Video Quality Mode</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.VideoQualityMode.Auto">
            <summary>
            Discord chooses the quality for optimal performance
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.VideoQualityMode.Full">
            <summary>
            720p
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.DiscordColor">
            <summary>
            Represents a Discord Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.Default">
            <summary>
            Default Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.Teal">
            <summary>
            Teal Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.DarkTeal">
            <summary>
            Dark Teal Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.Green">
            <summary>
            Green Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.DarkGreen">
            <summary>
            Dark Green Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.Blue">
            <summary>
            Blue Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.DarkBlue">
            <summary>
            Dark Blue Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.Purple">
            <summary>
            Purple Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.DarkPurple">
            <summary>
            Dark Purple Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.Magenta">
            <summary>
            Magenta Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.DarkMagenta">
            <summary>
            Dark Magenta Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.Gold">
            <summary>
            Gold Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.LightOrange">
            <summary>
            Light Orange Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.Orange">
            <summary>
            Orange Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.DarkOrange">
            <summary>
            Dark Orange Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.Red">
            <summary>
            Red Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.DarkRed">
            <summary>
            Dark Red Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.LightGrey">
            <summary>
            Light Gray Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.LighterGrey">
            <summary>
            Lighter Gray Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.DarkGrey">
            <summary>
            Dark Gray Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.DarkerGrey">
            <summary>
            Darker Gray Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.Success">
            <summary>
            Discord Success Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.Warning">
            <summary>
            Discord Warning Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.Danger">
            <summary>
            Discord Danger Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.BlurpleOld">
            <summary>
            Discord Old Blurple Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.Blurple">
            <summary>
            Discord Blurple Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.Fuchsia">
            <summary>
            Discord Fuchsia Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.DiscordColor.Color">
            <summary>
            uint value of the hex color code
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.DiscordColor.#ctor(System.UInt32)">
            <summary>
            DiscordColor Constructor
            </summary>
            <param name="color">uint value of hex color code</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.DiscordColor.#ctor(System.String)">
            <summary>
            DiscordColor Constructor
            </summary>
            <param name="color">string hex color code</param>
            <exception cref="T:System.Exception">Throw if color is greater than #FFFFFF</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.DiscordColor.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            DiscordColor Constructor
            </summary>
            <param name="red">Red color (0-255)</param>
            <param name="green">Green color (0-255)</param>
            <param name="blue">Blue color (0-255)</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.DiscordColor.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            DiscordColor Constructor
            </summary>
            <param name="red">Red color (0-255)</param>
            <param name="green">Green color (0-255)</param>
            <param name="blue">Blue color (0-255)</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if any of the colors are &lt; 0 or &gt; 255</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.DiscordColor.#ctor(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            DiscordColor Constructor
            </summary>
            <param name="red">Red color (0-255)</param>
            <param name="green">Green color (0-255)</param>
            <param name="blue">Blue color (0-255)</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if any of the colors are &gt; 255</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.DiscordColor.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            DiscordColor Constructor
            </summary>
            <param name="red">Red color (0.0 - 1.0)</param>
            <param name="green">Green color (0.0 - 1.0)</param>
            <param name="blue">Blue color (0.0 - 1.0)</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if any of the colors are &lt; 0.0 or &gt; 1.0</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.DiscordColor.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            DiscordColor Constructor
            </summary>
            <param name="red">Red color (0.0 - 1.0)</param>
            <param name="green">Green color (0.0 - 1.0)</param>
            <param name="blue">Blue color (0.0 - 1.0)</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if any of the colors are &lt; 0.0 or &gt; 1.0</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.DiscordColor.ToString">
            <summary>
            Returns the color as a string
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Emojis.DefaultReaction">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#followed-channel-object">Default Reaction Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.DefaultReaction.EmojiId">
            <summary>
            The id of a guild's custom emoji
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.DefaultReaction.EmojiName">
            <summary>
            The unicode character of the emoji
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/emoji#emoji-object">Emoji Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji.Id">
            <summary>
            The ID for the emoji if it is custom; Otherwise invalid snowflake
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji.EmojiId">
            <summary>
            Emoji id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji.User">
            <summary>
            User that created this emoji
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji.RequireColons">
            <summary>
            Whether this emoji must be wrapped in colons
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji.Managed">
            <summary>
            Whether this emoji is managed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji.Animated">
            <summary>
            Whether this emoji is animated
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji.Available">
            <summary>
            Whether this emoji can be used, may be false due to loss of Server Boosts
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji.Url">
            <summary>
            Url to the emoji image
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji.Mention">
            <summary>
            Show the emoji in a message
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji.FromCharacter(System.String)">
            <summary>
            Returns an emoji object for the given emoji character
            </summary>
            <param name="emoji"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji.ToDataString">
            <summary>
            Returns the data string to be used in the API request
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Emojis.EmojiCreate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/emoji#create-guild-emoji-json-params">Emoji Create Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.EmojiCreate.Name">
            <summary>
            Emoji name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.EmojiCreate.ImageData">
            <summary>
            The 128x128 emoji image
            Emojis and animated emojis have a maximum file size of 256kb.
            Attempting to upload an emoji larger than this limit will fail and return 400 Bad Request
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.EmojiCreate.Roles">
            <summary>
            Roles this emoji is whitelisted to
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Emojis.EmojiCreate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Emojis.EmojiUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/emoji#modify-guild-emoji-json-params">Emoji Update Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.EmojiUpdate.Name">
            <summary>
            Emoji name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.EmojiUpdate.Roles">
            <summary>
            Roles this emoji is whitelisted to
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Emojis.EmojiUpdate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.CommandPayload">
            <summary>
            Represents a command payload
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.CommandPayload.OpCode">
            <summary>
            Command Code for the payload
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.CommandPayload.Payload">
            <summary>
            Payload data
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Gateway.CommandPayload.CreatePayload(Oxide.Ext.Discord.Entities.Gateway.Commands.GatewayCommandCode,System.Object)">
            <summary>
            Creates a <see cref="T:Oxide.Ext.Discord.Entities.Gateway.CommandPayload"/> for the web socket
            </summary>
            <param name="code">OP Code for the command</param>
            <param name="payload">Payload for the command</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Gateway.CommandPayload.Init(Oxide.Ext.Discord.Entities.Gateway.Commands.GatewayCommandCode,System.Object)">
            <summary>
            Initializes the pooled command payload
            </summary>
            <param name="code">OP Code for the command</param>
            <param name="payload">Payload for the command</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Gateway.CommandPayload.EnterPool">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Commands.ClientStatus">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#client-status-object">Client Status Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.ClientStatus.Desktop">
            <summary>
            The user's status set for an active desktop (Windows, Linux, Mac) application session
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.ClientStatus.Mobile">
            <summary>
            The user's status set for an active mobile (iOS, Android) application session
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.ClientStatus.Web">
            <summary>
            The user's status set for an active web (browser, bot account) application session
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Commands.GatewayCommandCode">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-opcodes">Gateway Opcodes</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.GatewayCommandCode.Heartbeat">
            <summary>
            Maintains an active gateway connection
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.GatewayCommandCode.Identify">
            <summary>
            Starts a new session during the initial handshake.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.GatewayCommandCode.PresenceUpdate">
            <summary>
            Update the client's status.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.GatewayCommandCode.VoiceStateUpdate">
            <summary>
            Used to join/leave or move between voice channels.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.GatewayCommandCode.Resume">
            <summary>
            Resume a previous session that was disconnected.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.GatewayCommandCode.RequestGuildMembers">
            <summary>
            Request information about offline guild members in a large guild.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Commands.GuildMembersRequestCommand">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway-events#request-guild-members">Request Guild Members</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.GuildMembersRequestCommand.GuildId">
            <summary>
            ID of the guild to get members for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.GuildMembersRequestCommand.Query">
            <summary>
            String that username starts with, or an empty string to return all members
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.GuildMembersRequestCommand.Limit">
            <summary>
            Maximum number of members to send matching the query;
            a limit of 0 can be used with an empty string query to return all members
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.GuildMembersRequestCommand.Presences">
            <summary>
            Used to specify if we want the presences of the matched members
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.GuildMembersRequestCommand.UserIds">
            <summary>
            Used to specify which users you wish to fetch
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.GuildMembersRequestCommand.Nonce">
            <summary>
            Nonce to identify the Guild Members Chunk response (Up to 25 characters)
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Commands.IdentifyCommand">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#identify">Identify</a> Command
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.IdentifyCommand.Token">
            <summary>
            Authentication token
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.IdentifyCommand.Properties">
            <summary>
            Connection properties
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.IdentifyCommand.Compress">
            <summary>
            Whether this connection supports compression of packets
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.IdentifyCommand.LargeThreshold">
            <summary>
            Value between 50 and 250, total number of members where the gateway will stop sending offline members in the guild member list
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.IdentifyCommand.Shard">
            <summary>
            Used for Guild Sharding
            See <a href="https://discord.com/developers/docs/topics/gateway#sharding">Guild Sharding</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.IdentifyCommand.PresenceUpdate">
            <summary>
            Presence structure for initial presence information
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.IdentifyCommand.Intents">
            <summary>
            The Gateway Intents you wish to receive
            See <a href="https://discord.com/developers/docs/topics/gateway#gateway-intents">Gateway Intents</a>
            See <see cref="T:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Commands.ConnectionProperties">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#identify-identify-connection-properties">Identify Connection Properties</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.ConnectionProperties.OperatingSystem">
            <summary>
            Your operating system
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.ConnectionProperties.Browser">
            <summary>
            Your library name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.ConnectionProperties.Device">
            <summary>
            Your library name
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Commands.ResumeSessionCommand">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#resume">Resume</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.ResumeSessionCommand.Token">
            <summary>
            Session token
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.ResumeSessionCommand.SessionId">
            <summary>
            Session ID
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.ResumeSessionCommand.Sequence">
            <summary>
            Last sequence number received
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Commands.UpdatePresenceCommand">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#update-presence">Update Status</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.UpdatePresenceCommand.Status">
            <summary>
            The user's new status
            <see cref="T:Oxide.Ext.Discord.Entities.Users.UserStatusType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.UpdatePresenceCommand.Activities">
            <summary>
            The user's activities (Required)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.UpdatePresenceCommand.Since">
            <summary>
            Unix time (in milliseconds) of when the client went idle, or null if the client is not idle
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.UpdatePresenceCommand.Afk">
            <summary>
            Whether or not the client is afk
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Commands.UpdateVoiceStatusCommand">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#update-voice-state">Update Voice State</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.UpdateVoiceStatusCommand.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.UpdateVoiceStatusCommand.ChannelId">
            <summary>
            ID of the voice channel client wants to join (null if disconnecting)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.UpdateVoiceStatusCommand.SelfMute">
            <summary>
            Is the client muted
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Commands.UpdateVoiceStatusCommand.SelfDeaf">
            <summary>
            Is the client deafened
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Commands.WebSocketCommand">
            <summary>
            Represents a command to be sent over the web socket
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.WebSocketCommand.Client">
            <summary>
            Client requesting the command
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Commands.WebSocketCommand.Payload">
            <summary>
            Payload for the command
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Gateway.Commands.WebSocketCommand.CreateCommand(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Gateway.Commands.GatewayCommandCode,System.Object)">
            <summary>
            Creates a new <see cref="T:Oxide.Ext.Discord.Entities.Gateway.Commands.WebSocketCommand"/>
            </summary>
            <param name="client">Client for the command</param>
            <param name="code"><see cref="T:Oxide.Ext.Discord.Entities.Gateway.Commands.GatewayCommandCode"/> For the command</param>
            <param name="payload">Payload for the command</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Gateway.Commands.WebSocketCommand.EnterPool">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Gateway.Commands.WebSocketCommand.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.EventPayload">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#payloads">Gateway Payload Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.EventPayload.OpCode">
            <summary>
            Op Code for the payload
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.EventPayload.DispatchCode">
            <summary>
            The event name for this payload
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.EventPayload.Data">
            <summary>
            Event data
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.EventPayload.Sequence">
            <summary>
            Sequence number, used for resuming sessions and heartbeats
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.EventPayload.ShouldResume">
            <summary>
            If the websocket should resume on reconnect.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Gateway.EventPayload.GetData``1(Oxide.Ext.Discord.Clients.BotClient)">
            <summary>
            Returns the Data as {T}
            </summary>
            <typeparam name="T">Type to convert Data to</typeparam>
            <returns>Data converted to {T}</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Gateway.EventPayload.EnterPool">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.AutoModActionExecutionEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#auto-moderation-action-execution-auto-moderation-action-execution-event-fields">Auto Moderation Action Execution Event</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.AutoModActionExecutionEvent.GuildId">
            <summary>
            Id of the guild in which action was executed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.AutoModActionExecutionEvent.Action">
            <summary>
            The action which was executed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.AutoModActionExecutionEvent.RuleId">
            <summary>
            Id of the rule which action belongs to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.AutoModActionExecutionEvent.RuleTriggerType">
            <summary>
            The <see cref="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerType"/> of rule which was triggered
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.AutoModActionExecutionEvent.UserId">
            <summary>
            Id of the user which generated the content which triggered the rule
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.AutoModActionExecutionEvent.MessageId">
            <summary>
            Id of any user message which content belongs to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.AutoModActionExecutionEvent.AlertSystemMessageId">
            <summary>
            The id of any system auto moderation messages posted as a result of this action
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.AutoModActionExecutionEvent.Content">
            <summary>
            The user generated text content
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.AutoModActionExecutionEvent.MatchedKeyword">
            <summary>
            The word or phrase configured in the rule that triggered the rule
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.AutoModActionExecutionEvent.MatchedContent">
            <summary>
            The substring in content that triggered the rule
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.ChannelPinsUpdatedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#channel-pins-update">Channel Pins Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.ChannelPinsUpdatedEvent.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.ChannelPinsUpdatedEvent.ChannelId">
            <summary>
            The id of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.ChannelPinsUpdatedEvent.LastPinTimestamp">
            <summary>
            The time at which the most recent pinned message was pinned
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayEventCode">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-opcodes">Gateway Opcodes</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayEventCode.Dispatch">
            <summary>
            An event was dispatched.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayEventCode.Heartbeat">
            <summary>
            Fired periodically by the client to keep the connection alive.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayEventCode.Reconnect">
            <summary>
            You should attempt to reconnect and resume immediately.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayEventCode.InvalidSession">
            <summary>
            The session has been invalidated. You should reconnect and identify/resume accordingly.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayEventCode.Hello">
            <summary>
            Sent immediately after connecting, contains the heartbeat_interval to use.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayEventCode.HeartbeatAcknowledge">
            <summary>
            Sent in response to receiving a heartbeat to acknowledge that it has been received.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayHelloEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#hello">Hello</a>
            Sent on connection to the websocket. Defines the heartbeat interval that the client should heartbeat to.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayHelloEvent.HeartbeatInterval">
            <summary>
            The interval (in milliseconds) the client should heartbeat with
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayReadyEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#ready">Ready</a>
            The ready event is dispatched when a client has completed the initial handshake with the gateway (for new sessions)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayReadyEvent.Version">
            <summary>
            Gateway version
            See <a href="https://discord.com/developers/docs/topics/gateway#gateways-gateway-versions">Gateway Version</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayReadyEvent.User">
            <summary>
            Information about the user including email
            See <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayReadyEvent.Guilds">
            <summary>
            The guilds the user is in
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayReadyEvent.SessionId">
            <summary>
            Used for resuming connections
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayReadyEvent.ResumeSessionUrl">
            <summary>
            Websocket URL to use when resuming the session
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayReadyEvent.Shard">
            <summary>
            The shard information associated with this session, if sent when identifying
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayReadyEvent.Application">
            <summary>
            Contains id and flags
            See <see cref="P:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayReadyEvent.Application"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GatewayResumedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#resumed">Resumed</a>
            The resumed event is dispatched when a client has sent a resume payload to the gateway (for resuming existing sessions).
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GuildEmojisUpdatedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-emojis-update">Guild Emojis Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildEmojisUpdatedEvent.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildEmojisUpdatedEvent.Emojis">
            <summary>
            List of emojis
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GuildIntegrationsUpdatedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-integrations-update">Guild Integrations Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildIntegrationsUpdatedEvent.GuildId">
            <summary>
            ID of the guild whose integrations were updated
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMemberAddedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-member-add">Guild Member Add</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMemberAddedEvent.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMemberBannedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-ban-add">Guild Ban Add</a> Event
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-ban-remove">Guild Ban Remove</a> Event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMemberBannedEvent.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMemberBannedEvent.User">
            <summary>
            The banned / unbanned user
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMemberRemovedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-member-remove">Guild Member Remove</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMemberRemovedEvent.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMemberRemovedEvent.User">
            <summary>
            The user who was removed
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMembersChunkEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-members-chunk">Guild Members Chunk</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMembersChunkEvent.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMembersChunkEvent.Members">
            <summary>
            Set of guild members
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMembersChunkEvent.ChunkIndex">
            <summary>
            The chunk index in the expected chunks for this response (0 &lt;= chunk_index &lt; chunk_count)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMembersChunkEvent.ChunkCount">
            <summary>
            The total number of expected chunks for this response
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMembersChunkEvent.NotFound">
            <summary>
            If passing an invalid id to REQUEST_GUILD_MEMBERS, it will be returned here
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMembersChunkEvent.Presences">
            <summary>
            If passing true to REQUEST_GUILD_MEMBERS, presences of the returned members will be here
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMembersChunkEvent.Nonce">
            <summary>
            The nonce used in the Guild Members Request
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMemberUpdatedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-member-update">Guild Member Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildMemberUpdatedEvent.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GuildRoleCreatedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-role-create">Guild Role Create</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildRoleCreatedEvent.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildRoleCreatedEvent.Role">
            <summary>
            The role created
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GuildRoleDeletedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-role-delete">Guild Role Delete</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildRoleDeletedEvent.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildRoleDeletedEvent.RoleId">
            <summary>
            ID of the role
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GuildRoleUpdatedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-role-update">Guild Role Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildRoleUpdatedEvent.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildRoleUpdatedEvent.Role">
            <summary>
            The role updated
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GuildScheduleEventUserAddedEvent">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/topics/gateway#guild-scheduled-event-user-add-guild-scheduled-event-user-add-event-fields">Guild Scheduled Event User Add Event Fields</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildScheduleEventUserAddedEvent.GuildScheduledEventId">
            <summary>
            ID of the guild scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildScheduleEventUserAddedEvent.UserId">
            <summary>
            ID of the user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildScheduleEventUserAddedEvent.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GuildScheduleEventUserRemovedEvent">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/topics/gateway#guild-scheduled-event-user-remove">Guild Scheduled Event User Remove Event Fields</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildScheduleEventUserRemovedEvent.GuildScheduledEventId">
            <summary>
            ID of the guild scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildScheduleEventUserRemovedEvent.UserId">
            <summary>
            ID of the user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildScheduleEventUserRemovedEvent.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.GuildStickersUpdatedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-stickers-update">Guild Stickers Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildStickersUpdatedEvent.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.GuildStickersUpdatedEvent.Stickers">
            <summary>
            List of emojis
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.IntegrationCreatedEvent">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/topics/gateway#integration-create-integration-create-event-additional-fields">Integration Create Structure</a> 
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.IntegrationCreatedEvent.GuildId">
            <summary>
            Guild Id the Integration was created in
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.IntegrationDeletedEvent">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/topics/gateway#integration-delete-integration-delete-event-fields">Integration Delete Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.IntegrationDeletedEvent.Id">
            <summary>
            ID of the integration
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.IntegrationDeletedEvent.GuildId">
            <summary>
            Guild ID the integration was in
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.IntegrationDeletedEvent.ApplicationId">
            <summary>
            Application ID of the integration
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.IntegrationUpdatedEvent">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/topics/gateway#integration-update-integration-update-event-additional-fields">Integration Update Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.IntegrationUpdatedEvent.GuildId">
            <summary>
            Guild ID the integration was updated In
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.InviteCreatedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#invite-create">Invite Create</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.InviteCreatedEvent.ChannelId">
            <summary>
            The channel the invite is for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.InviteCreatedEvent.Code">
            <summary>
            The unique invite code
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.InviteCreatedEvent.CreatedAt">
            <summary>
            The time at which the invite was created
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.InviteCreatedEvent.GuildId">
            <summary>
            The guild of the invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.InviteCreatedEvent.Inviter">
            <summary>
            The user that created the invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.InviteCreatedEvent.MaxAge">
            <summary>
            How long the invite is valid for (in seconds)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.InviteCreatedEvent.MaxUses">
            <summary>
            The maximum number of times the invite can be use
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.InviteCreatedEvent.TargetUser">
            <summary>
            The target user for this invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.InviteCreatedEvent.TargetUserType">
            <summary>
            The type of user target for this invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.InviteCreatedEvent.Temporary">
            <summary>
            Whether or not the invite is temporary (invited users will be kicked on disconnect unless they're assigned a role)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.InviteCreatedEvent.Uses">
            <summary>
            How many times the invite has been used (always will be 0)
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.InviteDeletedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#invite-delete">Invite Delete</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.InviteDeletedEvent.ChannelId">
            <summary>
            The channel of the invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.InviteDeletedEvent.GuildId">
            <summary>
            The guild of the invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.InviteDeletedEvent.Code">
            <summary>
            The unique invite code
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.MessageBulkDeletedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#message-delete-bulk">Message Delete Bulk</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageBulkDeletedEvent.Ids">
            <summary>
            The ids of the messages
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageBulkDeletedEvent.ChannelId">
            <summary>
            The id of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageBulkDeletedEvent.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.MessageDeletedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#message-delete">Message Delete</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageDeletedEvent.Id">
            <summary>
            The id of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageDeletedEvent.ChannelId">
            <summary>
            The id of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageDeletedEvent.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionAddedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#message-reaction-add">Message Reaction Add</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionAddedEvent.UserId">
            <summary>
            The id of the user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionAddedEvent.ChannelId">
            <summary>
            The id of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionAddedEvent.MessageId">
            <summary>
            The id of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionAddedEvent.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionAddedEvent.Member">
            <summary>
            The member who reacted if this happened in a guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionAddedEvent.Emoji">
            <summary>
            The emoji used to react
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionRemovedAllEmojiEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#message-reaction-remove-emoji-message-reaction-remove-emoji">Message Reaction Remove All</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionRemovedAllEmojiEvent.Emoji">
            <summary>
            Emoji that was removed from the message
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionRemovedAllEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#message-reaction-remove-all">Message Reaction Remove All</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionRemovedAllEvent.ChannelId">
            <summary>
            The id of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionRemovedAllEvent.MessageId">
            <summary>
            The id of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionRemovedAllEvent.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionRemovedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#message-reaction-remove">Message Reaction Remove</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionRemovedEvent.UserId">
            <summary>
            The id of the user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionRemovedEvent.ChannelId">
            <summary>
            The id of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionRemovedEvent.MessageId">
            <summary>
            The id of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionRemovedEvent.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.MessageReactionRemovedEvent.Emoji">
            <summary>
            The emoji removed
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.PresenceUpdatedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#presence-update">Presence Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.PresenceUpdatedEvent.User">
            <summary>
            The user presence is being updated for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.PresenceUpdatedEvent.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.PresenceUpdatedEvent.Status">
            <summary>
            Users status
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.PresenceUpdatedEvent.Activities">
            <summary>
            User's current activities
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.PresenceUpdatedEvent.ClientStatus">
            <summary>
            User's platform-dependent status
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.ThreadListSyncEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#thread-list-sync-thread-list-sync-event-fields">Thread List Sync</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.ThreadListSyncEvent.GuildId">
            <summary>
            The ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.ThreadListSyncEvent.ChannelIds">
            <summary>
            The parent channel ids whose threads are being synced. If omitted, then threads were synced for the entire guild. This array may contain channel_ids that have no active threads as well, so you know to clear that data.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.ThreadListSyncEvent.Threads">
            <summary>
            All active threads in the given channels that the current user can access
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.ThreadListSyncEvent.Members">
            <summary>
            All thread member objects from the synced threads for the current user, indicating which threads the current user has been added to
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.ThreadMembersUpdatedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#thread-members-update-thread-members-update-event-fields">Thread Members Update Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.ThreadMembersUpdatedEvent.Id">
            <summary>
            The id of the thread
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.ThreadMembersUpdatedEvent.GuildId">
            <summary>
            The ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.ThreadMembersUpdatedEvent.MemberCount">
            <summary>
            The approximate number of members in the thread, capped at 50
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.ThreadMembersUpdatedEvent.AddedMembers">
            <summary>
            The users who were added to the thread
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.ThreadMembersUpdatedEvent.RemovedMemberIds">
            <summary>
            The id of the users who were removed from the thread
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.ThreadMemberUpdateEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#thread-member-update">Thread Member Update Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.ThreadMemberUpdateEvent.GuildId">
            <summary>
            The ID of the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.TypingStartedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#typing-start">Typing Start</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.TypingStartedEvent.ChannelId">
            <summary>
            ID of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.TypingStartedEvent.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.TypingStartedEvent.UserId">
            <summary>
            ID of the user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.TypingStartedEvent.Timestamp">
            <summary>
            Unix time (in seconds) of when the user started typing
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.TypingStartedEvent.Member">
            <summary>
            The member who started typing if this happened in a guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.VoiceServerUpdatedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#voice-server-update">Voice Server Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.VoiceServerUpdatedEvent.Token">
            <summary>
            Voice connection token
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.VoiceServerUpdatedEvent.GuildId">
            <summary>
            The guild this voice server update is for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.VoiceServerUpdatedEvent.Endpoint">
            <summary>
            The voice server host
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Events.WebhooksUpdatedEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#webhooks-update">Webhooks Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.WebhooksUpdatedEvent.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Events.WebhooksUpdatedEvent.ChannelId">
            <summary>
            ID of the channel
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.Gateway">
            <summary>
            Represents Discord Gatway Connection Url
            See <a href="https://discord.com/developers/docs/topics/gateway#get-gateway">Get Gateway</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Gateway.Url">
            <summary>
            Gatway URL to use
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gateway.Gateway.WebsocketUrl">
            <summary>
            Saved Gateway URL
            Example: wss://gateway.discord.gg/?v=8&amp;encoding=json
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Gateway.Gateway.GetGateway(Oxide.Ext.Discord.Clients.BotClient)">
            <summary>
            Returns an object with a single valid WSS URL, which the client can use for Connecting.
            Clients should cache this value and only call this endpoint to retrieve a new URL if they are unable to properly establish a connection using the cached version of the URL.
            See <a href="https://discord.com/developers/docs/topics/gateway#get-gateway">Get Gateway</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#gateway-intents">Gateway Intents</a>
            These are used to indicate which events your bot / application wants to listen to / have access to
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.None">
            <summary>
            Represents No Intents
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.Guilds">
            <summary>
            - GUILD_CREATE
            - GUILD_UPDATE
            - GUILD_DELETE
            - GUILD_ROLE_CREATE
            - GUILD_ROLE_UPDATE
            - GUILD_ROLE_DELETE
            - CHANNEL_CREATE
            - CHANNEL_UPDATE
            - CHANNEL_DELETE
            - CHANNEL_PINS_UPDATE
            - THREAD_CREATE
            - THREAD_UPDATE
            - THREAD_DELETE
            - THREAD_LIST_SYNC
            - THREAD_MEMBER_UPDATE
            - THREAD_MEMBERS_UPDATE
            - STAGE_INSTANCE_CREATE
            - STAGE_INSTANCE_UPDATE
            - STAGE_INSTANCE_DELETE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.GuildMembers">
            <summary>
            - GUILD_MEMBER_ADD
            - GUILD_MEMBER_UPDATE
            - GUILD_MEMBER_REMOVE
            - THREAD_MEMBERS_UPDATE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.GuildModeration">
            <summary>
            - GUILD_AUDIT_LOG_ENTRY_CREATE
            - GUILD_BAN_ADD
            - GUILD_BAN_REMOVE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.GuildEmojisAndStickers">
            <summary>
            - GUILD_EMOJIS_UPDATE
            - GUILD_STICKERS_UPDATE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.GuildIntegrations">
            <summary>
            - GUILD_INTEGRATIONS_UPDATE
            - INTEGRATION_CREATE
            - INTEGRATION_UPDATE
            - INTEGRATION_DELETE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.GuildWebhooks">
            <summary>
            - WEBHOOKS_UPDATE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.GuildInvites">
            <summary>
            - INVITE_CREATE
            - INVITE_DELETE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.GuildVoiceStates">
            <summary>
            - VOICE_STATE_UPDATE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.GuildPresences">
            <summary>
            - PRESENCE_UPDATE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.GuildMessages">
            <summary>
            - MESSAGE_CREATE
            - MESSAGE_UPDATE
            - MESSAGE_DELETE
            - MESSAGE_DELETE_BULK
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.GuildMessageReactions">
            <summary>
            - MESSAGE_REACTION_ADD
            - MESSAGE_REACTION_REMOVE
            - MESSAGE_REACTION_REMOVE_ALL
            - MESSAGE_REACTION_REMOVE_EMOJI
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.GuildMessageTyping">
            <summary>
            - TYPING_START
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.DirectMessages">
            <summary>
            - MESSAGE_CREATE
            - MESSAGE_UPDATE
            - MESSAGE_DELETE
            - CHANNEL_PINS_UPDATE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.DirectMessageReactions">
            <summary>
            - MESSAGE_REACTION_ADD
            - MESSAGE_REACTION_REMOVE
            - MESSAGE_REACTION_REMOVE_ALL
            - MESSAGE_REACTION_REMOVE_EMOJI
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.DirectMessageTyping">
            <summary>
            - TYPING_START
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.MessageContent">
            <summary>
            - Guild Message.Content
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.MessageContentIntent">
            <summary>
            Old name for GatewayIntents.MessageContent
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.GuildScheduledEvents">
            <summary>
            - GUILD_SCHEDULED_EVENT_CREATE
            - GUILD_SCHEDULED_EVENT_UPDATE
            - GUILD_SCHEDULED_EVENT_DELETE
            - GUILD_SCHEDULED_EVENT_USER_ADD
            - GUILD_SCHEDULED_EVENT_USER_REMOVE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.AutoModerationConfiguration">
            <summary>
            - AUTO_MODERATION_RULE_CREATE
            - AUTO_MODERATION_RULE_UPDATE
            - AUTO_MODERATION_RULE_DELETE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gateway.GatewayIntents.AutoModerationExecution">
            <summary>
            - AUTO_MODERATION_ACTION_EXECUTION
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.DefaultNotificationLevel">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object-default-message-notification-level">Default Message Notification Level</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.DefaultNotificationLevel.AllMessages">
            <summary>
            Notify for all guild messages
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.DefaultNotificationLevel.OnlyMentions">
            <summary>
            Notify for only mentions
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object">Guild Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Id">
            <summary>
            Guild id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Name">
            <summary>
            Name of the guild (2-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Icon">
            <summary>
            Base64 128x128 image for the guild icon
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.IconHash">
            <summary>
            Icon hash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Splash">
            <summary>
            Splash hash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.DiscoverySplash">
            <summary>
            Discovery splash hash
            Only present for guilds with the "DISCOVERABLE" feature
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Owner">
            <summary>
            True if the user is the owner of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.OwnerId">
            <summary>
            ID of owner
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Permissions">
            <summary>
            Total permissions for the user in the guild (excludes overrides)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.AfkChannelId">
            <summary>
            ID of afk channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.AfkTimeout">
            <summary>
            Afk timeout in seconds
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.WidgetEnabled">
            <summary>
            True if the server widget is enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.WidgetChannelId">
            <summary>
            The channel id that the widget will generate an invite to, or null if set to no invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.VerificationLevel">
            <summary>
            Verification level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.DefaultMessageNotifications">
            <summary>
            Default message notification level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.ExplicitContentFilter">
            <summary>
            Explicit content filter level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Roles">
            <summary>
            Roles in the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Emojis">
            <summary>
            Custom guild emojis
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Features">
            <summary>
            Enabled guild features
            See <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.MfaLevel">
            <summary>
            Required MFA level for the guild
            See <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildMfaLevel"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.ApplicationId">
            <summary>
            Application id of the guild creator if it is bot-created
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.SystemChannelId">
            <summary>
            The id of the channel where guild notices such as welcome messages and boost events are posted
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.SystemChannelFlags">
            <summary>
            System channel flags
            See <see cref="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.SystemChannelFlags"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.RulesChannelId">
            <summary>
            The id of the channel where Community guilds can display rules and/or guidelines
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.JoinedAt">
            <summary>
            When this guild was joined at
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Large">
            <summary>
            True if this is considered a large guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Unavailable">
            <summary>
            True if this guild is unavailable due to an outage
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.MemberCount">
            <summary>
            Total number of members in this guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.VoiceStates">
            <summary>
            States of members currently in voice channels; lacks the guild_id key
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Members">
            <summary>
            Users in the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Channels">
            <summary>
            Channels in the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Threads">
            <summary>
            All active threads in the guild that current user has permission to view
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Presences">
            <summary>
            Presences of the members in the guild
            will only include non-offline members if the size is greater than large threshold
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.MaxPresences">
            <summary>
            The maximum number of presences for the guild (the default value, currently 25000, is in effect when null is returned)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.MaxMembers">
            <summary>
            The maximum number of members for the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.VanityUrlCode">
            <summary>
            The vanity url code for the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Description">
            <summary>
            The description of a guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Banner">
            <summary>
            Banner hash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.PremiumTier">
            <summary>
            Premium tier (Server Boost level)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.PremiumSubscriptionCount">
            <summary>
            The number of boosts this guild currently has
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.PreferredLocale">
            <summary>
            The preferred locale of a Community guild
            Used in server discovery and notices from Discord
            Defaults to "en-US"
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.PublicUpdatesChannelId">
            <summary>
            The maximum amount of users in a video channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.MaxStageVideoChannelUsers">
            <summary>
            The maximum amount of users in a stage video channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.MaxVideoChannelUsers">
            <summary>
            The maximum amount of users in a video channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.ApproximateMemberCount">
            <summary>
            Approximate number of members in this guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.ApproximatePresenceCount">
            <summary>
            Approximate number of non-offline members in this guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.WelcomeScreen">
            <summary>
            The welcome screen of a Community guild
            Shown to new members, returned in an Invite's guild object
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.NsfwLevel">
            <summary>
            Guild NSFW level
            <a href="https://support.discord.com/hc/en-us/articles/1500005389362-NSFW-Server-Designation">NSFW Information</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.StageInstances">
            <summary>
            Stage instances in the guild
            <see cref="T:Oxide.Ext.Discord.Entities.Channels.Stages.StageInstance"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Stickers">
            <summary>
            Custom guild stickers
            <see cref="T:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.ScheduledEvents">
            <summary>
            The scheduled events in the guild
            <see cref="T:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.PremiumProgressBarEnabled">
            <summary>
            The scheduled events in the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.SafetyAlertsChannelId">
            <summary>
            The ID of the channel where admins and moderators of Community guilds receive safety alerts from Discord
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.HasLoadedAllMembers">
            <summary>
            Returns true if all guild members have been loaded
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.LeftMembers">
            <summary>
            Members who have left the guild
            This list will contain members who have left the guild since the initial bot connection
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.IsAvailable">
            <summary>
            Returns if the guild is available to use
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.IconUrl">
            <summary>
            Returns the guild Icon Url
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.SplashUrl">
            <summary>
            Returns the Guilds Splash Url
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.DiscoverySplashUrl">
            <summary>
            Returns the guilds Discovery Splash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.BannerUrl">
            <summary>
            Return the guilds Banner Url
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.EveryoneRole">
            <summary>
            Returns the everyone role for the guild.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetChannel(System.String)">
            <summary>
            Returns a channel with the given name (Case Insensitive)
            </summary>
            <param name="name">Name of the channel</param>
            <returns>Channel with the given name; Null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetChannel(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns the <see cref="T:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild"/> channel or thread by ID
            </summary>
            <param name="id">ID of the thread of channel</param>
            <returns><see cref="T:Oxide.Ext.Discord.Entities.Channels.DiscordChannel"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetParentChannel(Oxide.Ext.Discord.Entities.Channels.DiscordChannel)">
            <summary>
            Returns the parent channel for a channel if it exists
            </summary>
            <param name="channel">Channel to find the parent for</param>
            <returns>Parent channel for the given channel; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetRole(System.String)">
            <summary>
            Returns a Role with the given name (Case Insensitive)
            </summary>
            <param name="name">Name of the role</param>
            <returns>Role with the given name; Null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetBoosterRole">
            <summary>
            Returns the booster role for the guild if it exists
            </summary>
            <returns>Booster role; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetMember(System.String)">
            <summary>
            Returns a GuildMember with the given username (Case Insensitive)
            </summary>
            <param name="userName">Username of the GuildMember</param>
            <returns>GuildMember with the given username; Null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetMember(Oxide.Ext.Discord.Entities.Snowflake,System.Boolean)">
            <summary>
            Returns the  <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildMember"/> for the given <see cref="T:Oxide.Ext.Discord.Entities.Snowflake"/> User ID including members who are no longer in the guild
            Left members only include <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildMember"/>s who have left the guild since the bot was connected
            </summary>
            <param name="userId">User ID of the guild member to get</param>
            <param name="includeLeft">If we should include guild members who have left the guild</param>
            <returns><see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildMember"/> For the UserId </returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetEmoji(System.String)">
            <summary>
            Finds guild emoji by name
            </summary>
            <param name="name">Name of the emoji</param>
            <returns>Emoji if found; null otherwise</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetUserPermissions(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns the user permissions for the given user ID
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Create(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildCreate)">
            <summary>
            Create a new guild.
            See <a href="https://discord.com/developers/docs/resources/guild#create-guild">Create Guild</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="create">Guild Create Object</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Get(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns the guild object for the given id
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild">Get Guild</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID to lookup</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetGuildPreview(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns the guild preview object for the given id.
            If the user is not in the guild, then the guild must be Discoverable.
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID to get preview for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Edit(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildUpdate)">
            <summary>
            Modify a guild's settings.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild">Modify Guild</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="update">Update to be applied to the guild</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Delete(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Delete a guild permanently.
            User must be owner
            See <a href="https://discord.com/developers/docs/resources/guild#delete-guild">Delete Guild</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetChannels(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns a list of guild channel objects.
            Does not include threads
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-channels">Get Guild Channels</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.CreateChannel(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.ChannelCreate)">
            <summary>
            Create a new channel object for the guild.
            Requires the MANAGE_CHANNELS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#create-guild-channel">Create Guild Channel</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channel">Channel to create</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.EditChannelPositions(Oxide.Ext.Discord.Clients.DiscordClient,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Guilds.GuildChannelPosition})">
            <summary>
            Modify the positions of a set of channel objects for the guild.
            Requires MANAGE_CHANNELS permission.
            Only channels to be modified are required, with the minimum being a swap between at least two channels.
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-channel-positions">Modify Guild Channel Positions</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="positions">List new channel positions for each channel</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.ListActiveThreads(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns all active threads in the guild, including public and private threads. Threads are ordered by their id, in descending order.
            See <a href="https://discord.com/developers/docs/resources/guild#list-active-threads">List Active Threads</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetMember(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns a guild member object for the specified user.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-member">Get Guild Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">UserID to get guild member for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Listembers(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildListMembers)">
            <summary>
            Returns a list of guild member objects that are members of the guild.
            In the future, this endpoint will be restricted in line with our Privileged Intents
            </summary>
            <param name="client">Client to use</param>
            <param name="list">Query string request for the list</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.SearchMembers(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildSearchMembers)">
            <summary>
            Searches for guild members by username or nickname
            </summary>
            <param name="client">Client to use</param>
            <param name="search">Username or nickname to match</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.AddMember(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Guilds.GuildMemberAdd)">
            <summary>
            Adds a user to the guild, provided you have a valid oauth2 access token for the user with the guilds.join scope. 
            See <a href="https://discord.com/developers/docs/resources/guild#add-guild-member">Add Guild Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID of the user to add</param>
            <param name="member">Member to copy from</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.EditMember(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate)">
            <summary>
            Modify attributes of a guild member
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-member">Modify Guild Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID of the user to update</param>
            <param name="update">Changes to make to the user</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.EditMemberNick(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.String)">
            <summary>
            Modify attributes of a guild member
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-member">Modify Guild Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID of the user to update</param>
            <param name="nick">Nickname for the user</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.EditCurrentMember(Oxide.Ext.Discord.Clients.DiscordClient,System.String)">
            <summary>
            Modifies the current members nickname in the guild
            See <a href="https://discord.com/developers/docs/resources/guild#modify-current-member">Modify Current Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="nick">New members nickname (1-32 characters)</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.AddMemberRole(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Users.DiscordUser,Oxide.Ext.Discord.Entities.Permissions.DiscordRole)">
            <summary>
            Adds a role to a guild member.
            Requires the MANAGE_ROLES permission.
            See <a href="https://discord.com/developers/docs/resources/guild#add-guild-member-role">Add Guild Member Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="user">User to add role to</param>
            <param name="role">Role to add</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.AddMemberRole(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Adds a role to a guild member.
            Requires the MANAGE_ROLES permission.
            See <a href="https://discord.com/developers/docs/resources/guild#add-guild-member-role">Add Guild Member Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID to add role to</param>
            <param name="roleId">Role ID to add</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.RemoveMemberRole(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Users.DiscordUser,Oxide.Ext.Discord.Entities.Permissions.DiscordRole)">
            <summary>
            Removes a role from a guild member.
            Requires the MANAGE_ROLES permission.
            See <a href="https://discord.com/developers/docs/resources/guild#remove-guild-member-role">Remove Guild Member Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="user">User to remove role form</param>
            <param name="role">Role to remove</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.RemoveMemberRole(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Removes a role from a guild member.
            Requires the MANAGE_ROLES permission.
            See <a href="https://discord.com/developers/docs/resources/guild#remove-guild-member-role">Remove Guild Member Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID to remove role form</param>
            <param name="roleId">Role ID to remove</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.RemoveMember(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildMember)">
            <summary>
            Remove a member from a guild.
            Requires KICK_MEMBERS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#remove-guild-member">Remove Guild Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="member">Guild Member to remove</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.RemoveMember(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Remove a member from a guild.
            Requires KICK_MEMBERS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#remove-guild-member">Remove Guild Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID of the user to remove</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetBans(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildBansRequest)">
            <summary>
            Returns a list of ban objects for the users banned from this guild.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-bans">Get Guild Bans</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="request">Request params for retrieving guild bans</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetBan(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns a guild ban for a specific user
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-ban">Get Guild Ban</a>
            Returns 404 if not found
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID to get guild ban for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.CreateBan(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildMember,Oxide.Ext.Discord.Entities.Guilds.GuildBanCreate)">
            <summary>
            Create a guild ban, and optionally delete previous messages sent by the banned user.
            Requires the BAN_MEMBERS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#create-guild-ban">Create Guild Ban</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="member">Guild Member to ban</param>
            <param name="ban">User ban information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.CreateBan(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Guilds.GuildBanCreate)">
            <summary>
            Create a guild ban, and optionally delete previous messages sent by the banned user.
            Requires the BAN_MEMBERS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#create-guild-ban">Create Guild Ban</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID to ban</param>
            <param name="ban">User ban information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.RemoveBan(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Remove the ban for a user.
            Requires the BAN_MEMBERS permissions.
            See <a href="https://discord.com/developers/docs/resources/guild#remove-guild-ban">Remove Guild Ban</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID of the user to unban</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetRoles(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns a list of role objects for the guild.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-roles">Get Guild Roles</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.CreateRole(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Permissions.DiscordRole)">
            <summary>
            Create a new role for the guild.
            Requires the MANAGE_ROLES permission.
            Returns the new role object on success.
            See <a href="https://discord.com/developers/docs/resources/guild#create-guild-role">Create Guild Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="role">New role to create</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.EditRolePositions(Oxide.Ext.Discord.Clients.DiscordClient,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Guilds.GuildRolePosition})">
            <summary>
            Modify the positions of a set of role objects for the guild.
            Requires the MANAGE_ROLES permission.
            Returns a list of all of the guild's role objects on success.
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-role-positions">Modify Guild Role Positions</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="positions">List of role with updated positions</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.EditRole(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Permissions.DiscordRole)">
            <summary>
            Modify a guild role.
            Requires the MANAGE_ROLES permission.
            Returns the updated role on success.
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-role">Modify Guild Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="role">Role to update</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.EditRole(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Permissions.DiscordRole)">
            <summary>
            Modify a guild role.
            Requires the MANAGE_ROLES permission.
            Returns the updated role on success.
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-role">Modify Guild Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="roleId">Role ID to update</param>
            <param name="role">Role to update</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.EditMfaLevel(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildUpdateMfaLevel)">
            <summary>
            Modify a guild's MFA level.
            Requires guild ownership.
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-mfa-level">Modify Guild MFA Level</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="level"><see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildUpdateMfaLevel"/> to set</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.DeleteRole(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Permissions.DiscordRole)">
            <summary>
            Delete a guild role.
            Requires the MANAGE_ROLES permission
            See <a href="https://discord.com/developers/docs/resources/guild#delete-guild-role">Delete Guild Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="role">Role to Delete</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.DeleteRole(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Delete a guild role.
            Requires the MANAGE_ROLES permission
            See <a href="https://discord.com/developers/docs/resources/guild#delete-guild-role">Delete Guild Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="roleId">Role ID to Delete</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetPruneCount(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildPruneGet)">
            <summary>
            Returns an object with one 'pruned' key indicating the number of members that would be removed in a prune operation.
            Requires the KICK_MEMBERS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-prune-count">Get Guild Prune Count</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="prune">Prune get request</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.BeginPrune(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildPruneBegin)">
            <summary>
            Begin a prune operation.
            Requires the KICK_MEMBERS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#begin-guild-prune">Begin Guild Prune</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="prune">Prune begin request</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetVoiceRegions(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns a list of voice region objects for the guild.
            Unlike the similar /voice route, this returns VIP servers when the guild is VIP-enabled.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-voice-regions">Get Guild Voice Regions</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetInvites(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns a list of invite objects (with invite metadata) for the guild.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-invites">Get Guild Invites</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetIntegrations(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns a list of integration objects for the guild.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-integrations">Get Guild Integrations</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.DeleteIntegration(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Integrations.Integration)">
            <summary>
            Delete the attached integration object for the guild.
            Deletes any associated webhooks and kicks the associated bot if there is one.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#delete-guild-integration">Delete Guild Integration</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="integration">Integration to delete</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.DeleteIntegration(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Delete the attached integration object for the guild.
            Deletes any associated webhooks and kicks the associated bot if there is one.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#delete-guild-integration">Delete Guild Integration</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="integrationId">Integration ID to delete</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetWidgetSettings(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns a guild widget object.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-widget-settings">Get Guild Widget Settings</a>
            </summary>
            <param name="client">client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.EditWidget(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildWidget)">
            <summary>
            Modify a guild widget object for the guild.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-widget">Modify Guild Widget</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="widget">Updated widget</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetWidget(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns the widget for the guild.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-widget">Get Guild Widget</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetWelcomeScreen(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns the Welcome Screen object for the guild.
            Requires the `MANAGE_GUILD` permission.
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.EditWelcomeScreen(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.WelcomeScreenUpdate)">
            <summary>
            Modify the guild's Welcome Screen.
            Requires the MANAGE_GUILD permission.
            Returns the updated Welcome Screen object.
            </summary>
            <param name="client">Client to use</param>
            <param name="update">Update to be made to the welcome screen</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetVanityUrl(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns a partial invite object for guilds with that feature enabled.
            Requires the MANAGE_GUILD permission.
            Code will be null if a vanity url for the guild is not set.
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.ListEmojis(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns a list of emoji objects for the given guild.
            See <a href="https://discord.com/developers/docs/resources/emoji#list-guild-emojis">List Guild Emojis</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetEmoji(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns an emoji object for the given guild and emoji IDs.
            See <a href="https://discord.com/developers/docs/resources/emoji#get-guild-emoji">Get Guild Emoji</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emojiId">Emoji to lookup</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.CreateEmoji(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Emojis.EmojiCreate)">
            <summary>
            Create a new emoji for the guild.
            Requires the MANAGE_EMOJIS permission.
            Returns the new emoji object on success.
            See <a href="https://discord.com/developers/docs/resources/emoji#create-guild-emoji">Create Guild Emoji</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to create</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.EditEmoji(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Emojis.EmojiUpdate)">
            <summary>
            Modify the given emoji.
            Requires the MANAGE_EMOJIS permission.
            Returns the updated emoji object on success.
            See <a href="https://discord.com/developers/docs/resources/emoji#modify-guild-emoji">Modify Guild Emoji</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emojiId">Emoji ID to update</param>
            <param name="emoji">Emoji update</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.DeleteEmoji(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Delete the given emoji.
            Requires the MANAGE_EMOJIS permission.
            See <a href="https://discord.com/developers/docs/resources/emoji#delete-guild-emoji">Delete Guild Emoji</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emojiId">Emoji ID to delete</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.EditCurrentUserVoiceState(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildCurrentUserVoiceStateUpdate)">
            <summary>
            Modifies the current user's voice state.
            See <a href="https://discord.com/developers/docs/resources/guild#modify-current-user-voice-state">Update Current User Voice State</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="update">Update to the guild voice state</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.EditUserVoiceState(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Guilds.GuildUserVoiceStateUpdate)">
            <summary>
            Modifies another user's voice state.
            See <a href="https://discord.com/developers/docs/resources/guild#modify-user-voice-state">Update Users Voice State</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User to modify</param>
            <param name="update">Update to the guild voice state</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.ListStickers(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns an array of sticker objects for the given guild.
            Includes user fields if the bot has the MANAGE_EMOJIS_AND_STICKERS permission.
            See <a href="https://discord.com/developers/docs/resources/sticker#list-guild-stickers">List Guild Stickers</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetSticker(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns a sticker object for the given guild and sticker IDs.
            Includes the user field if the bot has the MANAGE_EMOJIS_AND_STICKERS permission.
            See <a href="https://discord.com/developers/docs/resources/sticker#get-guild-sticker">Get Guild Sticker</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="stickerId">ID of the sticker to get</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.CreateSticker(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Stickers.GuildStickerCreate)">
            <summary>
            Create a new sticker for the guild.
            Requires the MANAGE_EMOJIS_AND_STICKERS permission.
            Returns the new sticker object on success.
            See <a href="https://discord.com/developers/docs/resources/sticker#create-guild-sticker">Create Guild Sticker</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="sticker">Sticker to create</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.EditSticker(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Stickers.DiscordSticker)">
            <summary>
            Modify the given sticker.
            Requires the MANAGE_EMOJIS_AND_STICKERS permission.
            Returns the updated sticker object on success.
            See <a href="https://discord.com/developers/docs/resources/sticker#modify-guild-sticker">Modify Guild Sticker</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="sticker">Sticker to modify</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.DeleteSticker(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Delete the given sticker.
            Requires the MANAGE_EMOJIS_AND_STICKERS permission.
            </summary>
            <param name="client">Client to use</param>
            <param name="stickerId">ID of the sticker to delete</param>
            See <a href="https://discord.com/developers/docs/resources/sticker#delete-guild-sticker">Delete Guild Sticker</a>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.ListAutoModRules(Oxide.Ext.Discord.Clients.DiscordClient)">
            <inheritdoc cref="M:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.GetAll(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)"/>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetAutoModRule(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <inheritdoc cref="M:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.Get(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)"/>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.CreateAutoModRule(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleCreate)">
            <inheritdoc cref="M:Oxide.Ext.Discord.Entities.AutoMod.AutoModRule.Create(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.AutoMod.AutoModRuleCreate)"/>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.GetOnboarding(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns the <see cref="T:Oxide.Ext.Discord.Entities.Guilds.Onboarding.GuildOnboarding"/> for the guild.
            
            </summary>
            <param name="client">Client to use</param>
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-onboarding">Get Guild Onboarding</a>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.ExplicitContentFilterLevel">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object-explicit-content-filter-level">Explicit Content Filter Level</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.ExplicitContentFilterLevel.Disabled">
            <summary>
            Disable explicit content filter
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.ExplicitContentFilterLevel.MembersWithoutRoles">
            <summary>
            Filter for only members without roles
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.ExplicitContentFilterLevel.AllMembers">
            <summary>
            Filter for all members
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildBan">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#ban-object-ban-structure">Guild Ban Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildBan.Reason">
            <summary>
            The reason for the ban
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildBan.User">
            <summary>
            The banned user
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildBanCreate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#create-guild-ban">Guild Ban Create Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildBanCreate.DeleteMessageDays">
            <summary>
            Number of days to delete messages for (0-7)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildBanCreate.DeleteMessageSeconds">
            <summary>
            Number of seconds to delete messages for, between 0 and 604800 (7 days)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildBanCreate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildBansRequest">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/guild#get-guild-bans-query-string-params">Get Guild Bans Query String Params</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildBansRequest.Limit">
            <summary>
            Number of users to return (up to maximum 1000)  
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildBansRequest.Before">
            <summary>
            Get bans before this user ID
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildBansRequest.After">
            <summary>
            Get bans after this user ID
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildBansRequest.ToQueryString">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildChannelPosition">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#modify-guild-channel-positions">Modify Guild Channel Position</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildChannelPosition.Id">
            <summary>
            ID of the channel or role
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildChannelPosition.Position">
            <summary>
            New position for the role / channel
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildCreate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#create-guild">Create Guild Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.Name">
            <summary>
            Name of the guild (2-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.Region">
            <summary>
            Voice region id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.Icon">
            <summary>
            Base64 128x128 image for the guild icon
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.VerificationLevel">
            <summary>
            Verification level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.DefaultMessageNotifications">
            <summary>
            Default message notification level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.ExplicitContentFilter">
            <summary>
            Explicit content filter level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.Roles">
            <summary>
            Roles in the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.Channels">
            <summary>
            Channels in the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.AfkChannelId">
            <summary>
            ID of afk channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.AfkTimeout">
            <summary>
            Afk timeout in seconds
            Can be set to: null, 60, 300, 900, 1800, 3600
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.SystemChannelId">
            <summary>
            The id of the channel where guild notices such as welcome messages and boost events are posted
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.SystemChannelFlags">
            <summary>
            System channel flags
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildCurrentUserVoiceStateUpdate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/guild#modify-current-user-voice-state-json-params">Modify Current User Voice State</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCurrentUserVoiceStateUpdate.ChannelId">
            <summary>
            The id of the channel the user is currently in
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCurrentUserVoiceStateUpdate.Suppress">
            <summary>
            Toggles the user's suppress state
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCurrentUserVoiceStateUpdate.RequestToSpeakTimestamp">
            <summary>
            Sets the user's request to speak
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildCurrentUserVoiceStateUpdate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object-guild-features">Guild Features</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.Unknown">
            <summary>
            Discord Extension doesn't currently support a guild features
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.AnimatedBanner">
            <summary>
            Guild has access to set an animated guild banner image    
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.AnimatedIcon">
            <summary>
            Guild has access to set an animated guild icon
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.ApplicationCommandPermissionsV2">
            <summary>
            Guild is using the old permissions configuration behavior
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.AutoModeration">
            <summary>
            Guild has set up auto moderation rules
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.Banner">
            <summary>
            Guild has access to set a guild banner image
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.Community">
            <summary>
            Guild can enable welcome screen and discovery, and receives community updates
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.CreatorMonetizableProvisional">
            <summary>
            Guild has enabled monetization
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.CreatorStorePage">
            <summary>
            Guild has enabled the role subscription promo page
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.DeveloperSupportServer">
            <summary>
            Guild has been set as a support server on the App Directory
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.Discoverable">
            <summary>
            Guild is lurkable and able to be discovered in the directory
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.Featurable">
            <summary>
            Guild is able to be featured in the directory
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.InvitesDisabled">
            <summary>
            Guild has paused invites, preventing new users from joining
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.InviteSplash">
            <summary>
            Guild has access to set an invite splash background
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.MemberVerificationGateEnabled">
            <summary>
            Guild has enabled Membership Screening
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.MonetizationEnabled">
            <summary>
            Guild has enabled monetization
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.MoreStickers">
            <summary>
            Guild has increased custom sticker slots
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.News">
            <summary>
            Guild has access to create news channels
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.Partnered">
            <summary>
            Guild is partnered
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.PreviewEnabled">
            <summary>
            Guild can be previewed before joining via Membership Screening or the directory
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.RaidAlertsDisabled">
            <summary>
            Guild has disabled alerts for join raids in the configured safety alerts channel
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.PrivateThreads">
            <summary>
            Guild has access to create private threads
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.RoleIcons">
            <summary>
            Guild can be previewed before joining via Membership Screening or the directory
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.RoleSubscriptionsAvailableForPurchase">
            <summary>
            Guild has role subscriptions that can be purchased
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.RoleSubscriptionsEnabled">
            <summary>
            Guild has enabled role subscriptions
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.TicketedEventsEnabled">
            <summary>
            Guild has enabled ticketed events
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.VanityUrl">
            <summary>
            Guild has access to set a vanity URL
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.Verified">
            <summary>
            Guild is verified
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.VipRegions">
            <summary>
            Guild has access to set 384kbps bitrate in voice (previously VIP voice servers)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.WelcomeScreenEnabled">
            <summary>
            Guild has enabled the welcome screen
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildListMembers">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/guild#list-guild-members-query-string-params">List Guild Members</a> Stucture
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildListMembers.Limit">
            <summary>
            Max number of members to return (1-1000)
            Default is 1
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildListMembers.After">
            <summary>
            The highest user id in the previous page
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildListMembers.ToQueryString">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildListMembers.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildMember">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-member-object-guild-member-structure">Guild Member Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Id">
            <summary>
            Id for guild member
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.User">
            <summary>
            The user this guild member represents
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Nickname">
            <summary>
            This users guild nickname
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Avatar">
            <summary>
            The member's guild avatar hash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Roles">
            <summary>
            List of member roles
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.JoinedAt">
            <summary>
            When the user joined the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.PremiumSince">
            <summary>
            When the user started boosting the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Permissions">
            <summary>
            Total permissions of the member in the channel, including overrides, returned when in the interaction object
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Deaf">
            <summary>
            Whether the user is deafened in voice channels
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Mute">
            <summary>
            Whether the user is muted in voice channels
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Flags">
            <summary>
            Flags for the GuildMember
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Pending">
            <summary>
            Whether the user has not yet passed the guild's Membership Screening requirements
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.CommunicationDisabledUntil">
            <summary>
            When the user's timeout will expire and the user will be able to communicate in the guild again, null or a time in the past if the user is not timed out
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.NickNameLastUpdated">
            <summary>
            When the Nickname was last updated UTC. Null if we haven't seen a nickname update yet
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.HasLeftGuild">
            <summary>
            Returns if the <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildMember"/> has left the <see cref="T:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild"/> it belongs to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.DisplayName">
            <summary>
            Returns the display name show for the user in a guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.IsBot">
            <summary>
            Returns if the GuildMember is a bot
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildMember.HasRole(Oxide.Ext.Discord.Entities.Permissions.DiscordRole)">
            <summary>
            Returns if member has the given role
            </summary>
            <param name="role">Role to check</param>
            <returns>Return true if has role; False otherwise;</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if role is null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildMember.HasRole(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns if member has the given role
            </summary>
            <param name="roleId">Role ID to check</param>
            <returns>Return true if has role; False otherwise;</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildMemberAdd">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#add-guild-member-json-params">Guild Member Add</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberAdd.AccessToken">
            <summary>
            An oauth2 access token granted with the guilds.join to the bot's application for the user you want to add to the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberAdd.Nick">
            <summary>
            Value to set users nickname to
            Requires permission MANAGE_NICKNAMES
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberAdd.Roles">
            <summary>
            Role ids the member is assigned
            Requires permission MANAGE_ROLES
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberAdd.Mute">
            <summary>
            Whether the user is muted in voice channels
            Requires permission MUTE_MEMBERS
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberAdd.Deaf">
            <summary>
            Whether the user is deafened in voice channels
            Requires permission DEAFEN_MEMBERS
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildMemberFlags">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-member-object-guild-member-flags">Guild Member Flags</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildMemberFlags.None">
            <summary>
            No Flags
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildMemberFlags.DidRejoin">
            <summary>
            Member has left and rejoined the guild
            Editable: False
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildMemberFlags.CompletedOnboarding">
            <summary>
            Member has completed onboarding
            Editable: False
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildMemberFlags.BypassesVerification">
            <summary>
            Member is exempt from guild verification requirements
            Editable: True
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildMemberFlags.StartedOnboarding">
            <summary>
            Member has started onboarding
            Editable: False
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#modify-guild-member-json-params">Guild Member Update Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate.Nick">
            <summary>
            The nickname to give the user
            Requires MANAGE_NICKNAMES Permission
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate.Roles">
            <summary>
            New list of guild members roles
            Will replaces all roles with the ones in this list
            Requires MANAGE_ROLES Permission
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate.Deaf">
            <summary>
            Deafen the guild member
            Requires DEAFEN_MEMBERS Permission
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate.Mute">
            <summary>
            Mute the guild member
            Requires MUTE_MEMBERS Permission
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate.ChannelId">
            <summary>
            The channel to move the user to
            Requires MOVE_MEMBERS Permission
            Setting to null will remove that member from a voice channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate.CommunicationDisabledUntil">
            <summary>
            When the user's timeout will expire and the user will be able to communicate in the guild again (up to 28 days in the future), set to null to remove timeout
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildMfaLevel">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object-mfa-level">MFA Level</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildMfaLevel.None">
            <summary>
            Guild does not require MFA
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildMfaLevel.Elevated">
            <summary>
            Guild requires elevated MFA
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildNsfwLevel">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-nsfw-level">Guild NSFW Level</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildNsfwLevel.Default">
            <summary>
            Default NSFW Level
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildNsfwLevel.Explicit">
            <summary>
            Guild is explicitly NSFW
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildNsfwLevel.Safe">
            <summary>
            Guild is safe from NSFW
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildNsfwLevel.AgeRestricted">
            <summary>
            Guild is age restricted
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildPremiumTier">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object-verification-level">Verification Level</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildPremiumTier.None">
            <summary>
            Guild does not have any premium tier
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildPremiumTier.Tier1">
            <summary>
            Guild is premium tier 1
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildPremiumTier.Tier2">
            <summary>
            Guild is premium tier 2
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildPremiumTier.Tier3">
            <summary>
            Guild is premium tier 3
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildPreview">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-preview-object">Guild Preview Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.Id">
            <summary>
            Guild id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.Name">
            <summary>
            Name of the guild (2-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.Icon">
            <summary>
            Base64 128x128 image for the guild icon
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.Splash">
            <summary>
            Splash hash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.DiscoverySplash">
            <summary>
            Discovery splash hash
            Only present for guilds with the "DISCOVERABLE" feature
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.Emojis">
            <summary>
            Custom guild emojis
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.Features">
            <summary>
            Enabled guild features
            See <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.ApproximateMemberCount">
            <summary>
            Approximate number of members in this guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.ApproximatePresenceCount">
            <summary>
            Approximate number of non-offline members in this guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.Description">
            <summary>
            The description of a guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.Stickers">
            <summary>
            Custom guild stickers
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildPruneBegin">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#begin-guild-prune">Guild Prune Begin</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPruneBegin.ComputePruneCount">
            <summary>
            Whether 'pruned' is returned, discouraged for large guilds
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPruneBegin.Reason">
            <summary>
            Reason for the prune (Deprecated)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildPruneBegin.ToQueryString">
            <summary>
            Returns Guild Prune Begin query string for the API Endpoint
            </summary>
            <returns>Guild Prune Begin Query String</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildPruneGet">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#get-guild-prune-count">Guild Prune Get</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPruneGet.Days">
            <summary>
            Number of days to count prune for (1 - 30)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPruneGet.IncludeRoles">
            <summary>
            List of roles to include
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildPruneGet.ToQueryString">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildPruneGet.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildPruneResult">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#get-guild-prune-count">Guild Prune Count Response</a>
            Represents <a href="https://discord.com/developers/docs/resources/guild#begin-guild-prune">Guild Prune Begin Response</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPruneResult.Pruned">
            <summary>
            Number of members pruned
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildRolePosition">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#modify-guild-role-positions">Guild Role Position</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildRolePosition.Id">
            <summary>
            ID of the channel or role
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildRolePosition.Position">
            <summary>
            New position for the role / channel
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildSearchMembers">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#search-guild-members-query-string-params">Search Guild Members</a> Structure
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildSearchMembers.Query">
            <summary>
            Query string to match username(s) and nickname(s) against.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildSearchMembers.Limit">
            <summary>
            Max number of members to return (1-1000)
            Default is 1
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildSearchMembers.ToQueryString">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildSearchMembers.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#modify-guild">Update Guild Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.Name">
            <summary>
            Name of the guild (2-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.Region">
            <summary>
            Voice region id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.VerificationLevel">
            <summary>
            Verification level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.DefaultMessageNotifications">
            <summary>
            Default message notification level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.ExplicitContentFilter">
            <summary>
            Explicit content filter level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.AfkChannelId">
            <summary>
            ID of afk channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.AfkTimeout">
            <summary>
            Afk timeout in seconds
            Can be set to: null, 60, 300, 900, 1800, 3600
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.Icon">
            <summary>
            Base64 128x128 image for the guild icon
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.OwnerId">
            <summary>
            User id to transfer guild ownership to (must be owner)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.Splash">
            <summary>
            Image for the guild splash (when the server has the INVITE_SPLASH feature)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.DiscoverySplash">
            <summary>
            Image for the guild discovery splash (when the server has the DISCOVERABLE feature)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.Banner">
            <summary>
            Image for the guild banner (when the server has the BANNER feature; can be animated gif when the server has the ANIMATED_BANNER feature)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.SystemChannelId">
            <summary>
            The id of the channel where guild notices such as welcome messages and boost events are posted
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.SystemChannelFlags">
            <summary>
            System channel flags
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.RulesChannelId">
            <summary>
            The id of the channel where Community guilds display rules and/or guidelines
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.PublicUpdatesChannelId">
            <summary>
            The id of the channel where admins and moderators of Community guilds receive notices from Discord
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.PreferredLocale">
            <summary>
            The preferred locale of a Community guild used in server discovery and notices from Discord; defaults to "en-US"
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.Features">
            <summary>
            Enabled guild features
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.Description">
            <summary>
            The description for the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.PremiumProgressBarEnabled">
            <summary>
            Whether the guild's boost progress bar should be enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.SafetyAlertsChannelId">
            <summary>
            The id of the channel where admins and moderators of Community guilds receive safety alerts from Discord
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildUpdate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildUpdateMfaLevel">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#modify-guild-mfa-level-json-params">Guild MFA Level Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUpdateMfaLevel.Level">
            <summary>
            <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildMfaLevel"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildUserVoiceStateUpdate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/guild#modify-user-voice-state-json-params">Modify User Voice State</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUserVoiceStateUpdate.ChannelId">
            <summary>
            The id of the channel the user is currently in
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildUserVoiceStateUpdate.Suppress">
            <summary>
            Toggles the user's suppress state
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildUserVoiceStateUpdate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildVerificationLevel">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object-verification-level">Verification Level</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildVerificationLevel.None">
            <summary>
            Unrestricted
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildVerificationLevel.Low">
            <summary>
            Must have verified email on account
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildVerificationLevel.Medium">
            <summary>
            Must be registered on Discord for longer than 5 minutes
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildVerificationLevel.High">
            <summary>
            Must be a member of the server for longer than 10 minutes
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildVerificationLevel.VeryHigh">
            <summary>
            Must have a verified phone number
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreen">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#welcome-screen-object">Welcome Screen Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreen.Description">
            <summary>
            The server description shown in the welcome screen
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreen.WelcomeChannels">
            <summary>
            The channels shown in the welcome screen
            Up to 5
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreenChannel">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#welcome-screen-object-welcome-screen-channel-structure">Welcome Screen Channel Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreenChannel.ChannelId">
            <summary>
            Channel ID for the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreenChannel.Description">
            <summary>
            The description shown for the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreenChannel.EmojiId">
            <summary>
            The emoji id, if the emoji is custom
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreenChannel.EmojiName">
            <summary>
            The emoji name if custom, the unicode character if standard, or null if no emoji is set
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildWidget">
            <summary>
            Represents <a href=""></a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidget.Id">
            <summary>
            Guild id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidget.Name">
            <summary>
            Guild name (2-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidget.InstantInvite">
            <summary>
            Instant invite for the guilds specified widget invite channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidget.Channels">
            <summary>
            Voice and stage channels which are accessible by @everyone
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidget.Members">
            <summary>
            Special widget user objects that includes users presence (Limit 100)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidget.PresenceCount">
            <summary>
            Number of online members in this guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildWidgetSettings">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-widget-object-guild-widget-structure">Guild Widget Settings Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidgetSettings.Enabled">
            <summary>
            Whether the widget is enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidgetSettings.ChannelId">
            <summary>
            The widget channel id
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.Onboarding.GuildOnboarding">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-onboarding-object-guild-onboarding-structure">Guild Onboarding Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.GuildOnboarding.GuildId">
            <summary>
            ID of the guild this onboarding is part of
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.GuildOnboarding.Prompts">
            <summary>
            Prompts shown during onboarding and in customize community
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.GuildOnboarding.DefaultChannelIds">
            <summary>
            Channel IDs that members get opted into automatically
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.GuildOnboarding.Enabled">
            <summary>
            Whether onboarding is enabled in the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPrompt">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-onboarding-object-onboarding-prompt-structure">Onboarding Prompt Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPrompt.Id">
            <summary>
            ID of the prompt
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPrompt.Type">
            <summary>
            Type of prompt
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPrompt.Options">
            <summary>
            Options available within the prompt
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPrompt.Title">
            <summary>
            Title of the prompt
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPrompt.SingleSelect">
            <summary>
            Indicates whether users are limited to selecting one option for the prompt
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPrompt.Required">
            <summary>
            Indicates whether the prompt is required before a user completes the onboarding flow
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPrompt.InOnboarding">
            <summary>
            Indicates whether the prompt is present in the onboarding flow.
            If false, the prompt will only appear in the Channels and Roles tab
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPromptOption">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-onboarding-object-prompt-option-structure">Prompt Option Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPromptOption.Id">
            <summary>
            ID of the prompt option
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPromptOption.ChannelIds">
            <summary>
            IDs for channels a member is added to when the option is selected
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPromptOption.RoleIds">
            <summary>
            IDs for roles assigned to a member when the option is selected
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPromptOption.Emoji">
            <summary>
            Emoji of the option
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPromptOption.Title">
            <summary>
            Title of the option
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPromptOption.Description">
            <summary>
            Description of the option
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPromptType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-onboarding-object-prompt-types">Prompt Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPromptType.MultipleChoice">
            <summary>
            Multiple Choice Prompt Type
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.Onboarding.OnboardingPromptType.Dropdown">
            <summary>
            Dropdown Prompt Type
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild-scheduled-event">Guild Scheduled Event Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.Id">
            <summary>
            The ID of the scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.GuildId">
            <summary>
            The guild ID which the scheduled event belongs to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.ChannelId">
            <summary>
            The channel ID in which the scheduled event will be hosted, or null if <see cref="T:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityType">scheduled entity type</see> is <see cref="F:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityType.External">EXTERNAL</see>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.CreatorId">
            <summary>
            The ID of the user that created the scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.Name">
            <summary>
            The name of the scheduled event (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.Description">
            <summary>
            The description of the scheduled event (1-1000 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.ScheduledStartTime">
            <summary>
            The time the scheduled event will start
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.ScheduledEndTime">
            <summary>
            The time the scheduled event will end, required if <see cref="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.EntityType">EntityType</see> is <see cref="F:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityType.External">EXTERNAL</see>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.PrivacyLevel">
            <summary>
            The privacy level of the scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.Status">
            <summary>
            The status of the scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.EntityType">
            <summary>
            The type of the scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.EntityId">
            <summary>
            The id of an entity associated with a guild scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.EntityMetadata">
            <summary>
            Additional metadata for the guild scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.Creator">
            <summary>
            The user that created the scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.UserCount">
            <summary>
            The number of users subscribed to the scheduled event
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.GetGuildEvents(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventLookup)">
            <summary>
            Returns a list of guild scheduled event objects for the given guild.
            See <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#list-scheduled-events-for-guild">List Scheduled Events for Guild</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild to get events for</param>
            <param name="lookup">Query string parameters</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.Create(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventCreate)">
            <summary>
            Create a guild scheduled event in the guild.
            Returns a <see cref="T:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent">guild scheduled event</see> object on success.
            See <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#create-guild-scheduled-event">Create Guild Scheduled Event</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild to create event in</param>
            <param name="create">Guild Scheduled Event to create</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.Get(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventLookup)">
            <summary>
            Get a guild scheduled event.
            Returns a guild scheduled event object on success.
            See <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#get-guild-scheduled-event">Get Guild Scheduled Event</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild to get events for</param>
            <param name="eventId">Id of the scheduled event</param>
            <param name="lookup">Query string parameters</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.Edit(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUpdate)">
            <summary>
            Modify a guild scheduled event.
            Returns the modified <see cref="T:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent">guild scheduled event</see> object on success.
            See <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#modify-guild-scheduled-event">Modify Guild Scheduled Event</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild to modify event in</param>
            <param name="eventId">Id of the event to update</param>
            <param name="update">Guild Scheduled Event to update</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.Delete(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Delete a guild scheduled event
            See <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#delete-guild-scheduled-event">Delete Guild Scheduled Event</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild to modify event in</param>
            <param name="eventId">Id of the event to delete</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.GetUsers(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUsersLookup)">
            <summary>
            Get a list of guild scheduled event users subscribed to a guild scheduled event.
            Returns a list of guild scheduled event user objects on success.
            Guild member data, if it exists, is included if the WithMember query parameter is set.
            See <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#get-guild-scheduled-event-users">Get Guild Scheduled Event Users</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild to get event users for</param>
            <param name="eventId">Id of the event to get users for</param>
            <param name="lookup">Query string parameters</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventCreate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#create-guild-scheduled-event">Guild Scheduled Event Create</a> within discord
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventCreate.ChannelId">
            <summary>
            The channel ID in which the scheduled event will be hosted, or null if <see cref="T:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityType">scheduled entity type</see> is <see cref="F:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityType.External">External</see>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventCreate.EntityMetadata">
            <summary>
            Additional metadata for the guild scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventCreate.Name">
            <summary>
            The name of the scheduled event (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventCreate.PrivacyLevel">
            <summary>
            The privacy level of the scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventCreate.ScheduledStartTime">
            <summary>
            The time the scheduled event will start
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventCreate.ScheduledEndTime">
            <summary>
            The time the scheduled event will end, required if <see cref="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.EntityType">EntityType</see> is <see cref="F:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityType.External">EXTERNAL</see>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventCreate.Description">
            <summary>
            The description of the scheduled event (1-1000 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventCreate.EntityType">
            <summary>
            The type of the scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventCreate.Image">
            <summary>
            The cover image of the scheduled event
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventCreate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityMetadata">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object-guild-scheduled-event-entity-metadata">Guild Scheduled Event Entity Metadata</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityMetadata.Location">
            <summary>
            Location of the event (1-100 characters)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityMetadata.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object-guild-scheduled-event-entity-types">Scheduled Entity Type</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityType.StageInstance">
            <summary>
            Event will be held in a stage instance
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityType.Voice">
            <summary>
            Event will be held in a voice channel
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityType.External">
            <summary>
            Event will be held externally outside of discord.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventLookup">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#list-scheduled-events-for-guild-query-string-params">Scheduled Event Lookup Structure</a> within Discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventLookup.WithUserCount">
            <summary>
            Include number of users subscribed to each event
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventLookup.ToQueryString">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventPrivacyLevel">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object-guild-scheduled-event-privacy-level">Guild Scheduled Event Privacy Level</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventPrivacyLevel.None">
            <summary>
            No Privacy Level
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventPrivacyLevel.GuildOnly">
            <summary>
            The scheduled event is only accessible to guild members
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventStatus">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object-guild-scheduled-event-status">Guild Scheduled Event Status</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventStatus.Scheduled">
            <summary>
            Scheduled Event is scheduled and has not happened yet.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventStatus.Active">
            <summary>
            Scheduled event is currently occuring
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventStatus.Completed">
            <summary>
            Scheduled event has completed
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventStatus.Canceled">
            <summary>
            Scheduled event was canceled.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#modify-guild-scheduled-event">Guild Scheduled Event Update</a> within discord
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUpdate.ChannelId">
            <summary>
            The channel ID in which the scheduled event will be hosted, or null if <see cref="T:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityType">scheduled entity type</see> is <see cref="F:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityType.External">External</see>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUpdate.EntityMetadata">
            <summary>
            Additional metadata for the guild scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUpdate.Name">
            <summary>
            The name of the scheduled event (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUpdate.PrivacyLevel">
            <summary>
            The privacy level of the scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUpdate.ScheduledStartTime">
            <summary>
            The time the scheduled event will start
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUpdate.ScheduledEndTime">
            <summary>
            The time the scheduled event will end, required if <see cref="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.GuildScheduledEvent.EntityType">EntityType</see> is <see cref="F:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventEntityType.External">EXTERNAL</see>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUpdate.Description">
            <summary>
            The description of the scheduled event (1-1000 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUpdate.EntityType">
            <summary>
            The type of the scheduled event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUpdate.Status">
            <summary>
            The status of the scheduled event
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUpdate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUser">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-user-object-guild-scheduled-event-user-structure">Guild Scheduled Event User Object</a> within discord
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUser.GuildScheduledEventId">
            <summary>
            The scheduled event id which the user subscribed to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUser.User">
            <summary>
            User which subscribed to an event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUser.Member">
            <summary>
            Guild member data for this user for the guild which this event belongs to, if any
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUsersLookup">
             <summary>
             Represents a <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#list-scheduled-events-for-guild-query-string-params">Scheduled Event Lookup Structure</a> within Discord.
            
             Provide a user id to before and after for pagination.
             Users will always be returned in ascending order by user_id.
             If both before and after are provided, only before is respected.
             Fetching users in-between before and after is not supported.
             </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUsersLookup.Limit">
            <summary>
            Number of users to return (up to maximum 100)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUsersLookup.WithMember">
            <summary>
            Include guild member data if it exists
            Default false
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUsersLookup.Before">
            <summary>
            Consider only users before given user id
            Default null
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUsersLookup.After">
            <summary>
            Consider only users after given user id
            Default null
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUsersLookup.ToQueryString">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.ScheduledEvents.ScheduledEventUsersLookup.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.SystemChannelFlags">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object-system-channel-flags">System Channel Flags</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.SystemChannelFlags.SuppressJoinNotifications">
            <summary>
            Suppress member join notifications
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.SystemChannelFlags.SuppressPremiumSubscriptions">
            <summary>
            Suppress server boost notifications
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.SystemChannelFlags.SuppressGuildReminderNotifications">
            <summary>
            Suppress server setup tips
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.SystemChannelFlags.SuppressJoinNotificationReplies">
            <summary>
            Hide member join sticker reply buttons
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.SystemChannelFlags.SuppressRoleSubscriptionPurchaseNotifications">
            <summary>
            Suppress role subscription purchase and renewal notifications
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.SystemChannelFlags.SuppressRoleSubscriptionPurchaseNotificationReplies">
            <summary>
            Hide role subscription sticker reply buttons
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.WelcomeScreenUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#modify-guild-welcome-screen"></a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.WelcomeScreenUpdate.Enabled">
            <summary>
            Whether the welcome screen is enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.WelcomeScreenUpdate.WelcomeChannels">
            <summary>
            Channels linked in the welcome screen and their display options
            Up to 5
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.WelcomeScreenUpdate.Description">
            <summary>
            The server description shown in the welcome screen
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Images.DiscordImageData">
            <summary>
            Represents <a href="https://discord.com/developers/docs/reference#image-data">Discord Image Data</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Images.DiscordImageData.Type">
            <summary>
            The type of image
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Images.DiscordImageData.Image">
            <summary>
            The image data
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Images.DiscordImageData.#ctor(System.Byte[])">
            <summary>
            Constructor from a byte[] of the image
            </summary>
            <param name="image">Image bytes</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Images.DiscordImageData.#ctor(System.IO.Stream)">
            <summary>
            Creates DiscordImageData from a stream
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Images.DiscordImageData.#ctor(System.String)">
            <summary>
            Constructor from the discord image data format
            </summary>
            <param name="image">string base64 image</param>
            <exception cref="T:Oxide.Ext.Discord.Exceptions.Entities.Images.InvalidImageDataException">Thrown if the image is not a valid base64 image string</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Images.DiscordImageData.GetBase64Image">
            <summary>
            Returns the Base64 Image string for the image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Images.DiscordImageData.GetImageSize(Oxide.Ext.Discord.Entities.Images.DiscordImageSize)">
            <summary>
            Returns the image size in the given format
            </summary>
            <param name="size"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Images.DiscordImageData.IsValid">
            <summary>
            Returns if this struct has a valid image
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Images.DiscordImageData.GetType(System.Byte[])">
            <summary>
            Returns the type of image for the given bytes[]
            </summary>
            <param name="image">byte[] of the image</param>
            <returns></returns>
            <exception cref="T:Oxide.Ext.Discord.Exceptions.Entities.Images.InvalidImageDataException">Thrown if the byte[] image is not a valid supported type</exception>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Images.DiscordImageFormat">
            <summary>
            Represents <a href="https://discord.com/developers/docs/reference#image-formatting-image-formats">Image Formats</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Images.DiscordImageFormat.Auto">
            <summary>
            Automatically pick the image format
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Images.DiscordImageFormat.Jpg">
            <summary>
            Return image as a JPG
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Images.DiscordImageFormat.Png">
            <summary>
            Return image as PNG
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Images.DiscordImageFormat.WebP">
            <summary>
            Return image as WebP
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Images.DiscordImageFormat.Gif">
            <summary>
            Return image as GIF
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Images.DiscordImageFormat.Lottie">
            <summary>
            Lottie Image
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Images.DiscordImageSize">
            <summary>
            Represents an image size
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Images.DiscordImageSize.Bytes">
            <summary>
            Image Size in bytes
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Images.DiscordImageSize.KiloBytes">
            <summary>
            Image size in kilobytes
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Images.DiscordImageSize.MegaBytes">
            <summary>
            Image Size in megabytes
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Images.DiscordImageSize.GigaBytes">
            <summary>
            Image Size in gigabytes
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Integrations.Integration">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#integration-object">Integration Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Id">
            <summary>
            Integration ID
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Name">
            <summary>
            Integration Name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Type">
            <summary>
            Integration type
            See <see cref="T:Oxide.Ext.Discord.Entities.Integrations.IntegrationType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Enabled">
            <summary>
            Is this integration enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Syncing">
            <summary>
            Is this integration syncing
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.RoleId">
            <summary>
            ID that this integration uses for "subscribers"
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.User">
            <summary>
            User for this integration
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Account">
            <summary>
            Integration account information
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.SyncedAt">
            <summary>
            When this integration was last synced
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.SubscriberCount">
            <summary>
            How many subscribers this integration has
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Revoked">
            <summary>
            Has this integration been revoked
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Application">
            <summary>
            The bot/OAuth2 application for discord integrations
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Integrations.IntegrationAccount">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#integration-account-object">Integration Account Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationAccount.Id">
            <summary>
            ID of the account
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationAccount.Name">
            <summary>
            Name of the account
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Integrations.IntegrationApplication">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#integration-application-object">Integration Application Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationApplication.Id">
            <summary>
            The ID of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationApplication.Name">
            <summary>
            The name of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationApplication.Icon">
            <summary>
            The icon hash of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationApplication.Description">
            <summary>
            The description of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationApplication.Bot">
            <summary>
            The bot associated with this application
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Integrations.IntegrationExpireBehaviors">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#integration-object-integration-expire-behaviors">Integration Expire Behaviors</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Integrations.IntegrationExpireBehaviors.RemoveRole">
            <summary>
            Remove the role when integration expires
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Integrations.IntegrationExpireBehaviors.Kick">
            <summary>
            Kick when integration expires
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Integrations.IntegrationType">
            <summary>
            Represents Integrations types
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Integrations.IntegrationType.Twitch">
            <summary>
            Integration is for twitch
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Integrations.IntegrationType.Youtube">
            <summary>
            Integration is for youtube
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Integrations.IntegrationType.Discord">
            <summary>
            integration is for discord
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Integrations.IntegrationType.GuildSubscription">
            <summary>
            integration is for guild subscription
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Integrations.IntegrationUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#modify-guild-integration-json-params">Integration Update Structure</a> 
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationUpdate.EnableEmoticons">
            <summary>
            Whether emoticons should be synced for this integration (twitch only currently)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationUpdate.ExpireBehaviour">
            <summary>
            The behavior when an integration subscription lapses
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationUpdate.ExpireGracePeriod">
            <summary>
            Period (in days) where the integration will ignore lapsed subscriptions
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-types">Application Command Type</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandType.ChatInput">
            <summary>
            Slash commands; a text-based command that shows up when a user types /
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandType.User">
            <summary>
            A UI-based command that shows up when you right click or tap on a user
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandType.Message">
            <summary>
            A UI-based command that shows up when you right click or tap on a messages
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandBulkOverwrite">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/application-commands#bulk-overwrite-guild-application-commands-bulk-application-command-json-params">Bulk Overwrite Guild Application Commands</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandBulkOverwrite.Id">
            <summary>
            ID of command, if known
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandBulkOverwrite.Name">
            <summary>
            1-32 lowercase character name matching ^[\w-]{1,32}$
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandBulkOverwrite.NameLocalizations">
            <summary>
            Localization dictionary for the name field. Values follow the same restrictions as name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandBulkOverwrite.Description">
            <summary>
            Description of the command (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandBulkOverwrite.DescriptionLocalizations">
            <summary>
            Localization dictionary for the description field. Values follow the same restrictions as description
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandBulkOverwrite.Options">
            <summary>
            The parameters for the command
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandBulkOverwrite.DefaultMemberPermissions">
            <summary>
            Set of permissions represented as a bit set
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandBulkOverwrite.DmPermission">
            <summary>
            Indicates whether the command is available in DMs with the app, only for globally-scoped commands. By default, commands are visible.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandBulkOverwrite.DefaultPermissions">
            <summary>
            Whether the command is enabled by default when the app is added to a guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandBulkOverwrite.Nsfw">
            <summary>
            Indicates whether the command is age-restricted
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/application-commands#create-global-application-command-json-params">Application Command Create</a>
            Represents <a href="https://discord.com/developers/docs/interactions/application-commands#create-guild-application-command-json-params">Application Command Create</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate.Name">
            <summary>
            1-32 lowercase character name matching ^[-_\p{L}\p{N}\p{sc=Deva}\p{sc=Thai}]{1,32}$
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate.NameLocalizations">
            <summary>
            Localization dictionary for the name field. Values follow the same restrictions as name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate.Description">
            <summary>
            Description of the command (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate.DescriptionLocalizations">
            <summary>
            Localization dictionary for the description field. Values follow the same restrictions as description
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate.Options">
            <summary>
            The parameters for the command
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate.DefaultMemberPermissions">
            <summary>
            Set of permissions represented as a bit set
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate.DmPermission">
            <summary>
            Indicates whether the command is available in DMs with the app, only for globally-scoped commands. By default, commands are visible.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate.Nsfw">
            <summary>
            Indicates whether the command is age-restricted
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate.Type">
            <summary>
            The <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandType"/> of the command
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate.#ctor(System.String,System.String,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandType,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandFollowupCreate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#create-followup-message">Command Followup</a> within discord.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandFollowupUpdate">
            <summary>
            Represents a <a href="">Command Followup</a> within discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandFollowupUpdate.Flags">
            <summary>
            Callback data flags
            Set to 64 to make your response ephemeral
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-option-structure">ApplicationCommandOption</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.Type">
            <summary>
            Type of option
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.Name">
            <summary>
            Name of the command option (1-32 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.NameLocalizations">
            <summary>
            Localization dictionary for the name field. Values follow the same restrictions as name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.Description">
            <summary>
            Description the command option (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.DescriptionLocalizations">
            <summary>
            Localization dictionary for the description field. Values follow the same restrictions as description
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.Required">
            <summary>
            If the parameter is required or optional
            Defaults to false
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.Choices">
            <summary>
            Choices for STRING, INTEGER, and NUMBER types for the user to pick from, max 25
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.Options">
            <summary>
            If the option is a subcommand or subcommand group type, these nested options will be the parameters
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.ChannelTypes">
            <summary>
            If the option is a channel type, the channels shown will be restricted to these types
            See <see cref="T:Oxide.Ext.Discord.Entities.Channels.ChannelType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.MinValue">
            <summary>
            If the option is an INTEGER or NUMBER type, the minimum value permitted
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.MaxValue">
            <summary>
            If the option is an INTEGER or NUMBER type, the maximum value permitted
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.MinLength">
            <summary>
            For option type STRING, the minimum allowed length (minimum of 0)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.MaxLength">
            <summary>
            For option type STRING, the maximum allowed length (minimum of 1)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.Autocomplete">
            <summary>
            If autocomplete interactions are enabled for this `STRING`, `INTEGER`, or `NUMBER` type option
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.#ctor(System.String,System.String,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-option-choice-structure">ApplicationCommandOptionChoice</a>
            If you specify choices for an option, they are the only valid values for a user to pick
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice.Name">
            <summary>
            Choice name (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice.NameLocalizations">
            <summary>
            Localization dictionary for the name field. Values follow the same restrictions as name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice.Value">
            <summary>
            Type can be string, integer, double or boolean
            Value of the choice, up to 100 characters if string
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice.#ctor(System.String,System.Object,Oxide.Plugins.Hash{System.String,System.String})">
            <summary>
            Creates a Command Option Choice
            </summary>
            <param name="name">Name of the choice</param>
            <param name="value">Value of the choice</param>
            <param name="nameLocalizations">Name localizations for the choice</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-option-type">ApplicationCommandOptionType</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType.SubCommand">
            <summary>
            The command option is a sub command
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType.SubCommandGroup">
            <summary>
            The command option is a sub command group
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType.String">
            <summary>
            The sub command option is a string
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType.Integer">
            <summary>
            The sub command options is an integer
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType.Boolean">
            <summary>
            The sub command option is a boolean
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType.User">
            <summary>
            The sub command option is a user
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType.Channel">
            <summary>
            The sub command option is a channel
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType.Role">
            <summary>
            The sub command option is a Role
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType.Mentionable">
            <summary>
            The sub command option is a Mentionable
            Includes Users and Roles
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType.Number">
            <summary>
            Any double between -2^53 and 2^53
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionType.Attachment">
            <summary>
            Attachment object
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandPermissions">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/application-commands#application-command-permissions-object-application-command-permissions-structure">ApplicationCommandPermissions</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandPermissions.Id">
            <summary>
            The ID of the role or user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandPermissions.Type">
            <summary>
            The type of permissions
            <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandPermissionType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandPermissions.Permission">
            <summary>
            True to allow, False to disallow
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandPermissions.AllowAllGuildMembers(Oxide.Ext.Discord.Entities.Guilds.DiscordGuild)">
            <summary>
            Creates a new CommandPermissions that allows all guild members to use the application command
            </summary>
            <param name="guild">Guild to allow the application command in</param>
            <returns><see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandPermissions"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandPermissions.AllowAllGuildChannels(Oxide.Ext.Discord.Entities.Guilds.DiscordGuild)">
            <summary>
            Creates a new CommandPermissions that allows the application command to be used in all guild channels
            </summary>
            <param name="guild">Guild to allow the application command in</param>
            <returns><see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandPermissions"/></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandPermissionType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/application-commands#application-command-permissions-object-application-command-permission-type">ApplicationCommandPermissionType</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandPermissionType.Role">
            <summary>
            This permissions uses Role ID
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandPermissionType.User">
            <summary>
            This permission uses User ID
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandPermissionType.Channel">
            <summary>
            This permission uses Channel ID
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/application-commands#edit-global-application-command-json-params">Application Command Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandUpdate.Name">
            <summary>
            1-32 lowercase character name matching ^[\w-]{1,32}$
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandUpdate.NameLocalizations">
            <summary>
            Localization dictionary for the name field. Values follow the same restrictions as name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandUpdate.Description">
            <summary>
            Description of the command (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandUpdate.DescriptionLocalizations">
            <summary>
            Localization dictionary for the description field. Values follow the same restrictions as description
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandUpdate.Options">
            <summary>
            The parameters for the command
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandUpdate.DefaultMemberPermissions">
            <summary>
            Set of permissions represented as a bit set
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandUpdate.DmPermission">
            <summary>
            Indicates whether the command is available in DMs with the app, only for globally-scoped commands. By default, commands are visible.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandUpdate.DefaultPermissions">
            <summary>
            Whether the command is enabled by default when the app is added to a guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandUpdate.Nsfw">
            <summary>
            Indicates whether the command is age-restricted
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandUpdatePermissions">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/application-commands#edit-application-command-permissions-json-params">Edit Application Command Permissions</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandUpdatePermissions.Permissions">
            <summary>
            Permissions for the command in the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-structure">ApplicationCommand</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.Id">
            <summary>
            Unique id of the command
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.Type">
            <summary>
            The type of command, defaults to 1
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.ApplicationId">
            <summary>
            ID of the parent application
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.GuildId">
            <summary>
            Guild ID of the command, if not global
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.Name">
            <summary>
            1-32 lowercase character name matching ^[\w-]{1,32}$
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.NameLocalizations">
            <summary>
            Localization dictionary for the name field. Values follow the same restrictions as name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.Description">
            <summary>
            Description of the command (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.DescriptionLocalizations">
            <summary>
            Localization dictionary for the description field. Values follow the same restrictions as description
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.Options">
            <summary>
            The parameters for the command
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.DefaultMemberPermissions">
            <summary>
            Set of permissions represented as a bit set
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.DmPermission">
            <summary>
            Indicates whether the command is available in DMs with the app, only for globally-scoped commands. By default, commands are visible.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.Nsfw">
            <summary>
            Indicates whether the command is age-restricted
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.Version">
            <summary>
            Auto incrementing version identifier updated during substantial record changes
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.Mention">
            <summary>
            Mention the <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.MentionCustom(System.String)">
            <summary>
            Mention the <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand"/> using a custom command string
            </summary>
            <param name="command">Custom commands string</param>
            <returns>Mentioned Custom Command string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.Edit(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandUpdate)">
            <summary>
            Edit a command.
            Updates will be available in all guilds after 1 hour.
            See <a href="https://discord.com/developers/docs/interactions/application-commands#edit-global-application-command">Edit Global Application Command</a>
            See <a href="https://discord.com/developers/docs/interactions/application-commands#edit-guild-application-command">Edit Guild Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="update">Command Update</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.Delete(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Deletes a command
            See <a href="https://discord.com/developers/docs/interactions/application-commands#delete-global-application-command">Delete Global Application Command</a>
            See <a href="https://discord.com/developers/docs/interactions/application-commands#delete-guild-application-command">Delete Guild Application Command</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.GetPermissions(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Fetches command permissions for a specific command for your application in a guild. Returns a GuildApplicationCommandPermissions object.
            See <a href="https://discord.com/developers/docs/interactions/application-commands#get-application-command-permissions">Get Application Command Permissions</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID of the guild to get permissions for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.EditPermissions(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandUpdatePermissions)">
            <summary>
            Edits command permissions for a specific command for your application in a guild.
            Warning: This endpoint will overwrite existing permissions for the command in that guild
            Warning: Deleting or renaming a command will permanently delete all permissions for that command
            See <a href="https://discord.com/developers/docs/interactions/application-commands#edit-application-command-permissions">Edit Application Command Permissions</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID of the guild to edit permissions for</param>
            <param name="permissions">List of permissions for the command</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.GuildCommandPermissions">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/application-commands#application-command-permissions-object-guild-application-command-permissions-structure">ApplicationCommandPermissions</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.GuildCommandPermissions.Id">
            <summary>
            ID of the command
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.GuildCommandPermissions.ApplicationId">
            <summary>
            ID of the application the command belongs to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.GuildCommandPermissions.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.GuildCommandPermissions.Permissions">
            <summary>
            Permissions for the command in the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object-interaction-structure">Interaction Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.Id">
            <summary>
            Id of the interaction
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.ApplicationId">
            <summary>
            ID of the application this interaction is for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.Type">
            <summary>
            The type of interaction
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.InteractionType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.Data">
            <summary>
            Interaction data payload
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.InteractionData"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.GuildId">
            <summary>
            Guild that the interaction was sent from
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.Channel">
            <summary>
            Channel that the interaction was sent from
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.ChannelId">
            <summary>
            Channel that the interaction was sent from
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.Member">
            <summary>
            Guild member data for the invoking user, including permissions
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.User">
            <summary>
            User object. If in DM then DM user else GuildMember.User
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.Token">
            <summary>
            Continuation token for responding to the interaction
            Interaction tokens are valid for 15 minutes and can be used to send followup messages but you must send an initial response within 3 seconds of receiving the event.
            If the 3 second deadline is exceeded, the token will be invalidated.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.Version">
            <summary>
            Read-only property, always 1
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.Message">
            <summary>
            For components, the message they were attached to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.AppPermissions">
            <summary>
            Bitwise set of permissions the app or bot has within the channel the interaction was sent from
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.Locale">
            <summary>
            The selected language of the invoking user
            <a href="https://discord.com/developers/docs/dispatch/field-values#predefined-field-values-accepted-locales">Discord Locale Values</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.GuildLocale">
            <summary>
            The guild's preferred locale, if invoked in a guild
            <a href="https://discord.com/developers/docs/dispatch/field-values#predefined-field-values-accepted-locales">Discord Locale Values</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.Parsed">
            <summary>
            Returns the interaction parsed args to make it easier to process that interaction.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.Focused">
            <summary>
            Returns the Focused option for Auto Complete
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.CreatedDate">
            <summary>
            The UTC DateTime this interaction was created
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction._hasResponded">
            <summary>
            If CreateInteractionResponse has been successfully called for this interaction
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.GetLangMessage(Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Returns a localized string for this interaction
            </summary>
            <param name="plugin">Plugin the localization is for</param>
            <param name="langKey">Lang Key to return</param>
            <returns>Localized string if it is found; Empty string otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.GetLangMessage(Oxide.Core.Plugins.Plugin,System.String,System.Object[])">
            <summary>
            Returns a localized string for this interaction
            </summary>
            <param name="plugin">Plugin the localization is for</param>
            <param name="langKey">Lang Key to return</param>
            <param name="args">Localization args</param>
            <returns>Localized string if it is found; Empty string otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.GetResponseBuilder">
            <summary>
            Returns a <see cref="T:Oxide.Ext.Discord.Builders.Interactions.InteractionResponseBuilder"/> for this interaction
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.GetFollowupBuilder">
            <summary>
            Returns a <see cref="T:Oxide.Ext.Discord.Builders.Interactions.InteractionFollowupBuilder"/> for this interaction
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.GetAutoCompleteBuilder">
            <summary>
            Returns a <see cref="T:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder"/> for this interaction
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.GetModalBuilder">
            <summary>
            Returns a <see cref="T:Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder"/> for this interaction
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.CreateResponse(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Interactions.Response.BaseInteractionResponse)">
            <summary>
            Create a response to an Interaction from the gateway.
            See <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response">Create Interaction Response</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="response">Response to respond with</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.CreateResponse(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType,Oxide.Ext.Discord.Entities.Interactions.Response.InteractionCallbackData)">
            <summary>
            Create a response to an Interaction from the gateway.
            See <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response">Create Interaction Response</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="type">Type of the interaction response</param>
            <param name="response">Interaction Callback Message Data</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.CreateTemplateResponse(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType,System.String,Oxide.Ext.Discord.Entities.Interactions.Response.InteractionCallbackData,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Creates a interaction message response from a message template
            </summary>
            <param name="client">Client to use</param>
            <param name="type">Response type for the interaction</param>
            <param name="templateName">Name of the template</param>
            <param name="message">Message to send (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
            <exception cref="T:System.ArgumentNullException">Thrown if plugin or templateName is null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.CreateModalResponse(Oxide.Ext.Discord.Clients.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Interactions.Response.InteractionModalMessage,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Creates a interaction modal response from a modal template 
            </summary>
            <param name="client">Client to use</param>
            <param name="templateName"></param>
            <param name="message">Message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.CreateResponse(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType,Oxide.Ext.Discord.Builders.Interactions.InteractionResponseBuilder)">
            <summary>
            Create a response to an Interaction from the gateway.
            See <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response">Create Interaction Response</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="type">Type of the interaction response</param>
            <param name="builder">Builder for this response</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.CreateResponse(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Interactions.Response.InteractionAutoCompleteMessage)">
            <summary>
            Create a Auto Complete response to an Interaction
            See <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response">Create Interaction Response</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Message for this response</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.CreateResponse(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Builders.Interactions.InteractionAutoCompleteBuilder)">
            <summary>
            Create a Auto Complete response to an Interaction
            See <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response">Create Interaction Response</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="builder">Auto Complete Builder for this response</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.CreateResponse(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Interactions.Response.InteractionModalMessage)">
            <summary>
            Create a Modal response to an Interaction
            See <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response">Create Interaction Response</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Message for this response</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.CreateResponse(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Builders.Interactions.InteractionModalBuilder)">
            <summary>
            Create a Modal response to an Interaction
            See <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response">Create Interaction Response</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="builder">Modal Builder for this response</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.DefferResponse(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Creates a response indicating that:
            for application commands there will be an update in the future
            for message component commands that you have acknowledged the command and there may be an update in the future
            See <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response">Create Interaction Response</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.EditOriginalResponse(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Messages.MessageUpdate)">
            <summary>
            Edits the initial Interaction response
            See <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#edit-original-interaction-response">Edit Original Interaction Response</a>
            </summary>
            <param name="client">Client to use</param>
            /// <param name="message">Updated message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.EditTemplateOriginalResponse(Oxide.Ext.Discord.Clients.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Messages.MessageUpdate,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Edit a interaction response with a message template
            </summary>
            <param name="client">Client to use</param>
            <param name="templateName">Template Name</param>
            <param name="message">Message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.DeleteOriginalResponse(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Deletes the initial Interaction response
            See <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#delete-original-interaction-response">Delete Original Interaction Response</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.CreateFollowUpMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandFollowupCreate)">
            <summary>
            Create a followup message for an Interaction
            See <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#create-followup-message">Create Followup Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Message to follow up with</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.CreateFollowUpMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Builders.Interactions.InteractionFollowupBuilder)">
            <summary>
            Create a followup message for an Interaction
            See <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#create-followup-message">Create Followup Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="builder">Builder for the follow up</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.EditFollowUpMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandFollowupUpdate)">
            <summary>
            Edits a followup message for an Interaction
            See <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#edit-followup-message">Edit Followup Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="messageId">Message ID of the follow up message</param>
            <param name="edit">Updated message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.DeleteFollowUpMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Deletes a followup message for an Interaction
            See <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#delete-followup-message">Delete Followup Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="messageId">Message ID to delete</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.InteractionData">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object-interaction-data-structure">ApplicationCommandInteractionData</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionData.Id">
            <summary>
            ID of the invoked command
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionData.Name">
            <summary>
            The name of the invoked command
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionData.Type">
            <summary>
            The type of the invoked command
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionData.Resolved">
            <summary>
            Converted <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/>s, <see cref="T:Oxide.Ext.Discord.Entities.Permissions.DiscordRole"/>s, <see cref="T:Oxide.Ext.Discord.Entities.Channels.DiscordChannel"/>s, <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildMember"/>s, <see cref="T:Oxide.Ext.Discord.Entities.Messages.DiscordMessage"/>s <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageAttachment"/>s
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionData.Options">
            <summary>
            The params + values from the user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionData.GuildId">
            <summary>
            The id of the guild the command is registered to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionData.CustomId">
            <summary>
            For components, the custom_id of the component
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionData.ComponentType">
            <summary>
            For components, the type of the component
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionData.Values">
            <summary>
            For components, the values for the select menu component
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionData.TargetId">
            <summary>
            Id the of user or message targeted by a user or message command
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionData.Components">
            <summary>
            The values submitted by the user (Modal Submit)
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.InteractionDataOption">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-interaction-data-option-structure">Application Command Interaction Data Option</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionDataOption.Name">
            <summary>
            The name of the parameter
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionDataOption.Type">
            <summary>
            Value of ApplicationCommandOptionType
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionDataOption.Value">
            <summary>
            The value of the option resulting from user input
            Value can be string, integer, or double, or boolean type
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.InteractionDataOption.GetString">
            <summary>
            Returns the value as a string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.InteractionDataOption.GetInt">
            <summary>
            Returns the value as an int
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.InteractionDataOption.GetBool">
            <summary>
            Returns the value as a bool
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.InteractionDataOption.GetNumber">
            <summary>
            Returns the value as a double
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.InteractionDataOption.GetSnowflake">
            <summary>
            Returns the value as a Snowflake
            </summary>
            <returns></returns>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionDataOption.Options">
            <summary>
            Present if this option is a group or subcommand
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.InteractionDataOption"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionDataOption.Focused">
            <summary>
            True if this option is the currently focused option for autocomplete
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.InteractionDataParsed">
            <summary>
            Parses Interaction Data to make it easier to process for application commands
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionDataParsed.Interaction">
            <summary>
            Interaction this data is for
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionDataParsed.Data">
            <summary>
            <see cref="T:Oxide.Ext.Discord.Entities.Interactions.InteractionData"/> for the Interaction
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionDataParsed.Type">
            <summary>
            <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandType"/> The type of interaction that was triggered
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionDataParsed.Command">
            <summary>
            Parsed command for the interaction if an application command
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionDataParsed.CommandGroup">
            <summary>
            Command group for the interaction if <see cref="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandType.ChatInput"/> Command Type if an application command
            Null if command group is not used for the command.
            Defaults to empty string if command does not have a command group
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionDataParsed.SubCommand">
            <summary>
            Sub Command for the interaction if <see cref="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandType.ChatInput"/> Command Typ  if an application command
            Null if sub command group is not used for the command.
            Defaults to empty string if command does not have sub command
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionDataParsed.Args">
            <summary>
            Interaction Data Supplied Args if <see cref="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandType.ChatInput"/> Command Type if an application command
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionDataParsed.InGuild">
            <summary>
            Returns true if this command was used in a guild; false otherwise.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionDataParsed.TriggeredComponentId">
            <summary>
            The CustomId of the <see cref="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.BaseInteractableComponent"/> that triggered the interaction if a component triggered this interaction
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionDataParsed.SelectMenuValues">
            <summary>
            If a <see cref="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.BaseSelectMenuComponent"/> triggered this interaction. The values selected from the select menu.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionDataParsed.UserOxideLocale">
            <summary>
            Discord User's locale converted to oxide lang locale
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionDataParsed.GuildOxideLocale">
            <summary>
            Discord Guild's locale converted to oxide lang locale
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.InteractionDataParsed.#ctor(Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction)">
            <summary>
            Constructor for the data parser.
            </summary>
            <param name="interaction">Interaction to be parsed</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.InteractionDataArgs">
            <summary>
            Args supplied for the interaction
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.InteractionDataArgs.HasArg(System.String)">
            <summary>
            Returns if a given arg exists
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.InteractionDataArgs.GetString(System.String,System.String)">
            <summary>
            Returns the string value supplied to command option matching the name.
            If the arg was optional and wasn't supplied default supplied value will be used.
            </summary>
            <param name="name">Name of the command option</param>
            <param name="default">Default value to return if not supplied</param>
            <returns>String for the matching command option name</returns>
            <exception cref="T:System.Exception">Thrown if the option type is not a string</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.InteractionDataArgs.GetInt(System.String,System.Int32)">
            <summary>
            Returns the int value supplied to command option matching the name.
            If the arg was optional and wasn't supplied default supplied value will be used.
            </summary>
            <param name="name">Name of the command option</param>
            <param name="default">Default value to return if not supplied</param>
            <returns>Int for the matching command option name</returns>
            <exception cref="T:System.Exception">Thrown if the option type is not an int</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.InteractionDataArgs.GetBool(System.String,System.Boolean)">
            <summary>
            Returns the bool value supplied to command option matching the name.
            If the arg was optional and wasn't supplied default supplied value will be used.
            </summary>
            <param name="name">Name of the command option</param>
            <param name="default">Default value to return if not supplied</param>
            <returns>Bool for the matching command option name</returns>
            <exception cref="T:System.Exception">Thrown if the option type is not a bool</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.InteractionDataArgs.GetUser(System.String)">
            <summary>
            Returns the <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/> that was resolved from the command.
            </summary>
            <param name="name">Name of the command option</param>
            <returns><see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/> resolved for the matching command option name</returns>
            <exception cref="T:System.Exception">Thrown if the option type is not a <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/> or mentionable</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.InteractionDataArgs.GetChannel(System.String)">
            <summary>
            Returns the <see cref="T:Oxide.Ext.Discord.Entities.Channels.DiscordChannel"/> that was resolved from the command.
            </summary>
            <param name="name">Name of the command option</param>
            <returns><see cref="T:Oxide.Ext.Discord.Entities.Channels.DiscordChannel"/> resolved for the matching command option name</returns>
            <exception cref="T:System.Exception">Thrown if the option type is not a <see cref="T:Oxide.Ext.Discord.Entities.Channels.DiscordChannel"/></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.InteractionDataArgs.GetRole(System.String)">
            <summary>
            Returns the <see cref="T:Oxide.Ext.Discord.Entities.Permissions.DiscordRole"/> that was resolved from the command.
            </summary>
            <param name="name">Name of the command option</param>
            <returns><see cref="T:Oxide.Ext.Discord.Entities.Permissions.DiscordRole"/> resolved for the matching command option name</returns>
            <exception cref="T:System.Exception">Thrown if the option type is not a <see cref="T:Oxide.Ext.Discord.Entities.Permissions.DiscordRole"/> or mentionable</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.InteractionDataArgs.GetNumber(System.String,System.Double)">
            <summary>
            Returns the double value supplied to command option matching the name.
            If the arg was optional and wasn't supplied default supplied value will be used.
            </summary>
            <param name="name">Name of the command option</param>
            <param name="default">Default value to return if not supplied</param>
            <returns>double for the matching command option name</returns>
            <exception cref="T:System.Exception">Thrown if the option type is not a double</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.InteractionDataArgs.GetFloat(System.String,System.Single)">
            <summary>
            Returns the float value supplied to command option matching the name.
            If the arg was optional and wasn't supplied default supplied value will be used.
            </summary>
            <param name="name">Name of the command option</param>
            <param name="default">Default value to return if not supplied</param>
            <returns>double for the matching command option name</returns>
            <exception cref="T:System.Exception">Thrown if the option type is not a double</exception>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.InteractionDataResolved">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object-resolved-data-structure">Application Command Interaction Data Option</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionDataResolved.Users">
            <summary>
            The IDs and User objects
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionDataResolved.Members">
            <summary>
            The IDs and partial Member objects
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionDataResolved.Roles">
            <summary>
            The IDs and Role objects
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionDataResolved.Channels">
            <summary>
            The IDs and partial Channel objects
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionDataResolved.Messages">
            <summary>
            The ids and partial Message objects
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionDataResolved.Attachments">
            <summary>
            The ids and attachment objects
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-response-object-interaction-callback-type">InteractionResponseType</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType.Pong">
            <summary>
            Acknowledges a Ping
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType.ChannelMessageWithSource">
            <summary>
            Respond with a message, showing the user's input
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType.DeferredChannelMessageWithSource">
            <summary>
            Acknowledge a command without sending a message, showing the user's input
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType.DeferredUpdateMessage">
            <summary>
            For components, Acknowledge an interaction and edit the original message later
            The user does not see a loading state
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType.UpdateMessage">
            <summary>
            For components, edit the message the component was attached to
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType.ApplicationCommandAutocompleteResult">
            <summary>
            Respond to an autocomplete interaction with suggested choices
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType.Modal">
            <summary>
            Respond to an interaction with an modal for a user to fill-out
            Note: You can't respond to a <see cref="F:Oxide.Ext.Discord.Entities.Interactions.InteractionType.ModalSubmit">ModalSubmit</see> with a new MODAL.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.InteractionType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object-interaction-type">InteractionType</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionType.Ping">
            <summary>
            The interaction is a ping
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionType.ApplicationCommand">
            <summary>
            The interaction is a user using a command
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionType.MessageComponent">
            <summary>
            The interaction is a message component
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionType.ApplicationCommandAutoComplete">
            <summary>
            The interaction is a application command autocomplete
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionType.ModalSubmit">
            <summary>
            The interaction is a modal
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ActionRowComponent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/message-components#actionrow">Action Row Component</a> within discord
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ActionRowComponent.Components">
            <summary>
            The components on the action row
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ActionRowComponent.#ctor">
            <summary>
            Constructor for ActionRowComponent
            Sets the Type to ActionRow
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ActionRowComponent.Validate">
            <inheritdoc />
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.BaseComponent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/message-components#component-object">Message Component</a> within discord
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.BaseComponent.Type">
            <summary>
            Message component type
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.BaseComponent.Validate">
            <inheritdoc />
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.BaseInteractableComponent">
            <summary>
            Represent a MessageComponent that can be interacted with
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.BaseInteractableComponent.CustomId">
            <summary>
            Developer-defined identifier for the interactable component
            Max 100 characters
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.BaseInteractableComponent.Validate">
            <inheritdoc />
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonComponent">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/interactions/message-components#buttons">Button Component</a> within discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonComponent.Style">
            <summary>
            Style for the button component
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonComponent.Label">
            <summary>
            Text that appears on the button
            Max 80 characters
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonComponent.Emoji">
            <summary>
            Emoji on the component
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonComponent.Url">
            <summary>
            URL for link-style buttons
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonComponent.Disabled">
            <summary>
            Whether the button is disabled
            Default false
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonComponent.#ctor">
            <summary>
            Constructor for button
            Sets type to button
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonComponent.Validate">
            <inheritdoc />
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonStyle">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/message-components#buttons-button-styles">Button Styles</a> within Discord..
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonStyle.Primary">
            <summary>
            Color blurple
            Requires CustomId field
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonStyle.Secondary">
            <summary>
            Color grey
            Requires CustomId field
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonStyle.Success">
            <summary>
            Color green
            Requires CustomId field
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonStyle.Danger">
            <summary>
            Color red
            Requires CustomId field
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonStyle.Link">
            <summary>
            Color grey
            Navigates to a URL
            Requires Url field
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextComponent">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/interactions/message-components#input-text">Input Text Component</a> within discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextComponent.Style">
            <summary>
            Style of the input text
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextComponent.Label">
            <summary>
            Text that appears on top of the input text field, max 80 characters
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextComponent.MinLength">
            <summary>
            Minimum length of the text input
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextComponent.MaxLength">
            <summary>
            Maximum length of the text input
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextComponent.Required">
            <summary>
            Whether this component is required to be filled
            defaults to true
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextComponent.Value">
            <summary>
            Pre-filled value for text input
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextComponent.Placeholder">
            <summary>
            Custom placeholder text if the input is empty
            Max 100 characters
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextComponent.#ctor">
            <summary>
            Input Text Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextComponent.Validate">
            <inheritdoc />
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextStyles">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/interactions/message-components#input-text-styles">Input Text Styles</a> within discord.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextStyles.Short">
            <summary>
            Single-line input
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextStyles.Paragraph">
            <summary>
            Multi-line input
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.MessageComponentType">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/interactions/message-components#component-types">Message Component Type</a> within Discord..
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.MessageComponentType.ActionRow">
            <summary>
            Container for other components
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.MessageComponentType.Button">
            <summary>
            Clickable button
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.MessageComponentType.StringSelect">
            <summary>
            Select menu for picking from defined text options
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.MessageComponentType.InputText">
            <summary>
            Text box for inserting written responses
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.MessageComponentType.UserSelect">
            <summary>
            Select menu for users
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.MessageComponentType.RoleSelect">
            <summary>
            Select menu for roles
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.MessageComponentType.MentionableSelect">
            <summary>
            Select menu for mentionables (users and roles)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.MessageComponentType.ChannelSelect">
            <summary>
            Select menu for channels
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.BaseSelectMenuComponent">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/interactions/message-components#select-menus">Select Menus Component</a> within discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.BaseSelectMenuComponent.Placeholder">
            <summary>
            Custom placeholder text if nothing is selected
            Max 150 characters
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.BaseSelectMenuComponent.MinValues">
            <summary>
            the minimum number of items that must be chosen;
            Default 1, Min 0, Max 25
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.BaseSelectMenuComponent.MaxValues">
            <summary>
            the maximum  number of items that must be chosen;
            Default 1, Min 0, Max 25
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.BaseSelectMenuComponent.Disabled">
            <summary>
            Disable the select
            Default false
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.BaseSelectMenuComponent.#ctor(Oxide.Ext.Discord.Entities.Interactions.MessageComponents.MessageComponentType)">
            <summary>
            Select Menu Component Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.BaseSelectMenuComponent.Validate">
            <inheritdoc />
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.ChannelSelectComponent">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/interactions/message-components#select-menus">Select Menus Component</a> within discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.ChannelSelectComponent.ChannelTypes">
            <summary>
            List of channel types to include in the channel select component
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.ChannelSelectComponent.#ctor">
            <summary>
            Select Menu Component Constructor
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.MentionableSelectComponent">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/interactions/message-components#select-menus">Select Menus Component</a> within discord.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.MentionableSelectComponent.#ctor">
            <summary>
            Select Menu Component Constructor
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.RoleSelectComponent">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/interactions/message-components#select-menus">Select Menus Component</a> within discord.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.RoleSelectComponent.#ctor">
            <summary>
            Select Menu Component Constructor
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.SelectMenuOption">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/interactions/message-components#select-option-structure">Select Menu Option Structure</a> within discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.SelectMenuOption.Label">
            <summary>
            User-facing name of the option,
            Max 100 characters
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.SelectMenuOption.Value">
            <summary>
            Dev-define value of the option,
            Max 100 characters
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.SelectMenuOption.Description">
            <summary>
            Additional description of the option,
            Max 100 characters
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.SelectMenuOption.Emoji">
            <summary>
            Emoji in the option
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.SelectMenuOption.Default">
            <summary>
            Will show this option as selected by default
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.SelectMenuOption.Validate">
            <inheritdoc />
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.StringSelectComponent">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/interactions/message-components#select-menus">Select Menus Component</a> within discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.StringSelectComponent.Options">
            <summary>
            The choices in the select
            Max 25 options
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.StringSelectComponent.#ctor">
            <summary>
            Select Menu Component Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.StringSelectComponent.Validate">
            <inheritdoc />
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.UserSelectComponent">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/interactions/message-components#select-menus">Select Menus Component</a> within discord.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.UserSelectComponent.#ctor">
            <summary>
            Select Menu Component Constructor
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.Response.BaseInteractionMessage">
            <summary>
            Represents a Base Message for an interaction
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Response.BaseInteractionMessage.ValidateRequiredFields">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Response.BaseInteractionMessage.ValidateFlags">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.Response.BaseInteractionResponse">
            <summary>
            Represents a Base Interaction response
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Response.BaseInteractionResponse.Type">
            <summary>
            The type of response
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Response.BaseInteractionResponse.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Response.BaseInteractionResponse.#ctor(Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType)">
            <summary>
            Constructor with <see cref="T:Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType"/>
            </summary>
            <param name="type"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.Response.BaseInteractionResponse`1">
            <summary>
            Represents a Base Interaction Response with generic data {T}
            </summary>
            <typeparam name="T">{T} data type</typeparam>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Response.BaseInteractionResponse`1.Data">
            <summary>
            Response to the Interaction
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Response.BaseInteractionResponse`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Response.BaseInteractionResponse`1.#ctor(Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType,`0)">
            <summary>
            Constructor with Data and response type
            </summary>
            <param name="type">Response type for the interaction</param>
            <param name="data">Data for the interaction</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionAutoCompleteMessage">
            <summary>
            Interaction Auto Complete Response Message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionAutoCompleteMessage.Choices">
            <summary>
            Autocomplete choices (max of 25 choices)
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionAutoCompleteResponse">
            <summary>
            Represents an Auto Complete response in Discord
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionAutoCompleteResponse.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionAutoCompleteResponse.#ctor(Oxide.Ext.Discord.Entities.Interactions.Response.InteractionAutoCompleteMessage)">
            <summary>
            Constructor with initial message
            </summary>
            <param name="message">Message to use for the response</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionCallbackData">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-response-object-interaction-callback-data-structure">Interaction Application Command Callback Data Structure</a>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionModalMessage">
            <summary>
            Represents an Interaction Modal Message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionModalMessage.CustomId">
            <summary>
            A developer-defined identifier for the interactable form
            Max 100 characters
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionModalMessage.Title">
            <summary>
            Title of the modal if Modal Response
            Max 45 characters
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionModalMessage.Components">
            <summary>
            Used to create message components on a message
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionModalResponse">
            <summary>
            Represents an Interaction Modal Response
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionModalResponse.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionModalResponse.#ctor(Oxide.Ext.Discord.Entities.Interactions.Response.InteractionModalMessage)">
            <summary>
            Constructor with message
            </summary>
            <param name="message">Message to use for the response</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionResponse">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-response-object">Interaction Response</a>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionResponse.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionResponse.#ctor(Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType,Oxide.Ext.Discord.Entities.Interactions.Response.InteractionCallbackData)">
            <summary>
            Creates a <see cref="T:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionResponse"/>
            </summary>
            <param name="type">The type of the response</param>
            <param name="data">The data for the response</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionResponse.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Invites.DiscordInvite">
            <summary>
            Represents an <a href="https://discord.com/developers/docs/resources/invite#invite-object">Invite Structure</a> that when used, adds a user to a guild or group DM channel.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.DiscordInvite.Code">
            <summary>
            The invite code (unique ID)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.DiscordInvite.Guild">
            <summary>
            The guild this invite is for
            See <see cref="P:Oxide.Ext.Discord.Entities.Invites.DiscordInvite.Guild"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.DiscordInvite.Channel">
            <summary>
            The channel this invite is for
            See <see cref="P:Oxide.Ext.Discord.Entities.Invites.DiscordInvite.Channel"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.DiscordInvite.Inviter">
            <summary>
            The user who created the invite
            See <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.DiscordInvite.TargetUser">
            <summary>
            The target user for this invite
            See <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.DiscordInvite.UserTargetType">
            <summary>
            The type of user target for this invite
            See <see cref="T:Oxide.Ext.Discord.Entities.Invites.TargetUserType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.DiscordInvite.ApproximatePresenceCount">
            <summary>
            Approximate count of online members (only present when target_user is set)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.DiscordInvite.ApproximateMemberCount">
            <summary>
            Approximate count of total members
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.DiscordInvite.ExpiresAt">
            <summary>
            When the invite code expires
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.DiscordInvite.StageInstance">
            <summary>
            Stage instance data if there is a public Stage instance in the Stage channel this invite is for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.DiscordInvite.GuildScheduledEvent">
            <summary>
            Guild scheduled event data, only included if guild_scheduled_event_id contains a valid guild scheduled event id
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Invites.DiscordInvite.Get(Oxide.Ext.Discord.Clients.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Invites.InviteLookup)">
            <summary>
            Returns an invite object for the given code.
            See <a href="https://discord.com/developers/docs/resources/invite#get-invite">Get Invite</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="inviteCode">Invite code</param>
            <param name="lookup">Lookup query string parameters for the request</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Invites.DiscordInvite.Delete(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Delete an invite.
            Requires the MANAGE_CHANNELS permission on the channel this invite belongs to, or MANAGE_GUILD to remove any invite across the guild.
            Returns an invite object on success.
            See <a href="https://discord.com/developers/docs/resources/invite#delete-invite">Delete Invite</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Invites.InviteLookup">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/guild-scheduled-event#list-scheduled-events-for-guild-query-string-params">Scheduled Event Lookup Structure</a> within Discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteLookup.WithCounts">
            <summary>
            Whether the invite should contain approximate member counts
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteLookup.WithExpiration">
            <summary>
            Whether the invite should contain the expiration date
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteLookup.GuildScheduledEventId">
            <summary>
            The guild scheduled event to include with the invite
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Invites.InviteLookup.ToQueryString">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Invites.InviteMetadata">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/invite#invite-metadata-object-invite-metadata-structure">Invite Metadata Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteMetadata.Uses">
            <summary>
            Number of times this invite has been used
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteMetadata.MaxUses">
            <summary>
            Max number of times this invite can be used
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteMetadata.MaxAge">
            <summary>
            Duration (in seconds) after which the invite expires
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteMetadata.Temporary">
            <summary>
            Whether this invite only grants temporary membership
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteMetadata.CreatedAt">
            <summary>
            When this invite was created
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Invites.InviteStageInstance">
            <summary>
            Represents an <a href="https://discord.com/developers/docs/resources/invite#invite-stage-instance-object">Invite Stage Instance</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteStageInstance.Members">
            <summary>
            The members speaking in the Stage
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteStageInstance.ParticipantCount">
            <summary>
            The number of users in the Stage
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteStageInstance.SpeakerCount">
            <summary>
            The number of users speaking in the Stage
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteStageInstance.Topic">
            <summary>
            The topic of the Stage instance (1-120 characters)
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Invites.TargetUserType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/invite#invite-object-target-user-types">Target User Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Invites.TargetUserType.Undefined">
            <summary>
            Target user type is not defined
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Invites.TargetUserType.Stream">
            <summary>
            Invite is for a go live stream
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMention">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#allowed-mentions-object">Allowed Mention Types</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMention.AllowedTypes">
            <summary>
            An array of allowed mention types to parse from the content.
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMentionTypes"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMention.Roles">
            <summary>
            Array of Role IDs to mention (Max size of 100)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMention.Users">
            <summary>
            Array of User IDs to mention (Max size of 100)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMention.RepliedUser">
            <summary>
            For replies, whether to mention the author of the message being replied to (default false)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMention.None">
            <summary>
            Prevents all mentions
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMentionTypes">
            <summary>
             Represents a <a href="https://discord.com/developers/docs/resources/channel#allowed-mentions-object-allowed-mention-types">Allowed Mention Types</a> for a message
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMentionTypes.Unknown">
            <summary>
            Discord Extension doesn't currently support this allowed mention type.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMentionTypes.Roles">
            <summary>
            Controls role mentions
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMentionTypes.Users">
            <summary>
            	Controls user mentions
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMentionTypes.Everyone">
            <summary>
            Controls @everyone and @here mentions
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate">
            <summary>
            Represents a base message in discord
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate.Content">
            <summary>
            Contents of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate.Tts">
            <summary>
            Whether this was a TTS message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate.Embeds">
            <summary>
            Embeds for the message
            Embeds are deduplicated by URL. If a message contains multiple embeds with the same URL, only the first is shown.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate.AllowedMention">
            <summary>
            Allowed mentions for a message
            Allows for more granular control over mentions without various hacks to the message content. 
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate.Components">
            <summary>
            Used to create message components on a message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate.StickerIds">
            <summary>
            IDs of up to 3 stickers in the server to send in the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate.Flags">
            <summary>
            Attachments for the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate.FileAttachments">
            <summary>
            Attachments for a discord message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate.Attachments">
            <summary>
            Attachments for the message
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate.AddAttachment(System.String,System.Byte[],System.String,System.String)">
            <summary>
            Adds an attachment to the message
            </summary>
            <param name="filename">Name of the file</param>
            <param name="data">byte[] of the attachment</param>
            <param name="contentType">Attachment content type</param>
            <param name="description">Description for the attachment</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate.Validate">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate.ValidateRequiredFields">
            <summary>
            Validates required fields for the message
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate.ValidateFlags">
            <summary>
            Validates that the message flags are correct for the message type
            </summary>
            <exception cref="T:Oxide.Ext.Discord.Exceptions.Entities.Messages.InvalidMessageException"></exception>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.DiscordMessage">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#message-object">Message Structure</a> sent in a channel within Discord..
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Id">
            <summary>
            ID of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.ChannelId">
            <summary>
            ID of the channel the message was sent in
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.GuildId">
            <summary>
            ID of the guild the message was sent in
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Author">
            <summary>
            The author of this message (not guaranteed to be a valid user)
            The author object follows the structure of the user object, but is only a valid user in the case where the message is generated by a user or bot user.
            If the message is generated by a webhook, the author object corresponds to the webhook's id, username, and avatar.
            You can tell if a message is generated by a webhook by checking for the webhook_id on the message object.
            <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Member">
            <summary>
            Member properties for this message's author
            <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildMember"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Content">
            <summary>
            Contents of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Timestamp">
            <summary>
            When this message was sent
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.EditedTimestamp">
            <summary>
            When this message was edited (or null if never)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Tts">
            <summary>
            Whether this was a TTS message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.MentionEveryone">
            <summary>
            Whether this message mentions everyone
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Mentions">
            <summary>
            Users specifically mentioned in the message
            <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.MentionRoles">
            <summary>
            Roles specifically mentioned in this message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.MentionsChannels">
            <summary>
            Channels specifically mentioned in this message
            <see cref="T:Oxide.Ext.Discord.Entities.Channels.ChannelMention"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Attachments">
            <summary>
            Any attached files
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageAttachment"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Embeds">
            <summary>
            Any embedded content
            <see cref="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Embeds"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Reactions">
            <summary>
            Reactions to the message
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageReaction"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Nonce">
            <summary>
            Used for validating a message was sent
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Pinned">
            <summary>
            Whether this message is pinned
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.WebhookId">
            <summary>
            If the message is generated by a webhook, this is the webhook's id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Type">
            <summary>
            Type of message
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Activity">
            <summary>
            Sent with Rich Presence-related chat embeds
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageActivity"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Application">
            <summary>
            Sent with Rich Presence-related chat embeds
            <see cref="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Application"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.ApplicationId">
            <summary>
            If the message is an Interaction or application-owned webhook, this is the id of the application
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.MessageReference">
            <summary>
            Data showing the source of a crosspost, channel follow add, pin, or reply message
            <see cref="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.MessageReference"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Flags">
            <summary>
            Message flags combined as a bitfield
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageFlags"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.ReferencedMessage">
            <summary>
            The message associated with the message_reference
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Interaction">
            <summary>
            Sent if the message is a response to an Interaction
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Thread">
            <summary>
            The thread that was started from this message, includes thread member object
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Components">
            <summary>
            Sent if the message contains components like buttons, action rows, or other interactive components
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.StickerItems">
            <summary>
            Sent if the message contains stickers
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Position">
            <summary>
            A generally increasing integer (there may be gaps or duplicates) that represents the approximate position of the message in a thread, it can be used to estimate the relative position of the message in a thread in company with total_message_sent on parent thread
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.RoleSubscriptionData">
            <summary>
            The data of the role subscription purchase or renewal that prompted this ROLE_SUBSCRIPTION_PURCHASE message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.FileAttachments">
            <summary>
            File Attachments to add to the message on edit
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Create(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Messages.MessageCreate)">
            <summary>
            Post a message to a guild text or DM channel.
            If operating on a guild channel, this endpoint requires the SEND_MESSAGES permission to be present on the current user.
            If the tts field is set to true, the SEND_TTS_MESSAGES permission is required for the message to be spoken.
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to send the message to</param>
            <param name="message">Message to be created</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Create(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Builders.Messages.DiscordMessageBuilder)">
            <summary>
            Post a message to a guild text or DM channel.
            If operating on a guild channel, this endpoint requires the SEND_MESSAGES permission to be present on the current user.
            If the tts field is set to true, the SEND_TTS_MESSAGES permission is required for the message to be spoken.
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to send the message to</param>
            <param name="builder">Builder for the message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Create(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.String)">
            <summary>
            Post a message to a guild text or DM channel.
            If operating on a guild channel, this endpoint requires the SEND_MESSAGES permission to be present on the current user.
            If the tts field is set to true, the SEND_TTS_MESSAGES permission is required for the message to be spoken.
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to send the message to</param>
            <param name="message">Content of the message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Create(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed)">
            <summary>
            Post a message to a guild text or DM channel.
            If operating on a guild channel, this endpoint requires the SEND_MESSAGES permission to be present on the current user.
            If the tts field is set to true, the SEND_TTS_MESSAGES permission is required for the message to be spoken.
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to send the message to</param>
            <param name="embed">Embed to be send in the message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Create(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed})">
            <summary>
            Post a message to a guild text or DM channel.
            If operating on a guild channel, this endpoint requires the SEND_MESSAGES permission to be present on the current user.
            If the tts field is set to true, the SEND_TTS_MESSAGES permission is required for the message to be spoken.
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to send the message to</param>
            <param name="embeds">Embeds to be send in the message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.CreateGlobalTemplateMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Core.Plugins.Plugin,System.String,Oxide.Ext.Discord.Entities.Messages.MessageCreate,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Send a message in the channel with the given ID using a global message template
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to send the message in</param>
            <param name="plugin">Plugin for the template</param>
            <param name="templateName">Template Name</param>
            <param name="message">Message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.CreateTemplateMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Core.Plugins.Plugin,System.String,System.String,Oxide.Ext.Discord.Entities.Messages.MessageCreate,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Send a message in the channel with the given ID using a localized message template
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to send the message in</param>
            <param name="plugin">Plugin for the template</param>
            <param name="templateName">Template Name</param>
            <param name="language">Oxide language to use</param>
            <param name="message">Message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.GetMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns a specific message in the channel.
            If operating on a guild channel, this endpoint requires the 'READ_MESSAGE_HISTORY' permission to be present on the current user.
            See <a href="https://discord.com/developers/docs/resources/channel#get-channel-message">Get Channel Messages</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID where the message is</param>
            <param name="messageId">Message ID of the message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Reply(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Messages.MessageCreate)">
            <summary>
            Replies to a previously sent message
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Message to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Reply(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Builders.Messages.DiscordMessageBuilder)">
            <summary>
            Replies to a previously sent message
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="builder">Builder for the message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Reply(Oxide.Ext.Discord.Clients.DiscordClient,System.String)">
            <summary>
            Replies to a previously sent message
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Message text to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Reply(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed)">
            <summary>
            Replies to a previously sent message
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="embed">Embed to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Reply(Oxide.Ext.Discord.Clients.DiscordClient,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed})">
            <summary>
            Replies to a previously sent message
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="embeds">Embeds to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.ReplyWithGlobalTemplate(Oxide.Ext.Discord.Clients.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Messages.MessageCreate,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Reply to a message using a global message template
            </summary>
            <param name="client">Client to use</param>
            <param name="templateName">Template Name</param>
            <param name="message">Message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.ReplyWithTemplate(Oxide.Ext.Discord.Clients.DiscordClient,System.String,System.String,Oxide.Ext.Discord.Entities.Messages.MessageCreate,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Reply to a message using a global message template
            </summary>
            <param name="client">Client to use</param>
            <param name="templateName">Template Name</param>
            <param name="language">Oxide language to use</param>
            <param name="message">Message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.CrossPostMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Crosspost a message in a News Channel to following channels.
            This endpoint requires the 'SEND_MESSAGES' permission, if the current user sent the message, or additionally the 'MANAGE_MESSAGES' permission, for all other messages, to be present for the current user.
            See <a href="https://discord.com/developers/docs/resources/channel#crosspost-message">Crosspost Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="messageId">Message ID to cross post</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.CrossPostMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Messages.DiscordMessage)">
            <summary>
            Crosspost a message in a News Channel to following channels.
            This endpoint requires the 'SEND_MESSAGES' permission, if the current user sent the message, or additionally the 'MANAGE_MESSAGES' permission, for all other messages, to be present for the current user.
            See <a href="https://discord.com/developers/docs/resources/channel#crosspost-message">Crosspost Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Message to cross post</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.CreateReaction(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji)">
            <summary>
            Create a reaction for the message.
            This endpoint requires the 'READ_MESSAGE_HISTORY' permission to be present on the current user.
            Additionally, if nobody else has reacted to the message using this emoji, this endpoint requires the 'ADD_REACTIONS' permission to be present on the current user.
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#create-reaction">Create Reaction</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to react with.</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.CreateReaction(Oxide.Ext.Discord.Clients.DiscordClient,System.String)">
            <summary>
            Create a reaction for the message.
            This endpoint requires the 'READ_MESSAGE_HISTORY' permission to be present on the current user.
            Additionally, if nobody else has reacted to the message using this emoji, this endpoint requires the 'ADD_REACTIONS' permission to be present on the current user.
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#create-reaction">Create Reaction</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to react with.</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.DeleteOwnReaction(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji)">
            <summary>
            Delete a reaction the current user has made for the message
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#delete-own-reaction">Delete Own Reaction</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to delete</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.DeleteOwnReaction(Oxide.Ext.Discord.Clients.DiscordClient,System.String)">
            <summary>
            Delete a reaction the current user has made for the message
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#delete-own-reaction">Delete Own Reaction</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to delete</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.DeleteUserReaction(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Deletes another user's reaction.
            This endpoint requires the 'MANAGE_MESSAGES' permission to be present on the current user.
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#delete-user-reaction">Delete User Reaction</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to delete</param>
            <param name="userId">User ID who add the reaction</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.DeleteUserReaction(Oxide.Ext.Discord.Clients.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Deletes another user's reaction.
            This endpoint requires the 'MANAGE_MESSAGES' permission to be present on the current user.
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#delete-user-reaction">Delete User Reaction</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to delete</param>
            <param name="userId">User ID who add the reaction</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.GetReactions(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji)">
            <summary>
            Get a list of users that reacted with this emoji
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#get-reactions">Get Reactions</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to get the list for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.GetReactions(Oxide.Ext.Discord.Clients.DiscordClient,System.String)">
            <summary>
            Get a list of users that reacted with this emoji
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#get-reactions">Get Reactions</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to get the list for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.DeleteAllReactions(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Deletes all reactions on a message.
            This endpoint requires the 'MANAGE_MESSAGES' permission to be present on the current user.
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.DeleteAllReactionsForEmoji(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji)">
            <summary>
            Deletes all the reactions for a given emoji on a message.
            This endpoint requires the MANAGE_MESSAGES permission to be present on the current user.
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#delete-all-reactions-for-emoji">Delete All Reactions for Emoji</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to delete all reactions for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.DeleteAllReactionsForEmoji(Oxide.Ext.Discord.Clients.DiscordClient,System.String)">
            <summary>
            Deletes all the reactions for a given emoji on a message.
            This endpoint requires the MANAGE_MESSAGES permission to be present on the current user.
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#delete-all-reactions-for-emoji">Delete All Reactions for Emoji</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to delete all reactions for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Edit(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Messages.MessageUpdate)">
            <summary>
            Edit a previously sent message.
            The fields content, embed, allowed_mentions and flags can be edited by the original message author.
            Other users can only edit flags and only if they have the MANAGE_MESSAGES permission in the corresponding channel.
            When specifying flags, ensure to include all previously set flags/bits in addition to ones that you are modifying.
            Only flags documented in the table below may be modified by users (unsupported flag changes are currently ignored without error).
            See <a href="https://discord.com/developers/docs/resources/channel#edit-message">Edit Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="update">Update to be applied to the message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.EditGlobalTemplateMessage(Oxide.Ext.Discord.Clients.DiscordClient,System.String,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData,Oxide.Ext.Discord.Entities.Messages.MessageUpdate)">
            <summary>
            Edit a message using a global message template
            </summary>
            <param name="client">Client to use</param>
            <param name="templateName">Template Name</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
            <param name="update">Update to be applied to the message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.EditTemplateMessage(Oxide.Ext.Discord.Clients.DiscordClient,System.String,System.String,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData,Oxide.Ext.Discord.Entities.Messages.MessageUpdate)">
            <summary>
            Edit a message using a localized message template
            </summary>
            <param name="client">Client to use</param>
            <param name="templateName">Template Name</param>
            <param name="language">Oxide language to use</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
            <param name="update">Update to be applied tothe message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Delete(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Delete a message.
            If operating on a guild channel and trying to delete a message that was not sent by the current user, this endpoint requires the MANAGE_MESSAGES permission.
            See <a href="https://discord.com/developers/docs/resources/channel#delete-message">Delete Message</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Pin(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Pin a message in a channel.
            Requires the MANAGE_MESSAGES permission.
            See <a href="https://discord.com/developers/docs/resources/channel#add-pinned-channel-message">Add Pinned Channel Message</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Unpin(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Delete a pinned message in a channel.
            Requires the MANAGE_MESSAGES permission.
            See <a href="https://discord.com/developers/docs/resources/channel#delete-pinned-channel-message">Unpin Pinned Channel Message</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.StartThread(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Threads.ThreadCreateFromMessage)">
            <summary>
            Creates a new public thread this message
            See <a href="https://discord.com/developers/docs/resources/channel#start-thread-from-message"></a>
            </summary>
            <param name="client">Client to use</param>
            <param name="create">Data to use when creating the thread</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object">Embed Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed.Title">
            <summary>
            Title of embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed.Type">
            <summary>
            Type of embed (always "rich" for webhook embeds)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed.Description">
            <summary>
            Description of embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed.Url">
            <summary>
            Url of embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed.Timestamp">
            <summary>
            Timestamp of embed content
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed.Color">
            <summary>
            Color code of the embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed.Footer">
            <summary>
            Footer information
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedFooter"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed.Image">
            <summary>
            Image information
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedImage"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed.Thumbnail">
            <summary>
            Thumbnail information
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedThumbnail"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed.Video">
            <summary>
            Video information
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedVideo"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed.Provider">
            <summary>
            Provider information
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedProvider"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed.Author">
            <summary>
            Author information
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedAuthor"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed.Fields">
            <summary>
            Fields information
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedAuthor">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object-embed-author-structure">Embed Author Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedAuthor.Name">
            <summary>
            Name of author
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedAuthor.Url">
            <summary>
            Url of author
            * Only supports http(s)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedAuthor.IconUrl">
            <summary>
            Url of author icon (only supports http(s) and attachments)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedAuthor.ProxyIconUrl">
            <summary>
            A proxied url of author icon
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedAuthor.#ctor">
            <summary>
            Embed Author Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedAuthor.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Embed Author Constructor
            </summary>
            <param name="name"></param>
            <param name="url"></param>
            <param name="iconUrl"></param>
            <param name="proxyIconUrl"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object-embed-field-structure">Embed Field Structure</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField.Blank">
            <summary>
            Represents a blank character to be used in embeds for empty text
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField.Name">
            <summary>
            Name of the field
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField.Value">
            <summary>
            Value of the field
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField.Inline">
            <summary>
            Whether or not this field should display inline
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField.#ctor">
            <summary>
            Embed Field constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Embed Field constructor
            </summary>
            <param name="name">Field Name</param>
            <param name="value">Field Value</param>
            <param name="inline">Should field be inlined</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedFooter">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object-embed-footer-structure">Embed Footer Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedFooter.Text">
            <summary>
            Footer text
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedFooter.IconUrl">
            <summary>
            Url of footer icon (only supports http(s) and attachments)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedFooter.ProxyIconUrl">
            <summary>
            A proxied url of footer icon
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedFooter.#ctor">
            <summary>
            Embed Footer Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedFooter.#ctor(System.String,System.String,System.String)">
            <summary>
            Embed Footer Constructor
            </summary>
            <param name="text"></param>
            <param name="iconUrl"></param>
            <param name="proxyIconUrl"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedImage">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object-embed-image-structure">Embed Image Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedImage.Url">
            <summary>
            Source url of image (only supports http(s) and attachments)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedImage.ProxyUrl">
            <summary>
            A proxied url of the image
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedImage.Height">
            <summary>
            Height of image
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedImage.Width">
            <summary>
            Width of image
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedImage.#ctor">
            <summary>
            Embed Image Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedImage.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Embed Image Constructor
            </summary>
            <param name="url"></param>
            <param name="height"></param>
            <param name="width"></param>
            <param name="proxyUrl"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedProvider">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object-embed-provider-structure">Embed Provider Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedProvider.Name">
            <summary>
            Name of provider
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedProvider.Url">
            <summary>
            Url of provider
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedProvider.#ctor">
            <summary>
            Embed Provider Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedProvider.#ctor(System.String,System.String)">
            <summary>
            Embed Provider Constructor
            </summary>
            <param name="name"></param>
            <param name="url"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedThumbnail">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object-embed-thumbnail-structure">Embed Thumbnail Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedThumbnail.Url">
            <summary>
            Source url of thumbnail (only supports http(s) and attachments)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedThumbnail.ProxyUrl">
            <summary>
            A proxied url of the thumbnail
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedThumbnail.Height">
            <summary>
            Height of thumbnail
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedThumbnail.Width">
            <summary>
            Width of thumbnail
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedThumbnail.#ctor">
            <summary>
            Embed Thumbnail constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedThumbnail.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Embed Thumbnail constructor
            </summary>
            <param name="url"></param>
            <param name="height"></param>
            <param name="width"></param>
            <param name="proxyUrl"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedVideo">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object-embed-video-structure">Embed Video Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedVideo.Url">
            <summary>
            Source url of video
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedVideo.ProxyUrl">
            <summary>
            Source url of video
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedVideo.Height">
            <summary>
            Height of video
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedVideo.Width">
            <summary>
            Width of video
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedVideo.#ctor">
            <summary>
            Embed Video Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedVideo.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Embed Video Constructor
            </summary>
            <param name="url"></param>
            <param name="proxyUrl"></param>
            <param name="height"></param>
            <param name="width"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageActivity">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#message-object-message-activity-structure">Message Activity Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageActivity.Type">
            <summary>
            Type of message activity
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageActivityType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageActivity.PartyId">
            <summary>
            Party ID from a Rich Presence event
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageActivityType">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#message-object-message-activity-types">Message Activity Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageActivityType.Join">
            <summary>
            Message Activity Join
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageActivityType.Spectate">
            <summary>
            Message Activity Spectate
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageActivityType.Listen">
            <summary>
            Message Activity Listen
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageActivityType.JoinRequest">
            <summary>
            Message Activity JoinRequest
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageAttachment">
            <summary>
            Represents a message <a href="https://discord.com/developers/docs/resources/channel#attachment-object">Attachment Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageAttachment.Id">
            <summary>
            Attachment ID
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageAttachment.Filename">
            <summary>
            Name of file attached
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageAttachment.Description">
            <summary>
            Description for the file
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageAttachment.ContentType">
            <summary>
            The attachment's <a href="https://en.wikipedia.org/wiki/Media_type">media type</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageAttachment.Size">
            <summary>
            Size of file in bytes
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageAttachment.Url">
            <summary>
            Source url of file
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageAttachment.ProxyUrl">
            <summary>
            A proxied url of file
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageAttachment.Height">
            <summary>
            Height of file (if image)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageAttachment.Width">
            <summary>
            Width of file (if image)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageAttachment.Ephemeral">
            <summary>
            Whether this attachment is ephemeral
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageAttachment.DurationSecs">
            <summary>
            The duration of the audio file (currently for voice messages)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageAttachment.Waveform">
            <summary>
            base64 encoded bytearray representing a sampled waveform (currently for voice messages)
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageCreate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#create-message-jsonform-params">Message Create Structure</a> to be created in discord
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageCreate.Nonce">
            <summary>
            Can be used to verify a message was sent (up to 25 characters).
            Value will appear in the Message Create event.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageCreate.MessageReference">
            <summary>
            Include to make your message a reply
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageFileAttachment">
            <summary>
            Represents a file attachment for a discord message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageFileAttachment.FileName">
            <summary>
            Name of the file attachment
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageFileAttachment.Data">
            <summary>
            Data for the file attachment
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageFileAttachment.ContentType">
            <summary>
            Web Content Type for the file attachment
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.MessageFileAttachment.#ctor(System.String,System.Byte[],System.String)">
            <summary>
            Constructor
            </summary>
            <param name="fileName">File Attachment Name</param>
            <param name="data">Data for the file</param>
            <param name="contentType">Web Content Type for the file attachment</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageFlags">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#message-object-message-flags">Message Flags</a> for a message
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.None">
            <summary>
            This message has no flags
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.CrossPosted">
            <summary>
            This message has been published to subscribed channels (via Channel Following)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.IsCrossPost">
            <summary>
            This message originated from a message in another channel (via Channel Following)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.SuppressEmbeds">
            <summary>
            Do not include any embeds when serializing this message
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.SourceMessageDeleted">
            <summary>
            The source message for this crosspost has been deleted (via Channel Following)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.Urgent">
            <summary>
            This message came from the urgent message system
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.HasThread">
            <summary>
            This message has an associated thread, with the same id as the message
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.Ephemeral">
            <summary>
            This message is only visible to the user who invoked the Interaction
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.Loading">
            <summary>
            This message is an Interaction Response and the bot is "thinking"
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.FailedToMentionSomeRolesInThread">
            <summary>
            This message failed to mention some roles and add their members to the thread
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.SuppressNotifications">
            <summary>
            This message will not trigger push and desktop notifications
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.IsVoiceMessage">
            <summary>
            This message is a voice message
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageInteraction">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/interactions/receiving-and-responding#message-interaction-object">Message Interaction Structure</a> within Discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageInteraction.Id">
            <summary>
            ID of the interaction
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageInteraction.Type">
            <summary>
            Type of interaction
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageInteraction.Name">
            <summary>
            Name of the <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand"/>, including subcommands and subcommand groups 
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageInteraction.User">
            <summary>
            The user who invoked the interaction
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageInteraction.Member">
            <summary>
            Member who invoked the interaction in the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageReaction">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#reaction-object">Reaction Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageReaction.Count">
            <summary>
            Times this emoji has been used to react
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageReaction.Me">
            <summary>
            Whether the current user reacted using this emoji
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageReaction.Emoji">
            <summary>
            Emoji information
            <see cref="P:Oxide.Ext.Discord.Entities.Messages.MessageReaction.Emoji"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageReference">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#message-reference-object-message-reference-structure">Message Reference Structure</a> for a message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageReference.MessageId">
            <summary>
            ID of the originating message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageReference.ChannelId">
            <summary>
            ID of the originating message's channel
            Is optional when creating a reply, but will always be present when receiving an event/response that includes this data model.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageReference.GuildId">
            <summary>
            ID of the originating message's guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageReference.FailIfNotExists">
            <summary>
            When sending, whether to error if the referenced message doesn't exist instead of sending as a normal (non-reply) message, default true
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#message-object-message-types">Message Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.Default">
            <summary>
            The default message type
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.RecipientAdd">
            <summary>
            The message when a recipient is added
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.RecipientRemove">
            <summary>
            The message when a recipient is removed
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.Call">
            <summary>
            The message when a user is called
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.ChannelNameChange">
            <summary>
            The message when a channel name is changed
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.ChannelIconChange">
            <summary>
            The message when a channel icon is changed
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.ChannelPinnedMessage">
            <summary>
            The message when another message is pinned
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.UserJoin">
            <summary>
            The message when a new member joined
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.GuildBoost">
            <summary>
             The message for when a user boosts a guild
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.GuildBoostTier1">
            <summary>
            The message for when a guild reaches Tier 1 of Nitro boosts
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.GuildBoostTier2">
            <summary>
            The message for when a guild reaches Tier 2 of Nitro boosts
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.GuildBoostTier3">
            <summary>
            The message for when a guild reaches Tier 3 of Nitro boosts
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.ChannelFollowAdd">
            <summary>
            The message for when a news channel subscription is added to a text channel
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.GuildDiscoveryDisqualified">
            <summary>
            The message for when a guild discovery is disqualified
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.GuildDiscoveryRequalified">
            <summary>
            The message for when a guild discovery is requalified
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.GuildDiscoveryGracePeriodInitialWarning">
            <summary>
            The message for grace period initial warning
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.GuildDiscoveryGracePeriodFinalWarning">
            <summary>
            The message for grace period final warning
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.ThreadCreated">
            <summary>
            The message created a thread
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.Reply">
            <summary>
            The message for when the message is a reply
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.ChatInputCommand">
            <summary>
            The message for when the message is an application command
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.ThreadStarterMessage">
            <summary>
            Starter message for a thread
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.GuildInviteReminder">
            <summary>
            Reminder for a guild invite
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.ContextMenuCommand">
            <summary>
            Reminder for a guild invite
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.AutoModerationAction">
            <summary>
            Message is an auto mod action
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.RoleSubscriptionPurchase">
            <summary>
            Message is a role subscription purchase
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.InteractionPremiumUpsell">
            <summary>
            Message is a interaction premium upsell
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.StageStart">
            <summary>
            Message is a stage start
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.StageEnd">
            <summary>
            Message is a stage end
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.StageSpeaker">
            <summary>
            Message is a stage speaker
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.StageRaiseHand">
            <summary>
            Message is a stage raise hand
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.StageTopic">
            <summary>
            Message is a stage topic
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.GuildApplicationPremiumSubscription">
            <summary>
            Message is a Guild Application Premium Subscription
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageUpdate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#edit-message-jsonform-params">Message Update Structure</a> sent in a channel within Discord..
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageUpdate.Content">
            <summary>
            Contents of the message up to 2000 characters
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageUpdate.Embeds">
            <summary>
            Up to 10 rich embeds (up to 6000 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageUpdate.Flags">
            <summary>
            Edit the flags of a message (only SUPPRESS_EMBEDS can currently be set/unset)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageUpdate.AllowedMentions">
            <summary>
            Allowed mentions for the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageUpdate.Components">
            <summary>
            Components to include with the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageUpdate.Attachments">
            <summary>
            Attachments for the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageUpdate.FileAttachments">
            <summary>
            Attachments for a discord message
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.MessageUpdate.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.MessageUpdate.#ctor(Oxide.Ext.Discord.Entities.Messages.DiscordMessage)">
            <summary>
            Constructor for message to be edited
            Only sets the Attachments field
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.MessageUpdate.AddAttachment(System.String,System.Byte[],System.String,System.String)">
            <summary>
            Adds an attachment to the message
            </summary>
            <param name="filename">Name of the file</param>
            <param name="data">byte[] of the attachment</param>
            <param name="contentType">Attachment content type</param>
            <param name="description">Description for the attachment</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.MessageUpdate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Permissions.DiscordRole">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/permissions#role-object">Role Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Id">
            <summary>
            Role id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Name">
            <summary>
            Role name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Color">
            <summary>
            Role Color
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Hoist">
            <summary>
            If this role is pinned in the user listing
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Icon">
            <summary>
            The role's icon image (if the guild has the ROLE_ICONS feature)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.UnicodeEmoji">
            <summary>
            The role's unicode emoji as a standard emoji (if the guild has the ROLE_ICONS feature)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Position">
            <summary>
            Position of this role
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Permissions">
            <summary>
            Role Permissions
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Managed">
            <summary>
            Whether this role is managed by an integration
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Mentionable">
            <summary>
            Whether this role is mentionable
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Tags">
            <summary>
            The tags this role has
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Mention">
            <summary>
            Returns a string to mention this role in a message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.RoleIcon">
            <summary>
            Return the Role Icon URL for a Discord Role. Empty string is not set.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.HasPermission(Oxide.Ext.Discord.Entities.Permissions.PermissionFlags)">
            <summary>
            Returns if the role has the specified permission
            </summary>
            <param name="perm">Permission to check for</param>
            <returns>Return true if role has permission; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.IsBoosterRole">
            <summary>
            Returns if this role is the booster
            </summary>
            <returns>True if booster role. False otherwise;</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Validate">
            <inheritdoc />
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/permissions#permissions-bitwise-permission-flags">Permission Flags</a> for user or role
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.None">
            <summary>
            Represents No Permissions
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.All">
            <summary>
            Represents all possible Permissions Flags
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.CreateInstantInvite">
            <summary>
            Allows creation of instant invites
            Channel Type (Text, Voice, Stage)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.KickMembers">
            <summary>
            Allows kicking members
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.BanMembers">
            <summary>
            Allows banning members
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.Administrator">
            <summary>
            Allows all permissions and bypasses channel permission overwrites
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ManageChannels">
            <summary>
            Allows management and editing of channels
            Channel Type (Text, Voice, Stage)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ManageGuild">
            <summary>
            Allows management and editing of the guild
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.AddReactions">
            <summary>
            Allows for the addition of reactions to messages
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ViewAuditLog">
            <summary>
            Allows for viewing of audit logs
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.PrioritySpeaker">
            <summary>
            Allows for using priority speaker in a voice channel
            Channel Type (Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.Stream">
            <summary>
            Allows the user to go live
            Channel Type (Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ViewChannel">
            <summary>
            Allows guild members to view a channel, which includes reading messages in text channels and joining voice channels
            Channel Type (Text, Voice, Stage)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.SendMessages">
            <summary>
            Allows for sending messages in a channel
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.SendTtsMessages">
            <summary>
            Allows for sending of /tts messages
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ManageMessages">
            <summary>
            Allows for deletion of other users messages
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.EmbedLinks">
            <summary>
            Links sent by users with this permission will be auto-embedded
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.AttachFiles">
            <summary>
            Allows for uploading images and files
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ReadMessageHistory">
            <summary>
            Allows for reading of message history
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.MentionEveryone">
            <summary>
            Allows for using the @everyone tag to notify all users in a channel,
            and the @here tag to notify all online users in a channel
            Channel Type (Text, Stage)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.UseExternalEmojis">
            <summary>
            Allows the usage of custom emojis from other servers
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ViewGuildInsights">
            <summary>
            Allows for viewing guild insights
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.Connect">
            <summary>
            Allows for joining of a voice channel
            Channel Type (Voice, Stage)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.Speak">
            <summary>
            Allows for speaking in a voice channel
            Channel Type (Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.MuteMembers">
            <summary>
            Allows for muting members in a voice channel
            Channel Type (Voice, Stage)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.DeafanMembers">
            <summary>
            Allows for deafening of members in a voice channel
            Channel Type (Voice, Stage)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.MoveMembers">
            <summary>
            Allows for moving of members between voice channels
            Channel Type (Voice, Stage)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.UseVad">
            <summary>
            Allows for using voice-activity-detection in a voice channel
            Channel Type (Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ChangeNickname">
            <summary>
            Allows for modification of own nickname
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ManageNicknames">
            <summary>
            Allows for modification of other users nicknames
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ManageRoles">
            <summary>
            Allows management and editing of roles
            Channel Type (Text, Voice, Stage)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ManageWebhooks">
            <summary>
            Allows management and editing of webhooks
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ManageGuildExpressions">
            <summary>
            Allows management and editing of emojis, stickers, and soundboard sounds
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ManageEmojisAndStickers">
            <summary>
            Allows management and editing of emojis
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.UseSlashCommands">
            <summary>
            Allows members to use application commands, including slash commands and context menu commands.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.RequestToSpeak">
            <summary>
            Allows for requesting to speak in stage channels.
            Channel Type (Stage)
            (This permission is under active development and may be changed or removed.)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ManageEvents">
            <summary>
            Allows for creating, editing, and deleting scheduled events
            Channel Type (Voice, Stage)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ManageThreads">
            <summary>
            Allows for deleting and archiving threads, and viewing all private threads
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.UsePublicThreads">
            <summary>
            Allows for creating and participating in threads
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.CreatePublicThreads">
            <summary>
            Allows for creating threads
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.UsePrivateThreads">
            <summary>
            Allows for creating and participating in private threads
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.CreatePrivateThreads">
            <summary>
            Allows for creating private threads
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.UseExternalStickers">
            <summary>
            Allows the usage of custom stickers from other servers
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.SendMessagesInThreads">
            <summary>
            Allows for sending messages in threads
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.StartEmbeddedActivities">
            <summary>
            Allows for launching activities (applications with the `EMBEDDED` flag) in a voice channel
            Channel Type (Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.UseEmbeddedActivities">
            <summary>
            Allows for using Activities (applications with the `EMBEDDED` flag) in a voice channel
            Channel Type (Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ModerateMembers">
            <summary>
            Allows for timing out users to prevent them from sending or reacting to messages in chat and threads, and from speaking in voice and stage channels
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.ViewCreatorMonetizationAnalytics">
            <summary>
            Allows for viewing role subscription insights
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.UseSoundboard">
            <summary>
            Allows for using soundboard in a voice channel
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.UseExternalSounds">
            <summary>
            Allows the usage of custom soundboard sounds from other servers
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Permissions.PermissionFlags.SendVoiceMessages">
            <summary>
            Allows sending voice messages
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Permissions.RoleSubscription">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#role-subscription-data-object-role-subscription-data-object-structure">Role Subscription Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.RoleSubscription.RoleSubscriptionListingId">
            <summary>
            The id of the sku and listing that the user is subscribed to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.RoleSubscription.TierName">
            <summary>
            The name of the tier that the user is subscribed to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.RoleSubscription.TotalMonthsSubscribed">
            <summary>
            The cumulative number of months that the user has been subscribed for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.RoleSubscription.IsRenewal">
            <summary>
            Whether this notification is for a renewal rather than a new purchase
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Permissions.RoleTags">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/permissions#role-object-role-tags-structure">Role Tags Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.RoleTags.BotId">
            <summary>
            The id of the bot this role belongs to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.RoleTags.IntegrationId">
            <summary>
            The id of the integration this role belongs to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.RoleTags.PremiumSubscriber">
            <summary>
            Whether this is the guild's premium subscriber role
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.RoleTags.SubscriptionListingId">
            <summary>
            The id of this role's subscription sku and listing
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.RoleTags.AvailableForPurchase">
            <summary>
            whether this role is available for purchase
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Permissions.RoleTags.GuildConnections">
            <summary>
            Whether this role is a guild's linked role
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Snowflake">
            <summary>
            Represents an ID in discord.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Snowflake.DiscordEpoch">
            <summary>
            DateTimeOffset since discord Epoch
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Snowflake.Id">
            <summary>
            Snowflake Value
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.#ctor(System.UInt64)">
            <summary>
            Create a new snowflake from a ulong
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.#ctor(System.String)">
            <summary>
            Create a new snowflake from a string
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.#ctor(System.DateTimeOffset,System.UInt64)">
            <summary>
            Create a snowflake from a DateTimeOffset and increment
            </summary>
            <param name="offset"></param>
            <param name="increment">Increment value of the snowflake</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.GetCreationDate">
            <summary>
            Returns when the ID was created
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.IsValid">
            <summary>
            Returns if the ID value is not 0
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.TryParse(System.String,Oxide.Ext.Discord.Entities.Snowflake@)">
            <summary>
            Try to parse the a string into a snowflake value
            </summary>
            <param name="value">String to parse</param>
            <param name="snowflake">Snowflake to return</param>
            <returns>True if parse succeeded; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.Equals(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns if the two snowflakes are the same ID.
            </summary>
            <param name="other">Other snowflake to compare</param>
            <returns>True if the snowflake IDs match; false otherwise.</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.Equals(System.Object)">
            <summary>
            Returns if the obj is snowflake or ulong with matching ID.
            </summary>
            <param name="obj">Object to check</param>
            <returns>True if equal; False otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.Equals(System.UInt64)">
            <summary>
            Returns if other equals our ID
            </summary>
            <param name="other">Other to compare against</param>
            <returns>True if ID equals; False otherwise.</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.GetHashCode">
            <summary>
            Returns the HashCode of the ID
            </summary>
            <returns>ID fields hashcode</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.ToString">
            <summary>
            Returns ID as a string
            </summary>
            <returns>ID as a string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.CompareTo(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns the ID field of num compared to this snowflakes ID field
            </summary>
            <param name="num">Value to compare ID to</param>
            <returns>A value indication if the num is less than, equal to, or greater than our ID</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.CompareTo(System.UInt64)">
            <summary>
            Returns the ID field of num compared to this snowflakes ID field
            </summary>
            <param name="other">Value to compare ID to</param>
            <returns>A value indication if the num is less than, equal to, or greater than our ID</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_Equality(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns true if left and right are equal
            </summary>
            <param name="left">Snowflake to compare</param>
            <param name="right">Snowflake to compare</param>
            <returns>True if the snowflake ID's are equal; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_Inequality(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns true if left and right are not equal
            </summary>
            <param name="left">Snowflake to compare</param>
            <param name="right">Snowflake to compare</param>
            <returns>True if the snowflake ID's are not equal; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_LessThan(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns true if left snowflake's ID is less than right's ID
            </summary>
            <param name="left">Snowflake to be less than</param>
            <param name="right">Snowflake to be greater than</param>
            <returns>True if left is less than right</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_GreaterThan(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns true if left snowflake's ID is greater than right's ID
            </summary>
            <param name="left">Snowflake to be greater than</param>
            <param name="right">Snowflake to be less than</param>
            <returns>True if left is greater than right</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_LessThanOrEqual(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns true if left snowflake's ID is less than right's ID or equal
            </summary>
            <param name="left">Snowflake to be less than or equal</param>
            <param name="right">Snowflake to be greater than or equal</param>
            <returns>True if left is less than or equal to right</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_GreaterThanOrEqual(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns true if left snowflake's ID is greater or equal to right's ID
            </summary>
            <param name="left">Snowflake to be greater than or equal</param>
            <param name="right">Snowflake to be less than or equal</param>
            <returns>True if left is greater or equal to right</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_Implicit(Oxide.Ext.Discord.Entities.Snowflake)~System.UInt64">
            <summary>
            Converts snowflake to a ulong
            </summary>
            <param name="snowflake">Snowflake to be converted to ulong</param>
            <returns>Snowflake ID as ulong</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_Explicit(System.UInt64)~Oxide.Ext.Discord.Entities.Snowflake">
            <summary>
            Converts a ulong to a snowflake
            </summary>
            <param name="id">Id to be converted to snowflake</param>
            <returns>ID converted to a snowflake</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_Implicit(Oxide.Ext.Discord.Entities.Snowflake)~System.String">
            <summary>
            Converts snowflake to a string
            </summary>
            <param name="snowflake">Snowflake to be converted to string</param>
            <returns>Snowflake ID as string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_Explicit(System.String)~Oxide.Ext.Discord.Entities.Snowflake">
            <summary>
            Converts a string to a snowflake
            </summary>
            <param name="id">Id to be converted to snowflake</param>
            <returns>ID converted to a snowflake</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/sticker#sticker-object">Discord Sticker Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker.Id">
            <summary>
            ID of the sticker
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker.PackId">
            <summary>
            ID of the pack the sticker is from
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker.Name">
            <summary>
            Name of the sticker
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker.Description">
            <summary>
            Description of the sticker
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker.Tags">
            <summary>
            For guild stickers, a unicode emoji representing the sticker's expression.
            For nitro stickers, a comma-separated list of related expressions.
            autocomplete/suggestion tags for the sticker (max 200 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker.Type">
            <summary>
            Type of sticker.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker.FormatType">
            <summary>
            Type of sticker format
            <see cref="T:Oxide.Ext.Discord.Entities.Stickers.StickerFormatType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker.Available">
            <summary>
            Whether or not the sticker is available
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker.GuildId">
            <summary>
            Id of the guild that owns this sticker
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker.User">
            <summary>
            The user that uploaded the sticker
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker.SortValue">
            <summary>
            A sticker's sort order within a pack
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker.StickerUrl">
            <summary>
            Returns the Url for the sticker
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker.Get(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns a sticker object for the given sticker ID.
            See <a href="https://discord.com/developers/docs/resources/sticker#get-sticker">Get Sticker</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="stickerId">ID of the sticker</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker.ModifyGuildSticker(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Modify the given sticker.
            Requires the MANAGE_EMOJIS_AND_STICKERS permission.
            Returns the updated sticker object on success.
            See <a href="https://discord.com/developers/docs/resources/sticker#modify-guild-sticker">Modify Guild Sticker</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Stickers.DiscordSticker.DeleteGuildSticker(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Delete the given sticker.
            Requires the MANAGE_EMOJIS_AND_STICKERS permission.
            See <a href="https://discord.com/developers/docs/resources/sticker#delete-guild-sticker">Delete Guild Sticker</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Stickers.DiscordStickerPack">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/sticker#sticker-pack-object">Sticker Pack Object</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordStickerPack.Id">
            <summary>
            ID of the sticker pack
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordStickerPack.Stickers">
            <summary>
            The stickers in the pack
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordStickerPack.Name">
            <summary>
            Name of the sticker pack
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordStickerPack.SkuId">
            <summary>
            ID of the pack's SKU
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordStickerPack.CoverStickerId">
            <summary>
            ID of a sticker in the pack which is shown as the pack's icon
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordStickerPack.Description">
            <summary>
            Description of the sticker pack
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.DiscordStickerPack.BannerAssetId">
            <summary>
            ID of the sticker pack's banner image
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Stickers.DiscordStickerPack.GetNitroStickerPacks(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns the list of sticker packs available to Nitro subscribers.
            See <a href="https://discord.com/developers/docs/resources/sticker#list-nitro-sticker-packs">List Nitro Sticker Packs</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Stickers.GuildStickerCreate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/sticker#sticker-pack-object">Sticker Pack Object</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.GuildStickerCreate.Name">
            <summary>
            Name of the sticker (2-30 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.GuildStickerCreate.Description">
            <summary>
            Description of the sticker (empty or 2-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.GuildStickerCreate.Tags">
            <summary>
            Autocomplete/suggestion tags for the sticker (max 200 characters)
            Each tag should be seperated by a command and space IE ', ' 
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Stickers.GuildStickerCreate.FileAttachments">
            <summary>
            Sticker image attachment
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Stickers.GuildStickerCreate.AddSticker(System.String,System.String,System.Byte[])">
            <summary>
            Adds the sticker for guild sticker create
            </summary>
            <param name="fileName">Name of the file</param>
            <param name="contentType">Content type of the file</param>
            <param name="sticker">sticker image bytes</param>
            <exception cref="T:System.Exception">
            Throw if more than 1 sticker is added.
            Thrown if the data is more than 500KB
            Thrown if the file extension is not .png, .apng, .gif, or .json
            </exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Stickers.GuildStickerCreate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Stickers.StickerFormatType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/sticker#sticker-format-types">Sticker Format Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Stickers.StickerFormatType.Png">
            <summary>
            Sticker format type PNG
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Stickers.StickerFormatType.Apng">
            <summary>
            Sticker format type APNG
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Stickers.StickerFormatType.Lottie">
            <summary>
            Sticker format type LOTTIE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Stickers.StickerFormatType.Gif">
            <summary>
            Sticker format type GIF
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Stickers.StickerType">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/sticker#sticker-types">Sticker Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Stickers.StickerType.Standard">
            <summary>
            An official sticker in a pack, part of Nitro or in a removed purchasable pack
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Stickers.StickerType.Guild">
            <summary>
            A sticker uploaded to a guild for the guild's members
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Teams.DiscordTeam">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/topics/teams#data-models-team-object">Team Object</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.DiscordTeam.Id">
            <summary>
            The unique id of the team
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.DiscordTeam.Icon">
            <summary>
            A hash of the image of the team's icon
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.DiscordTeam.Members">
            <summary>
            The members of the team
            See <see cref="T:Oxide.Ext.Discord.Entities.Teams.TeamMember"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.DiscordTeam.Name">
            <summary>
             The name of the team
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.DiscordTeam.OwnerUserId">
            <summary>
            The user id of the current team owner
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.DiscordTeam.GetTeamIconUrl">
            <summary>
            Returns the url for the team icon
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Teams.TeamMember">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/teams#data-models-team-members-object">Team Members Object</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.TeamMember.MembershipState">
            <summary>
            The user's membership state on the team
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.TeamMember.Permissions">
            <summary>
            The teams permissions
            Will always be ["*"]
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.TeamMember.TeamId">
            <summary>
            The id of the parent team of which they are a member
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.TeamMember.User">
            <summary>
            The avatar, discriminator, id, and username of the user
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Teams.TeamMembershipState">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/teams#data-models-membership-state-enum">Membership State Enum</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Teams.TeamMembershipState.Invited">
            <summary>
            If the user has been invited
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Teams.TeamMembershipState.Accepted">
            <summary>
            If the is part of the team
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.Connections.Connection">
            <summary>
            Represents a Discord Users <a href="https://discord.com/developers/docs/resources/user#connection-object">Connection</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.Id">
            <summary>
            ID of the connection account
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.Name">
            <summary>
            The username of the connection account
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.Type">
            <summary>
            The service of the connection (twitch, youtube)
            <see cref="T:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.Revoked">
            <summary>
            Whether the connection is revoked
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.Integrations">
            <summary>
            An array of partial server integrations
            <see cref="T:Oxide.Ext.Discord.Entities.Integrations.Integration"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.Verified">
            <summary>
            Whether the connection is verified
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.FriendSync">
            <summary>
            Whether friend sync is enabled for this connection
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.TwoWayLink">
            <summary>
            Whether this connection has a corresponding third party OAuth2 token
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.ShowActivity">
            <summary>
            Whether activities related to this connection will be shown in presence updates
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.Visibility">
            <summary>
            Visibility of this connection
            <see cref="T:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionVisibilityType"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/user#connection-object-connection-structure">Connection Type</a> for a connection
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.Unknown">
            <summary>
            Discord Extension doesn't currently support this connection type
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.BattleNet">
            <summary>
            Connection type is Battle.net
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.eBay">
            <summary>
            Connection type is Epic Games
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.EpicGames">
            <summary>
            Connection type is Epic Games
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.Facebook">
            <summary>
            Connection type is Facebook
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.GitHub">
            <summary>
            Connection type is GitHub
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.Instagram">
            <summary>
            Connection type is Instagram
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.PayPal">
            <summary>
            Connection type is League of Legends
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.LeagueOfLegends">
            <summary>
            Connection type is League of Legends
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.PlayStationNetwork">
            <summary>
            Connection type is PlayStation Network
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.Reddit">
            <summary>
            Connection type is Reddit
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.RiotGames">
            <summary>
            Connection type is Reddit
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.Spotify">
            <summary>
            Connection type is Spotify
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.Skype">
            <summary>
            Connection type is Skype
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.Steam">
            <summary>
            Connection type is Steam
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.TikTok">
            <summary>
            Connection type is TikTok
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.Twitch">
            <summary>
            Connection type is Twitch
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.Twitter">
            <summary>
            Connection type is Twitter
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.Xbox">
            <summary>
            Connection type is Xbox
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.Youtube">
            <summary>
            Connection type is Youtube
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionVisibilityType">
            <summary>
            Represents connection <a href="https://discord.com/developers/docs/resources/user#connection-object-visibility-types">Visibility Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionVisibilityType.None">
            <summary>
            Invisible to everyone except the user themselves
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionVisibilityType.Everyone">
            <summary>
            Visible to everyone
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.DiscordUser">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/user#user-object">User Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Id">
            <summary>
            The user's id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Username">
            <summary>
            The user's username, not unique across the platform
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.GlobalName">
            <summary>
            The user's global name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Discriminator">
            <summary>
            The user's 4-digit discord-tag
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Avatar">
            <summary>
            The user's avatar hash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Bot">
            <summary>
            Whether the user belongs to an OAuth2 application
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.System">
            <summary>
            Whether the user is an Official Discord System user (part of the urgent message system)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.MfaEnabled">
            <summary>
            Whether the user has two factor enabled on their account
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Banner">
            <summary>
            The user's banner, or null if unset
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.AccentColor">
            <summary>
            The user's banner color encoded as an integer representation of hexadecimal color code
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Locale">
            <summary>
            The user's chosen language option
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Verified">
            <summary>
            Whether the email on this account has been verified
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Email">
            <summary>
            The user's email
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Flags">
            <summary>
            The flags on a user's account
            <see cref="T:Oxide.Ext.Discord.Entities.Users.UserFlags"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.PremiumType">
            <summary>
            The type of Nitro subscription on a user's account
            <see cref="T:Oxide.Ext.Discord.Entities.Users.UserPremiumType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.PublicFlags">
            <summary>
            The public flags on a user's account
            <see cref="T:Oxide.Ext.Discord.Entities.Users.UserFlags"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Mention">
            <summary>
            Returns a string to mention this users nickname in a message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetDefaultAvatarUrl">
            <summary>
            Default Avatar Url for the User
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetAvatarUrl">
            <summary>
            Avatar Url for the user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetBannerUrl">
            <summary>
            Banner Url for the user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.FullUserName">
            <summary>
            Returns the username#discriminator for the user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.DisplayName">
            <summary>
            The display name for the user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.IsBot">
            <summary>
            Returns if the DiscordUser is a bot
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.IsSystem">
            <summary>
            Returns if the DiscordUser is a system user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.HasUpdatedUsername">
            <summary>
            Returns true if the user has upgraded their username to the new username format
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Player">
            <summary>
            Returns the IPlayer for the discord user if linked; null otherwise
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetCurrentUser(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns the currently logged in user account
            See <a href="https://discord.com/developers/docs/resources/user#get-current-user">Get Current User</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetUser(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns the user for the given user Id
            See <a href="https://discord.com/developers/docs/resources/user#get-user">Get User</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID to lookup</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.SendDirectMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Messages.MessageCreate)">
            <summary>
            Send a message to a user in a direct message channel
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Message to be created</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.SendDirectMessage(Oxide.Ext.Discord.Clients.DiscordClient,System.String)">
            <summary>
            Send a message to a user in a direct message channel
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Content of the message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.SendDirectMessage(Oxide.Ext.Discord.Clients.DiscordClient,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed})">
            <summary>
            Send a message to a user in a direct message channel
            </summary>
            <param name="client">Client to use</param>
            <param name="embeds">Embeds to be send in the message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.SendTemplateDirectMessage(Oxide.Ext.Discord.Clients.DiscordClient,System.String,System.String,Oxide.Ext.Discord.Entities.Messages.MessageCreate,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Send a message in a DM to the user using a localized message template
            </summary>
            <param name="client">Client to use</param>
            <param name="templateName">Template Name</param>
            <param name="language">Oxide language to use</param>
            <param name="message">Message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.SendGlobalTemplateDirectMessage(Oxide.Ext.Discord.Clients.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Messages.MessageCreate,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Reply to a message using a global message template
            </summary>
            <param name="client">Client to use</param>
            <param name="templateName">Template Name</param>
            <param name="message">Message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.ModifyCurrentUser(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Users.UserModifyCurrent)">
            <summary>
            Modify the currently logged in user
            See <a href="https://discord.com/developers/docs/resources/user#modify-current-user">Modify Current User</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="current">The updated current user information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetCurrentUserGuilds(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Users.UserGuildsRequest)">
            <summary>
            Returns the guilds for the currently logged in user
            See <a href="https://discord.com/developers/docs/resources/user#get-current-user-guilds">Get Current User Guilds</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="request">Request parameters for filtering guilds</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.LeaveGuild(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Leave the guild that the currently logged in user is in
            See <a href="https://discord.com/developers/docs/resources/user#leave-guild">Leave Guild</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID to leave</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.CreateDirectMessageChannel(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Create a Direct Message to the current User
            See <a href="https://discord.com/developers/docs/resources/user#create-dm">Create DM</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.CreateDirectMessageChannel(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Create a Direct Message to the current User
            See <a href="https://discord.com/developers/docs/resources/user#create-dm">Create DM</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID to send the message to</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.CreateGroupDm(Oxide.Ext.Discord.Clients.DiscordClient,System.String[],Oxide.Plugins.Hash{Oxide.Ext.Discord.Entities.Snowflake,System.String})">
            <summary>
            Create a Group Direct Message
            </summary>
            <param name="client">Client to use</param>
            <param name="accessTokens">access tokens of users that have granted your app the gdm.join scope</param>
            <param name="nicks">a list of user ids to their respective nicknames</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetUserConnections(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns a list of connection objects.
            Requires the connections OAuth2 scope.
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GroupDmAddRecipient(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.DiscordChannel,System.String)">
            <summary>
            Adds a recipient to a Group DM using their access token
            See <a href="https://discord.com/developers/docs/resources/channel#group-dm-add-recipient">Group DM Add Recipient</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channel">Channel to add recipient to</param>
            <param name="accessToken">Users access token</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GroupDmAddRecipient(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.String,System.String)">
            <summary>
            Adds a recipient to a Group DM using their access token
            See <a href="https://discord.com/developers/docs/resources/channel#group-dm-add-recipient">Group DM Add Recipient</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to add user to</param>
            <param name="accessToken">Users access token</param>
            <param name="nick">User nickname</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GroupDmRemoveRecipient(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Channels.DiscordChannel)">
            <summary>
            Removes a recipient from a Group DM
            </summary>
            <param name="client">Client to use</param>
            <param name="channel">Channel to remove recipient from</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GroupDmRemoveRecipient(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Removes a recipient from a Group DM
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to remove recipient from</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.Update(Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            Updates the user data with the passed in user
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.UserFlags">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/user#user-object-user-flags">User Flags</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.None">
            <summary>
            Default value for flags, when none are given to an account.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.Staff">
            <summary>
            Flag given to users who are a Discord employee
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.Partner">
            <summary>
            Flag given to users who are owners of a partnered Discord server
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.HypeSquad">
            <summary>
            Flag given to users who are HypeSquad Events Member
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.BugHunterLevel1">
            <summary>
            Flag given to users who have participated in the 𝐁ug report program and are level 1.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.HypeSquadOnlineHouse1">
            <summary>
            Flag given to users who are in the HypeSquad House of Bravery.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.HypeSquadOnlineHouse2">
            <summary>
            Flag given to users who are in the HypeSquad House of Brilliance.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.HypeSquadOnlineHouse3">
            <summary>
            Flag given to users who are in the HypeSquad House of Balance.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.PremiumEarlySupporter">
            <summary>
            Flag given to users who subscribed to Nitro before games were added.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.TeamPseudoUser">
            <summary>
            Flag given to users who are part of a team.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.BugHunterLevel2">
            <summary>
            Flag given to users who have participated in the 𝐁ug report program and are level 2.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.VerifiedBot">
            <summary>
            Flag given to users who are verified bots.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.VerifiedDeveloper">
            <summary>
            Flag given to users that developed bots and early verified their accounts.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.CertifiedModerator">
            <summary>
            Flag given to users that are Moderator Programs Alumni
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.BotHttpInteractions">
            <summary>
            User is a Bot uses only HTTP interactions and is shown in the online member list
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.ActiveDeveloper">
            <summary>
            User is an <a href="https://support-dev.discord.com/hc/articles/10113997751447">Active Developer</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.DiscordEmployee">
            <summary>
            Flag given to users who are a Discord employee.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.PartneredServerOwner">
            <summary>
            Flag given to users who are owners of a partnered Discord server.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.HyperSquadEvents">
            <summary>
            Flag given to users in HypeSquad events.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.HouseBravery">
            <summary>
            Flag given to users who are in the HypeSquad House of Bravery.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.HouseBrilliance">
            <summary>
            Flag given to users who are in the HypeSquad House of Brilliance.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.HouseBalance">
            <summary>
            Flag given to users who are in the HypeSquad House of Balance.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.EarlySupporter">
            <summary>
            Flag given to users who subscribed to Nitro before games were added.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.TeamUser">
            <summary>
            Flag given to users who are part of a team.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.EarlyVerifiedBotDeveloper">
            <summary>
             Flag given to users that developed bots and early verified their accounts.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.DiscordCertifiedModerator">
            <summary>
            Flag given to users that are discord certified moderators
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.UserGuildsRequest">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/user#get-current-user-guilds-query-string-params">Users Guild Request</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.UserGuildsRequest.Before">
            <summary>
            Get guilds before this guild ID
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.UserGuildsRequest.After">
            <summary>
            Get guilds after this guild ID
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.UserGuildsRequest.Limit">
            <summary>
            Max number of guilds to return (1-200)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.UserGuildsRequest.ToQueryString">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.UserModifyCurrent">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/user#modify-current-user-json-params">Modify Current User Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.UserModifyCurrent.Username">
            <summary>
            User's username, if changed may cause the user's discriminator to be randomized.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.UserModifyCurrent.Avatar">
            <summary>
            If passed, modifies the user's avatar
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.UserModifyCurrent.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.UserPremiumType">
            <summary>
            Represents Discord User <a href="https://discord.com/developers/docs/resources/user#user-object-premium-types">Premium Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserPremiumType.None">
            <summary>
            User has no premium
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserPremiumType.NitroClassic">
            <summary>
            User has nitro classic premium
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserPremiumType.Nitro">
            <summary>
            User has nitro premium
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserPremiumType.NitroBasic">
            <summary>
            User has nitro basic
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.UserStatusType">
            <summary>
            Represents Discord User <a href="https://discord.com/developers/docs/topics/gateway#update-status-status-types">Status Types</a> 
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserStatusType.Online">
            <summary>
            User is online
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserStatusType.Dnd">
            <summary>
            User has Do Not Disturb
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserStatusType.Idle">
            <summary>
            User is idle
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserStatusType.Invisible">
            <summary>
            User is invisible
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserStatusType.Offline">
            <summary>
            User is offline
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Voice.VoiceRegion">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/voice#voice-region-object">Voice Region Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceRegion.Id">
            <summary>
            Unique ID for the region
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceRegion.Name">
            <summary>
            Name of the region
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceRegion.Vip">
            <summary>
            True if this is a vip-only server
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceRegion.Optimal">
            <summary>
            True for a single server that is closest to the current user's client
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceRegion.Deprecated">
            <summary>
            Whether this is a deprecated voice region (avoid switching to these)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceRegion.Custom">
            <summary>
            Whether this is a custom voice region (used for events/etc)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Voice.VoiceRegion.ListVoiceRegions(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Returns an array of voice region objects that can be used when creating servers.
            See <a href="https://discord.com/developers/docs/resources/voice#list-voice-regions">List Voice Regions</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Voice.VoiceState">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/voice#voice-state-object">Voice State Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.Id">
            <summary>
            User ID for the voice state
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.GuildId">
            <summary>
            The guild id this voice state is for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.ChannelId">
            <summary>
            The channel id this user is connected to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.UserId">
            <summary>
            The user id this voice state is for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.Member">
            <summary>
            The guild member this voice state is for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.SessionId">
            <summary>
            The session id for this voice state
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.Deaf">
            <summary>
            Whether this user is deafened by the server
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.Mute">
            <summary>
            Whether this user is muted by the server
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.SelfDeaf">
            <summary>
            Whether this user is locally deafened
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.SelfMute">
            <summary>
            Whether this user is locally muted
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.SelfStream">
            <summary>
            Whether this user is streaming using "Go Live"
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.SelfVideo">
            <summary>
            Whether this user's camera is enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.Suppress">
            <summary>
            whether this user's permission to speak is denied
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.RequestToSpeakTimestamp">
            <summary>
            Whether this user is muted by the current user
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/webhook#webhook-object">Webhook Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.Id">
            <summary>
            The id of the webhook
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.Type">
            <summary>
            The type of the webhook
            See <see cref="T:Oxide.Ext.Discord.Entities.Webhooks.WebhookType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.GuildId">
            <summary>
            The guild id this webhook is for, if any
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.ChannelId">
            <summary>
            The channel id this webhook is for, if any
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.User">
            <summary>
            The user this webhook was created by
            not returned when getting a webhook with its token
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.Name">
            <summary>
            The default name of the webhook
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.Avatar">
            <summary>
            the default user avatar hash of the webhook
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.Token">
            <summary>
            The secure token of the webhook
            returned for Incoming Webhooks
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.ApplicationId">
            <summary>
            The bot/OAuth2 application that created this webhook
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.SourceGuild">
            <summary>
            The guild of the channel that this webhook is following (returned for Channel Follower Webhooks)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.SourceChannel">
            <summary>
            The channel that this webhook is following (returned for Channel Follower Webhooks)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.CreateWebhook(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Webhooks.WebhookCreate)">
            <summary>
            Create a new webhook.
            Requires the MANAGE_WEBHOOKS permission.
            See <a href="https://discord.com/developers/docs/resources/webhook#create-webhook">Create Webhook</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID for the webhook</param>
            <param name="create">Webhook create request</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.GetChannelWebhooks(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns a list of channel webhook.
            See <a href="https://discord.com/developers/docs/resources/webhook#get-channel-webhooks">Get Channel Webhooks</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to get webhooks for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.GetGuildWebhooks(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns a list of guild webhooks
            See <a href="https://discord.com/developers/docs/resources/webhook#get-guild-webhooks">Get Guild Webhooks</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID to get webhooks for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.GetWebhook(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns the webhook with the given webhook ID
            See <a href="https://discord.com/developers/docs/resources/webhook#get-webhook">Get Webhook</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="webhookId">Webhook ID to get</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.GetWebhookWithToken(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.String)">
            <summary>
            Returns the webhook with the given ID &amp; Token
            This call does not required authentication
            No user is returned in webhook object
            See <a href="https://discord.com/developers/docs/resources/webhook#get-webhook-with-token">Get Webhook with Token</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="webhookId">Webhook ID to get</param>
            <param name="webhookToken">Webhook Token</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.GetWebhookWithUrl(Oxide.Ext.Discord.Clients.DiscordClient,System.String)">
            <summary>
            Returns the webhook with the given ID &amp; Token
            This call does not required authentication
            No user is returned in webhook object
            See <a href="https://discord.com/developers/docs/resources/webhook#get-webhook-with-token">Get Webhook with Token</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="webhookUrl">Returns the webhook for the specified URL</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.EditWebhook(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Webhooks.WebhookEdit)">
            <summary>
            Modify a webhook.
            Requires the MANAGE_WEBHOOKS permission.
            See <a href="https://discord.com/developers/docs/resources/webhook#modify-webhook">Modify Webhook</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="edit">Edit request for the webhook</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.ModifyWebhookWithToken(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Webhooks.WebhookEdit)">
            <summary>
            Modify a webhook.
            Requires the MANAGE_WEBHOOKS permission.
            See <a href="https://discord.com/developers/docs/resources/webhook#modify-webhook-with-token">Modify Webhook with Token</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="edit">Edit request for the webhook</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.DeleteWebhook(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Delete a webhook permanently.
            Requires the MANAGE_WEBHOOKS permission.
            See <a href="https://discord.com/developers/docs/resources/webhook#delete-webhook">Delete Webhook</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.DeleteWebhookWithToken(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Delete a webhook permanently.
            Does not require authentication.
            See <a href="https://discord.com/developers/docs/resources/webhook#delete-webhook-with-token">Delete Webhook with Token</a>
            </summary>
            <param name="client">Client to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.ExecuteWebhook(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage,Oxide.Ext.Discord.Entities.Webhooks.WebhookExecuteParams)">
            <summary>
            Executes a webhook
            See <a href="https://discord.com/developers/docs/resources/webhook#execute-webhook">Execute Webhook</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Message data</param>
            <param name="executeParams">Webhook execution parameters</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.ExecuteWebhook(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Builders.Messages.WebhookMessageBuilder,Oxide.Ext.Discord.Entities.Webhooks.WebhookExecuteParams)">
            <summary>
            Executes a webhook
            See <a href="https://discord.com/developers/docs/resources/webhook#execute-webhook">Execute Webhook</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="builder">Builder for the message</param>
            <param name="executeParams">Webhook execution parameters</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.ExecuteWebhookWithMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage,Oxide.Ext.Discord.Entities.Webhooks.WebhookExecuteParams)">
            <summary>
            Executes a webhook
            See <a href="https://discord.com/developers/docs/resources/webhook#execute-webhook">Execute Webhook</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Message data</param>
            <param name="executeParams">Webhook execution parameters</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.ExecuteWebhookWithMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Builders.Messages.WebhookMessageBuilder,Oxide.Ext.Discord.Entities.Webhooks.WebhookExecuteParams)">
            <summary>
            Executes a webhook
            See <a href="https://discord.com/developers/docs/resources/webhook#execute-webhook">Execute Webhook</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="builder">Builder for the message</param>
            <param name="executeParams">Webhook execution parameters</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.ExecuteWebhookGlobalTemplate(Oxide.Ext.Discord.Clients.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData,Oxide.Ext.Discord.Entities.Webhooks.WebhookExecuteParams)">
            <summary>
            Send a message to a webhook using a global message template
            </summary>
            <param name="client">Client to use</param>
            <param name="templateName">Template Name</param>
            <param name="message">Message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
            <param name="executeParams">Webhook execution parameters</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.ExecuteWebhookTemplate(Oxide.Ext.Discord.Clients.DiscordClient,System.String,System.String,Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData,Oxide.Ext.Discord.Entities.Webhooks.WebhookExecuteParams)">
            <summary>
            Send a message to a webhook using a localized message template
            </summary>
            <param name="client">Client to use</param>
            <param name="templateName">Template Name</param>
            <param name="language">Oxide language to use</param>
            <param name="message">Message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
            <param name="executeParams">Webhook execution parameters</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.GetWebhookMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Webhooks.WebhookMessageParams)">
            <summary>
            Gets a previously-sent webhook message from the same token.
            See <a href="https://discord.com/developers/docs/resources/webhook#get-webhook-message">Edit Webhook Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="messageId">Message ID to get</param>
            <param name="messageParams">Message Params</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.EditWebhookMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Messages.DiscordMessage,Oxide.Ext.Discord.Entities.Webhooks.WebhookMessageParams)">
            <summary>
            Edits a previously-sent webhook message from the same token.
            See <a href="https://discord.com/developers/docs/resources/webhook#edit-webhook-message">Edit Webhook Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="messageId">Message ID to edit</param>
            <param name="messageParams">Message Params</param>
            <param name="message">The updated message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.EditWebhookMessageGlobalTemplate(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Core.Plugins.Plugin,System.String,Oxide.Ext.Discord.Entities.Messages.DiscordMessage,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData,Oxide.Ext.Discord.Entities.Webhooks.WebhookMessageParams)">
            <summary>
            Edit a message from a webhook using a global message template
            </summary>
            <param name="client">Client to use</param>
            <param name="messageId">Message ID of the message to edit</param>
            <param name="plugin">Plugin for the template</param>
            <param name="templateName">Template Name</param>
            <param name="message">Message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
            <param name="messageParams">Message Params</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.EditWebhookMessageTemplate(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Core.Plugins.Plugin,System.String,System.String,Oxide.Ext.Discord.Entities.Messages.DiscordMessage,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData,Oxide.Ext.Discord.Entities.Webhooks.WebhookMessageParams)">
            <summary>
            Edit a message from a webhook using a localized message template
            </summary>
            <param name="client">Client to use</param>
            <param name="messageId">Message ID of the message to edit</param>
            <param name="plugin">Plugin for the template</param>
            <param name="templateName">Template Name</param>
            <param name="language">Oxide language to use</param>
            <param name="message">Message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
            <param name="messageParams">Message Params</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.DiscordWebhook.DeleteWebhookMessage(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Deletes a message that was created by the webhook.
            </summary>
            <param name="client">Client to use</param>
            <param name="messageId">Message ID to delete</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Webhooks.WebhookCreate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/webhook#create-webhook-json-params">Webhook Create Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookCreate.Name">
            <summary>
            Name of the webhook (1-80 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookCreate.Avatar">
            <summary>
            Image for the default webhook avatar
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.WebhookCreate.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/webhook#execute-webhook-jsonform-params">Webhook Create Message</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage.Username">
            <summary>
            Override the default username of the webhook
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage.AvatarUrl">
            <summary>
            Override the default avatar of the webhook
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage.ThreadName">
            <summary>
            Name of thread to create
            Requires the webhook channel to be a forum channel
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage.ValidateFlags">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Webhooks.WebhookEdit">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/webhook#create-webhook-json-params">Webhook Create Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookEdit.Name">
            <summary>
            Name of the webhook (1-80 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookEdit.Avatar">
            <summary>
            Image for the default webhook avatar
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookEdit.ChannelId">
            <summary>
            Channel ID of the webhook
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.WebhookEdit.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/webhook#edit-webhook-message-jsonform-params">Webhook Edit Message Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage.Content">
            <summary>
            The message contents (up to 2000 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage.Embeds">
            <summary>
            Embedded rich content (Up to 10 embeds)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage.AllowedMentions">
            <summary>
            Allowed mentions for the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage.Components">
            <summary>
            Components to include with the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage.Attachments">
            <summary>
            Attachments for the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage.FileAttachments">
            <summary>
            Attachments for a discord message
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage.AddEmbed(Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed)">
            <summary>
            Adds a new embed to the list of embed to send
            </summary>
            <param name="embed">Embed to add</param>
            <returns>This</returns>
            <exception cref="T:System.IndexOutOfRangeException">Thrown if more than 10 embeds are added in a send as that is the discord limit</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage.AddAttachment(System.String,System.Byte[],System.String,System.String)">
            <summary>
            Adds an attachment to the message
            </summary>
            <param name="filename">Name of the file</param>
            <param name="data">byte[] of the attachment</param>
            <param name="contentType">Attachment content type</param>
            <param name="description">Description for the attachment</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage.Validate">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Webhooks.WebhookExecuteParams">
            <summary>
            Represents parameters to execute a webhook
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookExecuteParams.SendType">
            <summary>
            Which type of webhook are we trying to send (Discord, Slack, Github)
            Defaults to Discord
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookExecuteParams.Wait">
            <summary>
            Should we wait for a webhook to return a message or is this a fire and forget.
            Not settable by devs as it's controlled by which method is called
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookExecuteParams.ThreadId">
            <summary>
            If you're sending a message to a thread instead of a channel put the ID of the thread here.
            This field is optional and defaults to null
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.WebhookExecuteParams.ToQueryString">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.WebhookExecuteParams.GetWebhookFormat">
            <summary>
            Returns the URL formatting for the webhook type
            </summary>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Webhooks.WebhookMessageParams">
            <summary>
            Represents webhook message query string parameters 
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookMessageParams.ThreadId">
            <summary>
            If the message exists in a thread
            This field is optional and defaults to null
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.WebhookMessageParams.ToQueryString">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Webhooks.WebhookSendType">
            <summary>
            Use to control which webhook execute url to call
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Webhooks.WebhookSendType.Discord">
            <summary>
            Webhook is for Discord
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Webhooks.WebhookSendType.Slack">
            <summary>
            Webhook is for slack
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Webhooks.WebhookSendType.Github">
            <summary>
            Webhook is for github
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Webhooks.WebhookType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/webhook#webhook-object-webhook-types">Webhook Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Webhooks.WebhookType.Incoming">
            <summary>
            Incoming Webhooks can post messages to channels with a generated token
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Webhooks.WebhookType.ChannelFollower">
            <summary>
            Channel Follower Webhooks are internal webhooks used with Channel Following to post new messages into channels
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.BaseDiscordException">
            <summary>
            Represents a base discord extension
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Exceptions.BaseDiscordException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Exceptions.BaseDiscordException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Builders.ApplicationCommandBuilderException">
            <summary>
            Represents an error when building Application Commands
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Builders.InteractionResponseBuilderException">
            <summary>
            Represents an Interaction Response Builder Exception
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Builders.MessageComponentBuilderException">
            <summary>
            Represents an exception in Message Component Builder
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.DiscordClientException">
            <summary>
            Exceptions for the <see cref="T:Oxide.Ext.Discord.Clients.DiscordClient"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Applications.ApplicationRoleConnectionMetadataException">
            <summary>
            Exceptions for <see cref="T:Oxide.Ext.Discord.Entities.Applications.RoleConnection.ApplicationRoleConnectionMetadata"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Applications.DiscordApplicationException">
            <summary>
            Exceptions for <see cref="T:Oxide.Ext.Discord.Entities.Applications.DiscordApplication"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.AutoMod.AutoModTriggerMetadataException">
            <summary>
            Exceptions for <see cref="T:Oxide.Ext.Discord.Entities.AutoMod.AutoModTriggerMetadata"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Channels.InvalidChannelException">
            <summary>
            Represents using an invalid channel
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Channels.InvalidChannelInviteException">
            <summary>
            Represents an error in channel invite
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Channels.InvalidForumTagException">
            <summary>
            Represents an exception for channel threads
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Channels.InvalidThreadException">
            <summary>
            Represents an exception for channel threads
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Emojis.InvalidEmojiException">
            <summary>
            Error thrown when an emoji string fails validation
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Exceptions.Entities.Emojis.InvalidEmojiException.EmojiValidation">
            <summary>
            Regex emoji validation matching discord emoji formatting standards
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Guild.InvalidGuildBanException">
            <summary>
            Represents an error in channel ban
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Guild.InvalidGuildException">
            <summary>
            Represents an exception in guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Guild.InvalidGuildListMembersException">
            <summary>
            Represents an exception in guid list request
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Guild.InvalidGuildMemberException">
            <summary>
            Represents an exception in guild member
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Guild.InvalidGuildPruneException">
            <summary>
            Represents an exception in guild prune requests
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Guild.InvalidGuildRoleException">
            <summary>
            Represents an exception for invalid guild roles
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Guild.InvalidGuildSearchMembersException">
            <summary>
            Represents an exception in guild member search requests
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Guild.ScheduledEvents.InvalidGuildScheduledEventException">
            <summary>
            Represents an exception in guild scheduled events
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Guild.ScheduledEvents.InvalidGuildScheduledEventLookupException">
            <summary>
            Represents an exception in guild schedule event lookup requests
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Images.InvalidImageDataException">
            <summary>
            Represents an exception in discord image data
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Interactions.ApplicationCommands.InvalidApplicationCommandException">
            <summary>
            Represents an invalid application command
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Exceptions.Entities.Interactions.ApplicationCommands.InvalidApplicationCommandException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Interactions.ApplicationCommands.InvalidCommandOptionChoiceException">
            <summary>
            Represents an error in application command option choice
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Interactions.ApplicationCommands.InvalidCommandOptionException">
            <summary>
            Represents an error in application command option
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Interactions.InteractionArgException">
            <summary>
            Represents an error when an interaction arg does not match the requested type
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Interactions.InvalidAutoCompleteChoiceException">
            <summary>
            Exception for invalid Auto Complete choices
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Exceptions.Entities.Interactions.InvalidAutoCompleteChoiceException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Interactions.InvalidInteractionResponseException">
            <summary>
            Error thrown when an interaction response is invalid
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Exceptions.Entities.Interactions.InvalidInteractionResponseException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Interactions.MessageComponents.InvalidMessageComponentException">
            <summary>
            Represents an invalid message component
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Exceptions.Entities.Interactions.MessageComponents.InvalidMessageComponentException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Interactions.MessageComponents.InvalidSelectMenuComponentException">
            <summary>
            Represents an exception for select menu components
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.InvalidSnowflakeException">
            <summary>
            Exception thrown when an invalid Snowflake ID is used in an API call
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Exceptions.Entities.InvalidSnowflakeException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Messages.InvalidEmbedException">
            <summary>
            Represents an invalid embed
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Exceptions.Entities.Messages.InvalidEmbedException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Messages.InvalidFileNameException">
            <summary>
            Exception throw when an attachment filename contains invalid characters
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Exceptions.Entities.Messages.InvalidFileNameException.FilenameValidation">
            <summary>
            Regex file name validation ensuring filenames are valid
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Exceptions.Entities.Messages.InvalidFileNameException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="fileName">invalid file name</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Messages.InvalidMessageException">
            <summary>
            Represents an invalid message
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Exceptions.Entities.Messages.InvalidMessageException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Exceptions.Entities.Messages.InvalidMessageException.#ctor(System.String,Oxide.Ext.Discord.Entities.Messages.BaseMessageCreate)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="create">Message Create that caused the error</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Permissions.InvalidDiscordColorException">
            <summary>
            Represents an invalid discord color
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Exceptions.Entities.Permissions.InvalidDiscordColorException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Stickers.InvalidGuildStickerException">
            <summary>
            Represents an exception in guild stickers
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Users.BlockedUserException">
            <summary>
            Exception when a user has blocked receving messages from a bot
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Exceptions.Entities.Users.BlockedUserException.User">
            <summary>
            User who has blocked messages
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Exceptions.Entities.Users.BlockedUserException.BlockedUntil">
            <summary>
            Time until we try sending a message again
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Users.InvalidUserException">
            <summary>
            Represents an exception when modifying a user with invalid data
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Exceptions.Entities.Users.InvalidUserException.InvalidUserNameCharacters">
            <summary>
            Invalid username characters
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Exceptions.Entities.Users.InvalidUserException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error Message</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Webhooks.InvalidWebhookException">
            <summary>
            Represents a Webhook Create Exception
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Exceptions.Entities.Webhooks.InvalidWebhookException.InvalidUserNameCharacters">
            <summary>
            Invalid username characters
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Exceptions.Entities.Webhooks.InvalidWebhookException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error Message</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Entities.Websocket.DiscordWebSocketException">
            <summary>
            Represents an exception that occured with the websocket
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Libraries.DiscordLocale.DiscordLocaleNotFoundException">
            <summary>
            Exception thrown when Discord Locale is not found
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Libraries.DiscordLocale.ServerLocaleNotFoundException">
            <summary>
            Exception thrown when Server Locale is not found
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Libraries.DiscordTemplateException">
            <summary>
            Exception for Discord Templates
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Pooling.InvalidPoolException">
            <summary>
            An exception when something is invalid with a pool
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Promise.PromiseCancelledException">
            <summary>
            Exception when a promised is cancelled
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Exceptions.Promise.PromiseCancelledException.#ctor(System.String)">
            <summary>
            Create the exception with description
            </summary>
            <param name="message">Exception description</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.Promise.PromiseException">
            <summary>
            Exceptions for promises
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Exceptions.TokenMismatchException">
            <summary>
            Represents a bot token mismatch
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.ConcurrentDictionaryExt">
            <summary>
            Extension for <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.ConcurrentDictionaryExt.RemoveAll``2(System.Collections.Concurrent.ConcurrentDictionary{``0,``1},System.Func{``0,System.Boolean})">
            <summary>
            Remove all records from the dictionary with the given predicate filter
            </summary>
            <param name="dic">dictionary to have data removed from</param>
            <param name="predicate">Filter of which values to remove</param>
            <typeparam name="TKey">Key type of the dictionary</typeparam>
            <typeparam name="TValue">Value type of the dictionary</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.ConcurrentDictionaryExt.RemoveAll``2(System.Collections.Concurrent.ConcurrentDictionary{``0,``1},System.Func{``1,System.Boolean},System.Action{``1})">
            <summary>
            Remove all records from the dictionary with the given predicate filter
            </summary>
            <param name="dic">Dictionary to have data removed from</param>
            <param name="predicate">Filter of which values to remove</param>
            <param name="onRemove">Action to call when an element is removed</param>
            <typeparam name="TKey">Key type of the dictionary</typeparam>
            <typeparam name="TValue">Value type of the dictionary</typeparam>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.DiscordColorExt">
            <summary>
            Extensions for Discord Color
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.DiscordColorExt.ToHex(Oxide.Ext.Discord.Entities.DiscordColor)">
            <summary>
            Returns the color as a hex color code
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.DiscordUserExt">
            <summary>
            Adds extension methods to Discord User to allow sending server chat commands to the player
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.DiscordUserExt.SendChatMessage(Oxide.Ext.Discord.Entities.Users.DiscordUser,System.String)">
            <summary>
            Send chat message to the user if they're connected
            </summary>
            <param name="user">User to send the message to on the server</param>
            <param name="message">Message to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.DiscordUserExt.SendChatMessage(Oxide.Ext.Discord.Entities.Users.DiscordUser,System.String,System.String,System.Object[])">
            <summary>
            Send chat message to the user if they're connected
            </summary>
            <param name="user">User to send the message to on the server</param>
            <param name="message">Message to send</param>
            <param name="prefix">Message Prefix</param>
            <param name="args">Message Args</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.DiscordUserExt.HasPermission(Oxide.Ext.Discord.Entities.Users.DiscordUser,System.String)">
            <summary>
            Return if the discord user has the given oxide permission.
            If the user is not linked this will return false
            </summary>
            <param name="user">User to check for permission</param>
            <param name="permission">Permission to check for</param>
            <returns>True if use is linked and has permission; False otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.DiscordUserExt.IsLinked(Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            Returns true if the player is linked
            </summary>
            <param name="user">Discord user to check if they're linked</param>
            <returns>True if linked; False otherwise</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.HashExt">
            <summary>
            Hash extensions
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.HashExt.RemoveAll``2(Oxide.Plugins.Hash{``0,``1},System.Func{``0,System.Boolean})">
            <summary>
            Remove all records from the hash with the given predicate filter
            </summary>
            <param name="hash">Hash to have data removed from</param>
            <param name="predicate">Filter of which values to remove</param>
            <typeparam name="TKey">Key type of the hash</typeparam>
            <typeparam name="TValue">Value type of the hash</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.HashExt.RemoveAll``2(Oxide.Plugins.Hash{``0,``1},System.Func{``1,System.Boolean},System.Action{``1})">
            <summary>
            Remove all records from the hash with the given predicate filter
            </summary>
            <param name="hash">Hash to have data removed from</param>
            <param name="predicate">Filter of which values to remove</param>
            <param name="onRemove">Action to call when an element is removed</param>
            <typeparam name="TKey">Key type of the hash</typeparam>
            <typeparam name="TValue">Value type of the hash</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.HashExt.Clone``2(Oxide.Plugins.Hash{``0,``1})">
            <summary>
            Creates a clone of a hash with it's current key value pairs
            </summary>
            <param name="hash">Hash to be copied</param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns>Copied Hash</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.IEnumerableExt">
            <summary>
            Represents Extension to IEnumerable
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.IEnumerableExt.ToPooledList``1(System.Collections.Generic.IEnumerable{``0},Oxide.Ext.Discord.Pooling.DiscordPluginPool)">
            <summary>
            Converts an IEnumerable{TSource} to a pooled List
            </summary>
            <param name="source">IEnumerable to convert</param>
            <param name="pluginPool">The <see cref="T:Oxide.Ext.Discord.Pooling.DiscordPluginPool"/> to pool from</param>
            <typeparam name="TSource">Type of the list</typeparam>
            <returns>Pooled List{TSource}</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if source is null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.IEnumerableExt.ToHash``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            Converts an IEnumerable{TSource} to a Hash{TKey, TElement}
            </summary>
            <param name="source">IEnumerable to convert</param>
            <param name="keySelector">Selector for the key</param>
            <param name="elementSelector">Selector for the value</param>
            <typeparam name="TSource">Type of the source</typeparam>
            <typeparam name="TKey">Key type for the hash</typeparam>
            <typeparam name="TElement">Value type for the hash</typeparam>
            <returns>Pooled Hash{TKey, TElement}</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if source is null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.IEnumerableExt.ToPooledHash``3(System.Collections.Generic.IEnumerable{``0},Oxide.Ext.Discord.Pooling.DiscordPluginPool,System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            Converts an IEnumerable{TSource} to a pooled Hash{TKey, TElement}
            </summary>
            <param name="source">IEnumerable to convert</param>
            <param name="pluginPool">The <see cref="T:Oxide.Ext.Discord.Pooling.DiscordPluginPool"/> to pool from</param>
            <param name="keySelector">Selector for the key</param>
            <param name="elementSelector">Selector for the value</param>
            <typeparam name="TSource">Type of the source</typeparam>
            <typeparam name="TKey">Key type for the hash</typeparam>
            <typeparam name="TElement">Value type for the hash</typeparam>
            <returns>Pooled Hash{TKey, TElement}</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if source is null</exception>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.MathExt">
            <summary>
            Extensions for math operations
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.MathExt.Clamp``1(``0,``0,``0)">
            <summary>
            Returns the value of {T} clamped between min and max value
            </summary>
            <param name="val">Value to be clamped</param>
            <param name="min">Min value</param>
            <param name="max">Max Value</param>
            <typeparam name="T">Type to be clamped</typeparam>
            <returns>Value of {T} clamped between min and max</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.MathExt.Min``1(``0,``0)">
            <summary>
            Returns the min value between left and right
            </summary>
            <param name="left">Left argument</param>
            <param name="right">Right argument</param>
            <typeparam name="T">Type of IComparable{T}</typeparam>
            <returns>Left if less than or equal to right else right</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.MathExt.Max``1(``0,``0)">
            <summary>
            Returns the Max value between left and right
            </summary>
            <param name="left">Left argument</param>
            <param name="right">Right argument</param>
            <typeparam name="T">Type of IComparable{T}</typeparam>
            <returns>Left if greater than or equal to right else right</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.PlayerExt">
            <summary>
            IPlayer Extensions for sending Discord Message to an IPlayer
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.PlayerExt.SendDiscordMessage(Oxide.Core.Libraries.Covalence.IPlayer,Oxide.Ext.Discord.Clients.DiscordClient,System.String)">
            <summary>
            Send a Discord Message to an IPlayer if they're registered
            </summary>
            <param name="player">Player to send the discord message to</param>
            <param name="client">Client to use for sending the message</param>
            <param name="message">Message to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.PlayerExt.SendDiscordMessage(Oxide.Core.Libraries.Covalence.IPlayer,Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed)">
            <summary>
            Send a Discord Message to an IPlayer if they're registered
            </summary>
            <param name="player">Player to send the discord message to</param>
            <param name="client">Client to use for sending the message</param>
            <param name="embed">Embed to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.PlayerExt.SendDiscordMessage(Oxide.Core.Libraries.Covalence.IPlayer,Oxide.Ext.Discord.Clients.DiscordClient,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed})">
            <summary>
            Send a Discord Message to an IPlayer if they're registered
            </summary>
            <param name="player">Player to send the discord message to</param>
            <param name="client">Client to use for sending the message</param>
            <param name="embeds">Embeds to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.PlayerExt.SendDiscordMessage(Oxide.Core.Libraries.Covalence.IPlayer,Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Messages.MessageCreate)">
            <summary>
            Send a Discord Message to an IPlayer if they're registered
            </summary>
            <param name="player">Player to send the discord message to</param>
            <param name="client">Client to use for sending the message</param>
            <param name="message">Message to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.PlayerExt.SendDiscordGlobalTemplateMessage(Oxide.Core.Libraries.Covalence.IPlayer,Oxide.Ext.Discord.Clients.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Messages.MessageCreate,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Send a message in a DM to the linked user using a global message template
            </summary>
            <param name="player">Player to send the message to</param>
            <param name="client">Client to use</param>
            <param name="templateName">Template Name</param>
            <param name="message">Message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.PlayerExt.SendDiscordTemplateMessage(Oxide.Core.Libraries.Covalence.IPlayer,Oxide.Ext.Discord.Clients.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Messages.MessageCreate,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Send a message in a DM to the linked user using a localized message template
            </summary>
            <param name="player">Player to send the message to</param>
            <param name="client">Client to use</param>
            <param name="templateName">Template Name</param>
            <param name="message">Message to use (optional)</param>
            <param name="placeholders">Placeholders to apply (optional)</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.PlayerExt.IsLinked(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Returns true if the player is linked
            </summary>
            <param name="player">Player to check if they're linked</param>
            <returns>True if linked; False otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.PlayerExt.GetDiscordUserId(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Returns the Discord ID of the IPlayer if linked
            </summary>
            <param name="player">Player to get Discord ID for</param>
            <returns>Discord ID if linked; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.PlayerExt.GetDiscordUser(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Returns a minimal Discord User for the given player
            </summary>
            <param name="player">Player to get Discord User for</param>
            <returns>Discord User if linked; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.PlayerExt.GetGuildMember(Oxide.Core.Libraries.Covalence.IPlayer,Oxide.Ext.Discord.Entities.Guilds.DiscordGuild)">
            <summary>
            Returns a minimal Guild Member for the given player
            </summary>
            <param name="player">Player to get Discord User for</param>
            <param name="guild">Guild the member is in</param>
            <returns>GuildMember if linked and in guild; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.PlayerExt.IsDummyPlayer(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Returns if the IPlayer is a <see cref="T:Oxide.Ext.Discord.Plugins.DiscordDummyPlayer"/>
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.PluginExt">
            <summary>
            Extension methods for plugins
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.StreamExt">
            <summary>
            Stream Extension Methods
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.StreamExt.CopyToPooled(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies one stream to another using a pooled byte[] buffer
            </summary>
            <param name="from">Stream to copy from</param>
            <param name="to">Stream to copy to</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.StringBuilderExt">
            <summary>
            StringBuilder extension methods
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.StringBuilderExt.Trim(System.Text.StringBuilder)">
            <summary>
            Trim empty space to the left and right of the StringBuilder
            </summary>
            <param name="sb">StringBuilder to trim</param>
            <returns>The passed in StringBuilder</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.StringExt">
            <summary>
            String Extension methods
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.StringExt.ParseCommand(System.String,System.String@,System.String[]@)">
            <summary>
            Parses the specified command into uMod command format
            Sourced from CommandHandler.cs of uMod (https://gitlab.com/umod/core/core/-/blob/develop/src/Command/CommandHandler.cs)
            </summary>
            <param name="argStr"></param>
            <param name="command"></param>
            <param name="args"></param>
        </member>
        <member name="F:Oxide.Ext.Discord.Extensions.ThreadEx.MainThreadId">
            <summary>
            Main thread
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Extensions.ThreadEx.IsMain">
            <summary>
            Determine if current thread is main thread
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.TypeExt">
            <summary>
            Extensions for <see cref="T:System.Type"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.TypeExt.IsNullable(System.Type)">
            <summary>
            Returns if the type is <see cref="T:System.Nullable"/>
            </summary>
            <param name="objectType">Type to check</param>
            <returns>True if type is <see cref="T:System.Nullable"/>; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.TypeExt.GetNullableType(System.Type)">
            <summary>
            Returns if the type is <see cref="T:System.Nullable"/>
            </summary>
            <param name="objectType">Type to check</param>
            <returns>True if type is <see cref="T:System.Nullable"/>; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.TypeExt.IsValueType(System.Type)">
            <summary>
            Returns if a type is a value type
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.TypeExt.GetDefault(System.Type)">
            <summary>
            Returns the default value for <see cref="T:System.Type"/>
            </summary>
            <param name="type">Type to get default value for</param>
            <returns>default value for <see cref="T:System.Type"/></returns>
        </member>
        <member name="F:Oxide.Ext.Discord.Factory.BotClientFactory._activeBots">
            <summary>
            List of active bots by bot API key
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Factory.BotClientFactory.InitializeBotClient(Oxide.Ext.Discord.Clients.DiscordClient)">
            <summary>
            Gets or creates a new bot client for the given discord client
            </summary>
            <param name="client">Client to use for creating / loading the bot client</param>
            <returns>Bot client that is created or already exists</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Factory.BucketIdFactory.GenerateId(Oxide.Core.Libraries.RequestMethod,System.String)">
            <summary>
            Returns the Rate Limit Bucket for the given route
            https://discord.com/developers/docs/topics/rate-limits#rate-limits
            </summary>
            <param name="method">Request method for the request</param>
            <param name="route">API Route</param>
            <returns>Bucket ID for route</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Factory.DiscordClientFactory">
            <summary>
            Factory for creating <see cref="T:Oxide.Ext.Discord.Clients.DiscordClient"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Factory.DiscordClientFactory.CreateClient(Oxide.Core.Plugins.Plugin)">
            <summary>
            Creates the client for the given plugin. If one already exist the existing one is returned
            </summary>
            <param name="plugin">Plugin the client is for</param>
            <returns>DiscordClient for plugin</returns>
            <exception cref="T:System.ArgumentNullException">Thrown is plugin is null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Factory.DiscordClientFactory.GetClient(Oxide.Core.Plugins.Plugin)">
            <summary>
            Gets the client for the given plugin
            </summary>
            <param name="plugin">Plugin to get client for</param>
            <returns>Discord client for the plugin</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Factory.DiscordClientFactory.GetClient(Oxide.Ext.Discord.Plugins.PluginId)">
            <summary>
            Gets the client for the given plugin
            </summary>
            <param name="pluginId">Plugin to get client for</param>
            <returns>Discord client for the plugin</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Factory.DiscordClientFactory.GetClient(System.String)">
            <summary>
            Gets the client for the given plugin name
            </summary>
            <param name="pluginName">Plugin Name to get client for</param>
            <returns>Discord client for the plugin name</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Factory.SnowflakeIdFactory">
            <summary>
            Generates a unique snowflake ID
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Factory.SnowflakeIdFactory.Generate">
            <summary>
            Returns the generated snowflake ID
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Helpers.DiscordCdn">
            <summary>
            Represents Discord <a href="https://discord.com/developers/docs/reference#image-formatting-cdn-endpoints">CDN Endpoints</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.DiscordCdn.CdnUrl">
            <summary>
            Base CDN Url
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetCustomEmojiUrl(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the Url to the custom emoji
            </summary>
            <param name="emojiId">ID of the emoji</param>
            <param name="format">The format the emoji is in</param>
            <returns>Url of the emoji</returns>
            <exception cref="T:System.ArgumentException">Thrown if format is Jpg or WebP</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetGuildIconUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the Url to the Guild Icon
            </summary>
            <param name="guildId">Guild ID for the icon</param>
            <param name="guildIcon">Guild Icon from guild</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the guild icon</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetGuildSplashUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the Url of the Guild Splash
            </summary>
            <param name="guildId">Guild ID for the icon</param>
            <param name="guildSplash">Guild Splash from guild</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the guild splash</returns>
            <exception cref="T:System.ArgumentException">Thrown if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetGuildDiscoverySplashUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Return the Url of the Guild Discovery Splash
            </summary>
            <param name="guildId">Guild ID for the icon</param>
            <param name="guildDiscoverySplash">Guild Discovery Splash from guild</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the guild discovery splash</returns>
            <exception cref="T:System.ArgumentException">Thrown if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetGuildBannerUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the Url of the Guild Banner
            </summary>
            <param name="guildId">Guild ID for the icon</param>
            <param name="guildBanner">Guild Banner from guild</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the guild banner</returns>
            <exception cref="T:System.ArgumentException">Thrown if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetUserBanner(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the Url of the User Banner
            </summary>
            <param name="userId">User ID for the Banner</param>
            <param name="userBanner">User Banner from user</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the User banner</returns>
            <exception cref="T:System.ArgumentException">Thrown if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetUserDefaultAvatarUrl(System.String)">
            <summary>
            Returns the Url of the users default avatar
            </summary>
            <param name="userDiscriminator">Discord User Discriminator</param>
            <returns>Url of the default avatar url</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetUserAvatarUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the Url of the users avatar
            </summary>
            <param name="userId">Discord User ID</param>
            <param name="userAvatar">User avatar from user</param>
            <param name="format">Format the avatar is in</param>
            <returns>Url of the users avatar</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetGuildMemberAvatar(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the Url of the Guild Member avatar
            </summary>
            <param name="guildId">Guild ID of the Guild Member</param>
            <param name="userId">Discord User ID</param>
            <param name="memberAvatar">Guild Member avatar</param>
            <param name="format">Format the avatar is in</param>
            <returns>Url of the Guild Member avatar</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetApplicationIconUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the url to the application icon
            </summary>
            <param name="applicationId">Application ID</param>
            <param name="icon">Icon field from application</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the application icon</returns>
            <exception cref="T:System.ArgumentException">Throw if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetApplicationCoverUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the url to the application cover
            </summary>
            <param name="applicationId">Application ID</param>
            <param name="coverImage">Icon field from application</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the application icon</returns>
            <exception cref="T:System.ArgumentException">Throw if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetApplicationAssetUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the applications asset icon url
            </summary>
            <param name="applicationId">Application ID of the icon</param>
            <param name="assetId">Asset ID for the application</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the application asset icon</returns>
            <exception cref="T:System.ArgumentException">Throw if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetAchievementIconUrl(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake,System.String)">
            <summary>
            Returns the Url of the Achievement Icon
            </summary>
            <param name="applicationId">Application ID of the icon</param>
            <param name="achievementId">Achievement ID</param>
            <param name="iconHash">Achievement Icon Hash</param>
            <returns>Url of the achievement icon</returns>
            <exception cref="T:System.ArgumentException">Throw if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetStorePageAssetUrl(Oxide.Ext.Discord.Entities.Snowflake,System.UInt64,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the Store Page Asset Url
            </summary>
            <param name="applicationId">Application ID of the icon</param>
            <param name="assetId">Asset ID</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the achievement icon</returns>
            <exception cref="T:System.ArgumentException">Throw if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetTeamIconUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the Url of the Team Icon
            </summary>
            <param name="teamId">Team ID of the Icon</param>
            <param name="teamIcon">Icon field from Team</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the achievement icon</returns>
            <exception cref="T:System.ArgumentException">Throw if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetStickerPackBanner(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the banner for a given sticker pack
            </summary>
            <param name="applicationId">Application ID for the stickers</param>
            <param name="bannerAssetId">Banner Asset ID for the stickers</param>
            <param name="format">Image Formatting for the banner</param>
            <returns>Url to the sticker pack banner</returns>
            <exception cref="T:System.ArgumentException">Thrown if image type is not PNG,JPEG, or WebP</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetSticker(Oxide.Ext.Discord.Entities.Stickers.DiscordSticker)">
            <summary>
            Returns the sticker url with the given ID
            </summary>
            <param name="sticker">Sticker to get the url for</param>
            <returns>Return url for the sticker</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetRoleIcon(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the sticker url with the given ID
            </summary>
            <param name="roleId">ID of the role</param>
            <param name="format">Format for the icon to be returned in</param>
            <returns>Return url for the role icon</returns>
            <exception cref="T:System.ArgumentException">Thrown if image type is not PNG or Lottie</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetGuildScheduledEventCover(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the guild schedule event cover icon with the given ID
            </summary>
            <param name="scheduledEventId">Scheduled Event ID</param>
            <param name="format">Format for the icon to be returned in</param>
            <returns>Return url for the guild schedule event cover icon</returns>
            <exception cref="T:System.ArgumentException">Thrown if image type is not PNG or Lottie</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetGuildMemberBanner(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Images.DiscordImageFormat)">
            <summary>
            Returns the guild member banner for the given guild / user ID
            </summary>
            <param name="guildId">Guild ID of the user</param>
            <param name="userId">User ID of the user</param>
            <param name="format">Format for the icon to be returned in</param>
            <returns>Return url for the guild member banner</returns>
            <exception cref="T:System.ArgumentException">Thrown if image type is not PNG or Lottie</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetChannelIcon(Oxide.Ext.Discord.Entities.Snowflake,System.String)">
            <summary>
            Returns the icon for a given channel
            </summary>
            <param name="channelId">Channel ID for the Icon</param>
            <param name="icon">Icon hash for the channel</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordCdn.GetExtension(Oxide.Ext.Discord.Entities.Images.DiscordImageFormat,System.String)">
            <summary>
            Returns the extension to use for the image
            </summary>
            <param name="format">Image format that is requested</param>
            <param name="image">Image data from the field</param>
            <returns>Image extension for the image format and image data</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if Image Format is out of range</exception>
        </member>
        <member name="T:Oxide.Ext.Discord.Helpers.DiscordFormatting">
            <summary>
            Represents <a href="https://discord.com/developers/docs/reference#message-formatting-formats">Message text formatting options</a>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.MentionUser(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Mention the user with the given user ID
            </summary>
            <param name="userId">User ID to mention</param>
            <returns>Mention user formatted string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.MentionChannel(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Mention the the channel with the given ID
            </summary>
            <param name="channelId">Channel ID to mention</param>
            <returns>Mention channel formatted string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.MentionRole(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Mention the the role with the given ID
            </summary>
            <param name="roleId">Role ID to mention</param>
            <returns>Mention role formatted string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.MentionApplicationCommand(Oxide.Ext.Discord.Entities.Snowflake,System.String,System.String,System.String)">
            <summary>
            Mention the the Application command
            </summary>
            <param name="commandId">Application Command ID</param>
            <param name="name">Name of the command</param>
            <param name="subCommand">Sub Command Name (Optional)</param>
            <param name="group">Sub Command Group (Optional)</param>
            <returns>Mentions the application command</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.MentionApplicationCommandCustom(Oxide.Ext.Discord.Entities.Snowflake,System.String)">
            <summary>
            Mention the application command using a custom command string
            </summary>
            <param name="commandId">Application Command ID</param>
            <param name="command">Custom Command String</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.EmojiMessageString(Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji)">
            <summary>
            Return the emoji string for a message
            </summary>
            <param name="emoji">Emoji to create as a string</param>
            <returns>Emoji message string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.CustomEmojiMessageString(Oxide.Ext.Discord.Entities.Snowflake,System.String,System.Boolean)">
            <summary>
            Returns formatting string for custom emoji to be used in a message
            </summary>
            <param name="name">Name of the custom emoji</param>
            <param name="id">ID of the custom emoji</param>
            <param name="animated">If the emoji is animated</param>
            <returns>Custom emoji formatted string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.CustomEmojiDataString(Oxide.Ext.Discord.Entities.Snowflake,System.String,System.Boolean)">
            <summary>
            Returns formatting string for custom emoji to be used in a url
            </summary>
            <param name="name">Name of the custom emoji</param>
            <param name="id">ID of the custom emoji</param>
            <param name="animated">If the emoji is animated</param>
            <returns>Custom emoji formatted string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.UnixTimestamp(System.DateTimeOffset,Oxide.Ext.Discord.Helpers.TimestampStyles)">
            <summary>
            Displays a timestamp 
            </summary>
            <param name="time">Time to display</param>
            <param name="style">Style of the timestamp</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.UnixTimestamp(System.Int64,Oxide.Ext.Discord.Helpers.TimestampStyles)">
            <summary>
            Displays a timestamp 
            </summary>
            <param name="timestamp">UNIX Timestamp</param>
            <param name="style">Display style for the timestamp</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.Italics(System.String)">
            <summary>
            Will display the message in italics
            </summary>
            <param name="message">Message to make italics</param>
            <returns>Italics formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.Bold(System.String)">
            <summary>
            Will display the message in bold
            </summary>
            <param name="message">Message to make bold</param>
            <returns>Bold formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.ItalicsBold(System.String)">
            <summary>
            Will display the message in italics and bold
            </summary>
            <param name="message">Message to make italics and bold</param>
            <returns>Bold and Italics formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.Underline(System.String)">
            <summary>
            Will display the message in underline
            </summary>
            <param name="message">Message to make underline</param>
            <returns>Underline formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.UnderlineItalics(System.String)">
            <summary>
            Will display the message in underline and italics
            </summary>
            <param name="message">Message to make underline and italics</param>
            <returns>Underline and Italics formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.UnderlineBold(System.String)">
            <summary>
            Will display the message in underline and bold
            </summary>
            <param name="message">Message to make underline and bold</param>
            <returns>Underline and bold formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.UnderlineBoldItalics(System.String)">
            <summary>
            Will display the message in underline and bold and italics
            </summary>
            <param name="message">Message to make underline and bold and italics</param>
            <returns>Underline and Bold and Italics formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.Strikethrough(System.String)">
            <summary>
            Will display the message with a strikethrough
            </summary>
            <param name="message">Message to make strikethrough</param>
            <returns>Strikethrough formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.CodeBlockOneLine(System.String)">
            <summary>
            Will display the message as a one line code block
            </summary>
            <param name="message">Message to make code block</param>
            <returns>Code block formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.CodeBlockMultiLine(System.String)">
            <summary>
            Will display the message as a multiline code block
            </summary>
            <param name="message">Message to make multiline code block</param>
            <returns>Code block formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.CodeBlockLanguage(System.String,System.String)">
            <summary>
            Will display a multiline code bloc with the specified language
            </summary>
            <param name="message">Message to make code block with language</param>
            <param name="language">Language to display the code block as</param>
            <returns>Language code block formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.BlockQuoteSingleLine(System.String)">
            <summary>
            Will display the message in single line block quote
            </summary>
            <param name="message">Message to make block quote</param>
            <returns>Block Quote formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.BlockQuoteMultiLine(System.String)">
            <summary>
            Will display the message in multiline block quote
            </summary>
            <param name="message">Message to make block quote</param>
            <returns>Multiline block quote formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.Spoiler(System.String)">
            <summary>
            Will display the text as a spoiler
            </summary>
            <param name="message">Message to make Spoiler</param>
            <returns>Spoiler message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.Header1(System.String)">
            <summary>
            Creates a Big Header
            </summary>
            <param name="header">text for the header</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.Header2(System.String)">
            <summary>
            Creates a Medium Header
            </summary>
            <param name="header">text for the header</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.Header3(System.String)">
            <summary>
            Creates a Small Header
            </summary>
            <param name="header">text for the header</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.MaskLink(System.String,System.String)">
            <summary>
            Creates a clickable link displayed as the mask text
            </summary>
            <param name="mask">Text to display the link as</param>
            <param name="url">Url for the link</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.List(System.String,System.Boolean)">
            <summary>
            Creates a list item for the given message
            </summary>
            <param name="message">Text for the list</param>
            <param name="indent">If the list should be indented a level</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.NumberedList(System.String,System.Int32,System.Boolean)">
            <summary>
            Creates a list item for the given message
            </summary>
            <param name="message">Text for the list</param>
            <param name="number">Number to display</param>
            <param name="indent">If the list should be indented a level</param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Helpers.TimeHelpers">
            <summary>
            Helper methods relating to time
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.TimeHelpers.SecondsSinceEpoch">
            <summary>
            Gets how many seconds since the linux epoch
            </summary>
            <returns>Seconds since linux epoch</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.TimeHelpers.MillisecondsSinceEpoch">
            <summary>
            Gets how many seconds since the linux epoch
            </summary>
            <returns>Seconds since linux epoch</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.TimeHelpers.ToDateTimeOffsetFromMilliseconds(System.Int64)">
            <summary>
            Converts the milliseconds since linux epoch to a <see cref="T:System.DateTimeOffset"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.TimeHelpers.ToDateTimeOffsetFromSeconds(System.Double)">
            <summary>
            Converts the seconds since linux epoch to a DateTime
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Helpers.TimestampStyles">
            <summary>
            Available flags for timestamp formatting
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.TimestampStyles.ShortTime">
            <summary>
            Displays the short time for the timestamp
            Ex: 16:20
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.TimestampStyles.LongTime">
            <summary>
            Displays the long time for the timestamp
            Ex: 16:20:30
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.TimestampStyles.ShortDate">
            <summary>
            Displays the short date for the timestamp
            Ex: 20/04/2021
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.TimestampStyles.LongDate">
            <summary>
            Displays the long date for the timestamp
            Ex: 20 April 2021
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.TimestampStyles.ShortDateTime">
            <summary>
            Displays the short date/time for the timestamp
            Ex: 20 April 2021 16:20
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.TimestampStyles.LongDateTime">
            <summary>
            Displays the long date/time for the timestamp
            Ex: Tuesday, 20 April 2021 16:20
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.TimestampStyles.RelativeTime">
            <summary>
            Displays the relative time since the timestamp
            Ex: 2 months ago
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Interfaces.Entities.Messages.IDiscordMessageTemplate">
            <summary>
            Interfaces for <see cref="T:Oxide.Ext.Discord.Libraries.Templates.Messages.DiscordMessageTemplates"/> Messages
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Interfaces.Entities.Messages.IDiscordMessageTemplate.Content">
            <summary>
            Content of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Interfaces.Entities.Messages.IDiscordMessageTemplate.Embeds">
            <summary>
            Embeds for the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Interfaces.Entities.Messages.IDiscordMessageTemplate.Components">
            <summary>
            Components for the message
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Interfaces.IDiscordCacheable`1">
            <summary>
            Represents entities that are cachable by the DiscordExtension
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Oxide.Ext.Discord.Interfaces.IDiscordCacheable`1.Id">
            <summary>
            Id of the entity
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.IDiscordCacheable`1.Update(`0)">
            <summary>
            Method to update the entity
            </summary>
            <param name="update">Update data to apply</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Interfaces.IDiscordPlugin">
            <summary>
            Represents a plugin that uses the Discord Extension
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Interfaces.IDiscordPlugin.Name">
            <summary>
            Name of the plugin
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Interfaces.IDiscordPlugin.Title">
            <summary>
            Title of the plugin
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Interfaces.IDiscordPlugin.Description">
            <summary>
            Description of the plugin
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Interfaces.IDiscordPlugin.Author">
            <summary>
            Author of the plugin
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Interfaces.IDiscordPlugin.Version">
            <summary>
            Version of the plugin
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Interfaces.IDiscordPlugin.Client">
            <summary>
            Gets / Sets the DiscordClient on a plugin
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Interfaces.IDiscordQueryString">
            <summary>
            Interface for Discord Query Strings
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.IDiscordQueryString.ToQueryString">
            <summary>
            Returns the request as a query string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.IDiscordValidation.Validate">
            <summary>
            Validates data being passed to the discord API.
            Throws an exception with base type of <see cref="T:Oxide.Ext.Discord.Exceptions.BaseDiscordException"/> if the validation fails
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Interfaces.IFileAttachments">
            <summary>
            Represents and interface for entities that can upload files
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Interfaces.IFileAttachments.FileAttachments">
            <summary>
            File attachments for an entity
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Interfaces.ISnowflakeEntity">
            <summary>
            Interface used to get the entity ID from an entity
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Interfaces.ISnowflakeEntity.Id">
            <summary>
            Returns the unique ID for this entity
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Interfaces.Logging.IDebugLoggable">
            <summary>
            Represents an object that supports debug logging
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Logging.IDebugLoggable.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <summary>
            Logs a debug message for the object
            </summary>
            <param name="logger">Current debug logger</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Interfaces.Promises.IPendingPromise">
            <summary>
            Represents a promise the is still pending waiting to be resolved
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPendingPromise.Resolve">
            <summary>
            Resolves the promise
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Interfaces.Promises.IPendingPromise`1">
            <summary>
            Represents a promise waiting to be resolved
            </summary>
            <typeparam name="TPromised">Type of the resolved value</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPendingPromise`1.Resolve(`0)">
            <summary>
            Resolves the promise with the given value
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Interfaces.Promises.IPromise">
            <summary>
            Implements a non-generic C# promise, this is a promise that simply resolves without delivering a value.
            https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Interfaces.Promises.IPromise.Id">
            <summary>
            ID of the promise, useful for debugging.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise.Catch(System.Action{System.Exception})">
            <summary>
            Handle errors for the promise. 
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise.Catch``1(System.Action{``0})">
            <summary>
            Catches a specified exception
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise.Then``1(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}})">
            <summary>
            Add a resolved callback that chains a value promise (optionally converting to a different value type).
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise.Then(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise})">
            <summary>
            Add a resolved callback that chains a non-value promise.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise.Then(System.Action)">
            <summary>
            Add a resolved callback.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise.Then``1(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}},System.Func{System.Exception,Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}})">
            <summary>
            Add a resolved callback and a rejected callback.
            The resolved callback chains a value promise (optionally converting to a different value type).
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise.Then(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise},System.Action{System.Exception})">
            <summary>
            Add a resolved callback and a rejected callback.
            The resolved callback chains a non-value promise.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise.Then(Oxide.Ext.Discord.Interfaces.Promises.IPromise)">
            <summary>
            Adds a promise to use as the callback
            </summary>
            <param name="promise">Promise to use for callback</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise.Then(System.Action,System.Action{System.Exception})">
            <summary>
            Add a resolved callback and a rejected callback.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise.ThenAll(System.Func{System.Collections.Generic.IEnumerable{Oxide.Ext.Discord.Interfaces.Promises.IPromise}})">
            <summary>
            Chain an enumerable of promises, all of which must resolve.
            The resulting promise is resolved when all of the promises have resolved.
            It is rejected as soon as any of the promises have been rejected.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise.ThenAll``1(System.Func{System.Collections.Generic.IEnumerable{Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}}})">
            <summary>
            Chain an enumerable of promises, all of which must resolve.
            Converts to a non-value promise.
            The resulting promise is resolved when all of the promises have resolved.
            It is rejected as soon as any of the promises have been rejected.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise.ThenSequence(System.Func{System.Collections.Generic.IEnumerable{System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise}}})">
            <summary>
            Chain a sequence of operations using promises.
            Return a collection of functions each of which starts an async operation and yields a promise.
            Each function will be called and each promise resolved in turn.
            The resulting promise is resolved after each promise is resolved in sequence.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise.Finally(System.Action)">
            <summary> 
            Add a finally callback. 
            Finally callbacks will always be called, even if any preceding promise is rejected, or encounters an error.
            The returned promise will be resolved or rejected, as per the preceding promise.
            </summary> 
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise.ContinueWith(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise})">
            <summary>
            Add a callback that chains a non-value promise.
            ContinueWith callbacks will always be called, even if any preceding promise is rejected, or encounters an error.
            The state of the returning promise will be based on the new non-value promise, not the preceding (rejected or resolved) promise.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise.ContinueWith``1(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}})">
            <summary> 
            Add a callback that chains a value promise (optionally converting to a different value type).
            ContinueWith callbacks will always be called, even if any preceding promise is rejected, or encounters an error.
            The state of the returning promise will be based on the new value promise, not the preceding (rejected or resolved) promise.
            </summary> 
        </member>
        <member name="T:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1">
            <summary>
            Implements a C# promise.
            https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.Id">
            <summary>
            ID of the promise, useful for debugging.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.Catch(System.Action{System.Exception})">
            <summary>
            Handle errors for the promise. 
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.Catch``1(System.Action{``0})">
            <summary>
            Catches a specified exception
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.Catch(System.Func{System.Exception,`0})">
            <summary>
            Handle errors for the promise. 
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.Then``1(System.Func{`0,Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}})">
            <summary>
            Add a resolved callback that chains a value promise (optionally converting to a different value type).
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.Then(System.Action{`0})">
            <summary>
            Add a resolved callback.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.Then``1(System.Func{`0,Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}},System.Func{System.Exception,Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}})">
            <summary>
            Add a resolved callback and a rejected callback.
            The resolved callback chains a value promise (optionally converting to a different value type).
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.Then(Oxide.Ext.Discord.Interfaces.Promises.IPromise{`0})">
            <summary>
            Adds a callback from the given promise
            </summary>
            <param name="promise">Promise to use for the callback</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.Then(System.Func{`0,Oxide.Ext.Discord.Interfaces.Promises.IPromise},System.Action{System.Exception})">
            <summary>
            Add a resolved callback and a rejected callback.
            The resolved callback chains a non-value promise.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.Then(System.Action{`0},System.Action{System.Exception})">
            <summary>
            Add a resolved callback and a rejected callback.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.Then``1(System.Func{`0,``0})">
            <summary>
            Return a new promise with a different value.
            May also change the type of the value.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.ThenAll``1(System.Func{`0,System.Collections.Generic.IEnumerable{Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}}})">
            <summary>
            Chain an enumerable of promises, all of which must resolve.
            Returns a promise for a collection of the resolved results.
            The resulting promise is resolved when all of the promises have resolved.
            It is rejected as soon as any of the promises have been rejected.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.ThenAll(System.Func{`0,System.Collections.Generic.IEnumerable{Oxide.Ext.Discord.Interfaces.Promises.IPromise}})">
            <summary>
            Chain an enumerable of promises, all of which must resolve.
            Converts to a non-value promise.
            The resulting promise is resolved when all of the promises have resolved.
            It is rejected as soon as any of the promises have been rejected.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.Finally(System.Action)">
            <summary> 
            Add a finally callback. 
            Finally callbacks will always be called, even if any preceding promise is rejected, or encounters an error.
            The returned promise will be resolved or rejected, as per the preceding promise.
            </summary> 
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.ContinueWith(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise})">
            <summary>
            Add a callback that chains a non-value promise.
            ContinueWith callbacks will always be called, even if any preceding promise is rejected, or encounters an error.
            The state of the returning promise will be based on the new non-value promise, not the preceding (rejected or resolved) promise.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IPromise`1.ContinueWith``1(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}})">
            <summary> 
            Add a callback that chains a value promise (optionally converting to a different value type).
            ContinueWith callbacks will always be called, even if any preceding promise is rejected, or encounters an error.
            The state of the returning promise will be based on the new value promise, not the preceding (rejected or resolved) promise.
            </summary> 
        </member>
        <member name="T:Oxide.Ext.Discord.Interfaces.Promises.IRejectable">
            <summary>
            Interface for a promise that can be rejected.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Promises.IRejectable.Reject(System.Exception)">
            <summary>
            Reject the promise with an exception.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Interfaces.Templates.IBulkTemplate`1">
            <summary>
            Represents a Template that supports bulk operations
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Templates.IBulkTemplate`1.ToEntity(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData,`0)">
            <summary>
            return the {T} entity with the given placeholder data
            If entity is not specified a new one will be created
            </summary>
            <param name="data">Placeholder Data to apply</param>
            <param name="entity">Initial entity</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Templates.IBulkTemplate`1.ToEntityBulk(System.Collections.Generic.List{Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData})">
            <summary>
            Returns a promise that returns a bulk to entity.
            </summary>
            <param name="data">List of data to be bulk converter</param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Interfaces.Types.IReadonlySet`1">
            <summary>
            Represents a ReadOnly interface for <see cref="T:System.Collections.Generic.ISet`1"/>
            </summary>
            <typeparam name="T">Type of the set</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Types.IReadonlySet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc cref="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})"/>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Types.IReadonlySet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc cref="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})"/>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Types.IReadonlySet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc cref="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})"/>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Types.IReadonlySet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc cref="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})"/>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Types.IReadonlySet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc cref="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})"/>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Types.IReadonlySet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc cref="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})"/>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Types.IReadonlySet`1.Contains(`0)">
            <inheritdoc cref="M:System.Collections.Generic.HashSet`1.Contains(`0)"/>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.Types.IReadonlySet`1.CopyTo(`0[],System.Int32)">
            <inheritdoc cref="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)"/>
        </member>
        <member name="T:Oxide.Ext.Discord.Interfaces.WebSockets.IWebSocketEventHandler">
            <summary>
            Represents a Handler for Websocket Events
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.WebSockets.IWebSocketEventHandler.SocketOpened(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Called when the web socket is opened
            </summary>
            <param name="id">ID of the web socket</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.WebSockets.IWebSocketEventHandler.SocketClosed(Oxide.Ext.Discord.Entities.Snowflake,System.Net.WebSockets.WebSocketCloseStatus,System.String)">
            <summary>
            Called when the web socket is closed
            </summary>
            <param name="id">ID of the websocket</param>
            <param name="code">Web socket close code</param>
            <param name="message">Web socket close message</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.WebSockets.IWebSocketEventHandler.SocketErrored(Oxide.Ext.Discord.Entities.Snowflake,System.Exception)">
            <summary>
            Called when an error occurs on the web socket
            </summary>
            <param name="id">ID of the websocket</param>
            <param name="ex">Exception that was thrown</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Interfaces.WebSockets.IWebSocketEventHandler.SocketMessage(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Json.Serialization.DiscordJsonReader)">
            <summary>
            Called when a message is received from the websocket
            </summary>
            <param name="id">ID of the message</param>
            <param name="stream">Stream containing the message</param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Json.Converters.DiscordColorConverter">
            <summary>
            Handles the JSON Serialization / Deserialization for DiscordColor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.DiscordColorConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes to JSON
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.DiscordColorConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads from JSON
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.DiscordColorConverter.CanConvert(System.Type)">
            <summary>
            Check if can convert
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Json.Converters.DiscordEnumConverter">
            <summary>
            Handles deserializing JSON values as strings. If the value doesn't exist return the default value.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.DiscordEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Write Enum value to Discord Enum String
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.DiscordEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Read enum value from Discord Enum String
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.DiscordEnumConverter.CanConvert(System.Type)">
            <summary>
            Checks if this type is enum or nullable enum
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Json.Converters.DiscordImageDataConverter">
            <summary>
            Represents the <see cref="T:Newtonsoft.Json.JsonConverter"/> for <see cref="T:Oxide.Ext.Discord.Entities.Images.DiscordImageData"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.DiscordImageDataConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.DiscordImageDataConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
            <exception cref="T:Newtonsoft.Json.JsonException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.DiscordImageDataConverter.CanConvert(System.Type)">
            <summary>
            
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Json.Converters.EventPayloadConverter">
            <summary>
            JSON converter for <see cref="T:Oxide.Ext.Discord.Entities.Gateway.EventPayload"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Json.Converters.EventPayloadConverter.CanWrite">
            <summary>
            We do not write with this converter
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.EventPayloadConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            We do nto write with this converter
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.EventPayloadConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON into a pooled <see cref="T:Oxide.Ext.Discord.Entities.Gateway.EventPayload"/>
            Populates the Data field with the correct type during deserialization
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.EventPayloadConverter.CanConvert(System.Type)">
            <summary>
            Returns if this converter can convert the given type
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Json.Converters.HashListConverter`1">
            <summary>
            Converts to and from a list in JSON to a hash
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.HashListConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Read an array in JSON as a hash
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.HashListConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Write a hash as a list in JSON
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.HashListConverter`1.CanConvert(System.Type)">
            <summary>
            Can we convert the given type
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Json.Converters.MessageComponentsConverter">
            <summary>
            Converter for list of message components
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.MessageComponentsConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Ignored as we don't write JSON
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.MessageComponentsConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Populate the correct types in components instead of just the BaseComponent
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.MessageComponentsConverter.CanConvert(System.Type)">
            <summary>
            Returns if this can convert the value
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="P:Oxide.Ext.Discord.Json.Converters.MessageComponentsConverter.CanWrite">
            <summary>
            Message Component Convert does not write JSON
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Json.Converters.PermissionFlagsStringConverter">
            <summary>
            Converts Permission Flags to and from a JSON string
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.PermissionFlagsStringConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes Permission Flags as a JSON string
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.PermissionFlagsStringConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Converts the ulong JSON string to Permission Flags
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.PermissionFlagsStringConverter.CanConvert(System.Type)">
            <summary>
            Returns if the type equals PermissionFlags
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Json.Converters.RoleTagsConverter">
            <summary>
            Handles converting <see cref="T:Oxide.Ext.Discord.Entities.Permissions.RoleTags"/>
            This type contains special deserialization types
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Json.Converters.RoleTagsConverter.CanWrite">
            <summary>
            Cannot write
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.RoleTagsConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Cannot Write
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
            <exception cref="T:Newtonsoft.Json.JsonSerializationException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.RoleTagsConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Converts the JSON to a <see cref="T:Oxide.Ext.Discord.Entities.Permissions.RoleTags"/>
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.RoleTagsConverter.CanConvert(System.Type)">
            <summary>
            Returns if the type can be converter
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Json.Converters.SnowflakeConverter">
            <summary>
            Converts a snowflake to and from it's JSON string value
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.SnowflakeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON string and converts it to a snowflake
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
            <exception cref="T:Newtonsoft.Json.JsonException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.SnowflakeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes a snowflake as a JSON string
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.SnowflakeConverter.CanConvert(System.Type)">
            <summary>
            Returns if we can convert this type
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Json.Converters.TemplateComponentsConverter">
            <summary>
            Converter for list of message components
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.TemplateComponentsConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Ignored as we don't write JSON
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.TemplateComponentsConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Populate the correct types in components instead of just the BaseComponent
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.TemplateComponentsConverter.CanConvert(System.Type)">
            <summary>
            Returns if this can convert the value
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="P:Oxide.Ext.Discord.Json.Converters.TemplateComponentsConverter.CanWrite">
            <summary>
            Message Component Convert does not write JSON
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Json.Converters.UnixDateTimeConverter">
            <summary>
            Converts a <see cref="T:System.DateTimeOffset"/> to and from a json long
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Write <see cref="T:System.DateTimeOffset"/> to UnixTimeMilliseconds 
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Convert to <see cref="T:System.DateTimeOffset"/> from UnixTimeMilliseconds
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Converters.UnixDateTimeConverter.CanConvert(System.Type)">
            <summary>
            Can the type be converted
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Json.Serialization.DiscordJsonReader">
            <summary>
            This is a pooled JSON reader that can read as string, deserialize object, or populate a given object async
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Serialization.DiscordJsonReader.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Serialization.DiscordJsonReader.Create(Oxide.Ext.Discord.Pooling.DiscordPluginPool)">
            <summary>
            Returns a pooled <see cref="T:Oxide.Ext.Discord.Json.Serialization.DiscordJsonReader"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Serialization.DiscordJsonReader.CreateFromStream(Oxide.Ext.Discord.Pooling.DiscordPluginPool,System.IO.Stream)">
            <summary>
            Returns a pooled <see cref="T:Oxide.Ext.Discord.Json.Serialization.DiscordJsonReader"/> with stream loaded into it
            </summary>
            <param name="pluginPool">The <see cref="T:Oxide.Ext.Discord.Pooling.DiscordPluginPool"/> to pool from</param>
            <param name="stream">Stream to load</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Serialization.DiscordJsonReader.DeserializeFrom``1(Newtonsoft.Json.JsonSerializer,System.IO.Stream)">
            <summary>
            Deserialize from stream to type {T}
            </summary>
            <param name="serializer">Serializer to use</param>
            <param name="stream">Stream to read from</param>
            <typeparam name="T">Type to return</typeparam>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Serialization.DiscordJsonReader.CopyFrom(System.IO.Stream)">
            <summary>
            Copy from the given stream to our internal stream
            </summary>
            <param name="stream">Stream to copy</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Serialization.DiscordJsonReader.ReadAsString">
            <summary>
            Returns the Stream data as a string
            </summary>
            <returns>String of the stream data</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Serialization.DiscordJsonReader.Deserialize``1(Newtonsoft.Json.JsonSerializer)">
            <summary>
            Deserializes the stream data to {T}
            </summary>
            <param name="serializer"><see cref="T:Newtonsoft.Json.JsonSerializer"/> to use with the Deserialization</param>
            <typeparam name="T">Type to deserialize to</typeparam>
            <returns>{T}</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Serialization.DiscordJsonReader.EnterPool">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Json.Serialization.DiscordJsonWriter">
            <summary>
            This is a pooled JSON writer that can write JSON to a stream
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Json.Serialization.DiscordJsonWriter.Stream">
            <summary>
            Stream that is written to
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Serialization.DiscordJsonWriter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Serialization.DiscordJsonWriter.Get(Oxide.Ext.Discord.Pooling.DiscordPluginPool)">
            <summary>
            Returns a pooled <see cref="T:Oxide.Ext.Discord.Json.Serialization.DiscordJsonWriter"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Serialization.DiscordJsonWriter.WriteAndCopy(Oxide.Ext.Discord.Pooling.DiscordPluginPool,Newtonsoft.Json.JsonSerializer,System.Object,System.IO.Stream)">
            <summary>
            Serializes the payload to the output stream
            </summary>
            <param name="pluginPool">The <see cref="T:Oxide.Ext.Discord.Pooling.DiscordPluginPool"/> to pool from</param>
            <param name="serializer">Serializer to use</param>
            <param name="payload">Payload to serialize</param>
            <param name="output">Output stream to write to</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Serialization.DiscordJsonWriter.Write(Newtonsoft.Json.JsonSerializer,System.Object)">
            <summary>
            Writes the payload to the Stream
            </summary>
            <param name="serializer"><see cref="T:Newtonsoft.Json.JsonSerializer"/> to serialize with</param>
            <param name="payload">Payload to be serialized</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Json.Serialization.DiscordJsonWriter.EnterPool">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.AppCommands.Commands.BaseAppCommand">
            <summary>
            Represents a Base Registered Application Command
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.AppCommands.Commands.BaseAppCommand.#ctor(Oxide.Core.Plugins.Plugin,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Libraries.AppCommands.Commands.AppCommandId,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Constructor
            </summary>
            <param name="plugin">Plugin for the command</param>
            <param name="appId">ID of the <see cref="T:Oxide.Ext.Discord.Entities.Applications.DiscordApplication"/> for the command</param>
            <param name="commandId">Command ID for the command</param>
            <param name="logger">Logger for the command</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.AppCommands.DiscordAppCommand">
            <summary>
            Application Command Oxide Library handler
            Routes Application Commands to their respective hook method handlers instead of having to manually handle it.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.AppCommands.DiscordAppCommand.#ctor(Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Constructor
            </summary>
            <param name="logger">Logger for the library</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.AppCommands.DiscordAppCommand.AddApplicationCommand(Oxide.Core.Plugins.Plugin,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction,Oxide.Ext.Discord.Entities.Interactions.InteractionDataParsed},System.String,System.String,System.String)">
            <summary>
            Registers a new Application Command for the given plugin
            </summary>
            <param name="plugin"><see cref="T:Oxide.Core.Plugins.Plugin"/> the Application Command is for</param>
            <param name="applicationId">ID of the <see cref="T:Oxide.Ext.Discord.Entities.Applications.DiscordApplication"/> for the command</param>
            <param name="callback">Callback for the command</param>
            <param name="command">Command name</param>
            <param name="group">Sub Command Group for the command</param>
            <param name="subCommand">Sub Command for the command</param>
            <exception cref="T:System.ArgumentNullException">Thrown if inputs are null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.AppCommands.DiscordAppCommand.AddAutoCompleteCommand(Oxide.Core.Plugins.Plugin,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction,Oxide.Ext.Discord.Entities.Interactions.InteractionDataOption},System.String,System.String,System.String,System.String)">
            <summary>
            Registers a new Application Command for the given plugin
            </summary>
            <param name="plugin"><see cref="T:Oxide.Core.Plugins.Plugin"/> the Application Command is for</param>
            <param name="applicationId">ID of <see cref="T:Oxide.Ext.Discord.Entities.Applications.DiscordApplication"/> For the command</param>
            <param name="callback">Callback for the command</param>
            <param name="command">Command name</param>
            <param name="argument">Command Argument name for the Auto Complete</param>
            <param name="group">Sub Command Group for the command</param>
            <param name="subCommand">Sub Command for the command</param>
            <exception cref="T:System.ArgumentNullException">Thrown if inputs are null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.AppCommands.DiscordAppCommand.AddMessageComponentCommand(Oxide.Core.Plugins.Plugin,Oxide.Ext.Discord.Entities.Snowflake,System.String,System.Action{Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction})">
            <summary>
            Adds a <see cref="F:Oxide.Ext.Discord.Entities.Interactions.InteractionType.MessageComponent"/> Command type.
            This matches CustomId with starts with
            </summary>
            <param name="plugin">Plugin the command is for</param>
            <param name="applicationId">ID of <see cref="T:Oxide.Ext.Discord.Entities.Applications.DiscordApplication"/> for the command</param>
            <param name="customId">Command to match with Starts with</param>
            <param name="callback">Callback for the command</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.AppCommands.DiscordAppCommand.AddModalSubmitCommand(Oxide.Core.Plugins.Plugin,Oxide.Ext.Discord.Entities.Snowflake,System.String,System.Action{Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction})">
            <summary>
            Adds a <see cref="F:Oxide.Ext.Discord.Entities.Interactions.InteractionType.MessageComponent"/> Command type.
            This matches CustomId with starts with
            </summary>
            <param name="plugin">Plugin the command is for</param>
            <param name="applicationId">ID of <see cref="T:Oxide.Ext.Discord.Entities.Applications.DiscordApplication"/> for the command</param>
            <param name="customId">Command to match with Starts with</param>
            <param name="callback">Callback for the command</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.AppCommands.DiscordAppCommand.RemoveApplicationCommand(Oxide.Core.Plugins.Plugin,Oxide.Ext.Discord.Entities.Applications.DiscordApplication,Oxide.Ext.Discord.Entities.Interactions.InteractionType,System.String,System.String,System.String)">
            <summary>
            Removes an application command
            </summary>
            <param name="plugin">Plugin to remove the command for</param>
            <param name="app"><see cref="T:Oxide.Ext.Discord.Entities.Applications.DiscordApplication"/> for the command</param>
            <param name="type">Type of the command</param>
            <param name="command">Command name</param>
            <param name="group">Sub Command Group for the command</param>
            <param name="subCommand">Sub Command for the command</param>
            <exception cref="T:System.ArgumentNullException">Thrown if command is null or empty</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.AppCommands.DiscordAppCommand.OnPluginLoaded(Oxide.Ext.Discord.Plugins.Setup.PluginSetup,Oxide.Ext.Discord.Connections.BotConnection)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.AppCommands.DiscordAppCommand.OnPluginUnloaded(Oxide.Core.Plugins.Plugin)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.AppCommands.DiscordAppCommand.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.BaseDiscordLibrary">
            <summary>
            Represents the base class for Discord Libraries
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.BaseDiscordLibrary.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.BaseDiscordLibrary.OnPluginLoaded(Oxide.Ext.Discord.Plugins.Setup.PluginSetup,Oxide.Ext.Discord.Connections.BotConnection)">
            <summary>
            Called on the library when a plugin is loaded
            </summary>
            <param name="data">Plugin that was loaded</param>
            <param name="connection">Connection for the plugin</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.BaseDiscordLibrary.OnPluginUnloaded(Oxide.Core.Plugins.Plugin)">
            <summary>
            Called on the library when a plugin is unloaded
            </summary>
            <param name="plugin">Plugin that was unloaded</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.BaseDiscordLibrary`1">
            <summary>
            Base Discord Library for Oxide Libraries 
            </summary>
            <typeparam name="TLibrary"></typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.BaseDiscordLibrary`1.#ctor">
            <summary>
            Constructor
            </summary>
            <exception cref="T:System.Exception">Thrown if the Library has already been initialized</exception>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Command.BaseCommand">
            <summary>
            Sourced from Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L76)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.BaseCommand.CanRun(Oxide.Ext.Discord.Clients.BotClient)">
            <summary>
            Returns if a command can run.
            They can only run for the client that they were created for.
            </summary>
            <param name="client">Client to compare against</param>
            <returns>True if same bot client; false otherwise</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Command.DiscordCommand">
            <summary>
            Represents a library for discord commands
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.CommandPrefixes">
            <summary>
            Available command prefixes used by the extension
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.#ctor(System.Char[],Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Discord Commands Constructor
            </summary>
            <param name="prefixes">Command prefixes used by the extension</param>
            <param name="logger">Logger to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.HasCommands">
            <summary>
            Returns if there are any guild discord commands are registered
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.HasDirectMessageCommands">
            <summary>
            Returns if there are any guild discord commands are registered
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.HasGuildCommands">
            <summary>
            Returns if there are any guild discord commands are registered
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.AddDirectMessageLocalizedCommand(System.String,Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Adds a localized discord direct message command
            Sourced from Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L123)
            </summary>
            <param name="langKey">Lang Key on the plugin that contains the command</param>
            <param name="plugin">Plugin to add the localized command for</param>
            <param name="callback">Method name of the callback</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.AddDirectMessageCommand(System.String,Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Adds a discord direct message command
            Sourced From Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L134)
            </summary>
            <param name="command">Command to add</param>
            <param name="plugin">Plugin to add the command for</param>
            <param name="callback">Method name of the callback</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.AddGuildLocalizedCommand(System.String,Oxide.Core.Plugins.Plugin,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Snowflake},System.String)">
            <summary>
            Adds a localized discord guild command
            Sourced from Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L123)
            </summary>
            <param name="langKey">Lang Key on the plugin that contains the command</param>
            <param name="plugin">Plugin to add the localized command for</param>
            <param name="allowedChannels">Channel or Category Id's this command is allowed in</param>
            <param name="callback">Method name of the callback</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.AddGuildCommand(System.String,Oxide.Core.Plugins.Plugin,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Snowflake},System.String)">
            <summary>
            Adds a discord guild command
            Sourced From Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L134)
            </summary>
            <param name="command">Name of the command</param>
            <param name="plugin">Plugin to add the localized command for</param>
            <param name="allowedChannels">Channel or Category Id's this command is allowed in</param>
            <param name="callback">Method name of the callback</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.RemoveDiscordCommand(System.String,Oxide.Core.Plugins.Plugin)">
            <summary>
            Removes a previously registered discord command
            Sourced From Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L286)
            </summary>
            <param name="command">Command to remove</param>
            <param name="plugin">Plugin the command is for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.RemoveDmCommand(Oxide.Ext.Discord.Libraries.Command.DirectMessageCommand)">
            <summary>
            Removes a discord command
            Sourced from Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L314)
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.HandleDirectMessageCommand(Oxide.Ext.Discord.Clients.BotClient,Oxide.Ext.Discord.Entities.Messages.DiscordMessage,Oxide.Ext.Discord.Entities.Channels.DiscordChannel,System.String,System.String[])">
            <summary>
            Handles the specified direct message command
            Sourced from Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L361)
            </summary>
            <param name="client"></param>
            <param name="channel"></param>
            <param name="name"></param>
            <param name="args"></param>
            <param name="message"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.HandleGuildCommand(Oxide.Ext.Discord.Clients.BotClient,Oxide.Ext.Discord.Entities.Messages.DiscordMessage,Oxide.Ext.Discord.Entities.Channels.DiscordChannel,System.String,System.String[])">
            <summary>
            Handles the specified direct message command
            Sourced from Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L361)
            </summary>
            <param name="client"></param>
            <param name="channel"></param>
            <param name="name"></param>
            <param name="args"></param>
            <param name="message"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.OnPluginLoaded(Oxide.Ext.Discord.Plugins.Setup.PluginSetup,Oxide.Ext.Discord.Connections.BotConnection)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.OnPluginUnloaded(Oxide.Core.Plugins.Plugin)">
            <summary>
            Called when a plugin has been unloaded
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommand.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Linking.DiscordLink">
            <summary>
            Represents a library for discord linking
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.PlayerToDiscordIds">
            <summary>
            Readonly Dictionary of Player ID's to Discord ID's
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.DiscordToPlayerIds">
            <summary>
            Readonly Dictionary of Discord ID's to Player ID's
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.PlayerIds">
            <summary>
            Readonly Collection of all Player ID's
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.DiscordIds">
            <summary>
            Readonly Collection of all Discord ID's
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.IsEnabled">
            <summary>
            Returns if there is a registered link plugin
            </summary>
            <returns></returns>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.LinkedCount">
            <summary>
            Returns the number of linked players
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.#ctor(Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            DiscordLink Constructor
            </summary>
            <param name="logger">Logger for Discord Link</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.AddLinkPlugin(Oxide.Ext.Discord.Libraries.Linking.IDiscordLinkPlugin)">
            <summary>
            Adds a link plugin to be the plugin used with the Discord Link library
            </summary>
            <param name="plugin"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.RemoveLinkPlugin(Oxide.Ext.Discord.Libraries.Linking.IDiscordLinkPlugin)">
            <summary>
            Removes a link plugin from the Discord Link library
            </summary>
            <param name="plugin"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.OnPluginUnloaded(Oxide.Core.Plugins.Plugin)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.IsLinked(System.String)">
            <summary>
            Returns if the specified ID is linked
            </summary>
            <param name="playerId">Steam ID of the player</param>
            <returns>True if the ID is linked; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.IsLinked(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns if the specified ID is linked
            </summary>
            <param name="discordId">Discord ID of the player</param>
            <returns>True if the ID is linked; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.IsLinked(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Returns if the specified ID is linked
            </summary>
            <param name="player">Player to check if linked</param>
            <returns>True if the player is linked; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.IsLinked(Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            Returns if the specified ID is linked
            </summary>
            <param name="user">Discord user to check</param>
            <returns>True if the user is linked; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetPlayerId(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns the Player ID of the given Discord ID if there is a link
            </summary>
            <param name="discordId">Discord ID to get steam ID for</param>
            <returns>Steam ID of the given given discord ID if linked; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetPlayerId(Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            Returns the Player ID of the given Discord ID if there is a link
            </summary>
            <param name="user"><see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/> to get steam Id for</param>
            <returns>Steam ID of the given given discord ID if linked; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetPlayer(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns the IPlayer for the given Discord ID
            </summary>
            <param name="discordId">Discord ID to get IPlayer for</param>
            <returns>IPlayer for the given Discord ID; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetDiscordId(System.String)">
            <summary>
            Returns the Discord ID for the given Steam ID
            </summary>
            <param name="playerId">Steam ID to get Discord ID for</param>
            <returns>Discord ID for the given Steam ID; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetDiscordId(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Returns the Discord ID for the given IPlayer
            </summary>
            <param name="player">Player to get Discord ID for</param>
            <returns>Discord ID for the given Steam ID; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetDiscordUser(System.String)">
            <summary>
            Returns a minimal Discord User
            </summary>
            <param name="playerId">ID of the in game player</param>
            <returns>Discord ID for the given Steam ID; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetDiscordUser(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Returns a minimal Discord User
            </summary>
            <param name="player">Player to get the Discord User for</param>
            <returns>Discord ID for the given IPlayer; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetLinkedMember(System.String,Oxide.Ext.Discord.Entities.Guilds.DiscordGuild)">
            <summary>
            Returns a linked guild member for the matching steam id in the given guild
            </summary>
            <param name="playerId">ID of the in game player</param>
            <param name="guild">Guild the member is in</param>
            <returns>Discord ID for the given Steam ID; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetLinkedMember(Oxide.Core.Libraries.Covalence.IPlayer,Oxide.Ext.Discord.Entities.Guilds.DiscordGuild)">
            <summary>
            Returns a linked guild member for the matching <see cref="T:Oxide.Core.Libraries.Covalence.IPlayer"/> in the given guild
            </summary>
            <param name="player">Player to get the Discord User for</param>
            <param name="guild">Guild the member is in</param>
            <returns>Discord ID for the given Steam ID; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.OnLinked(Oxide.Core.Plugins.Plugin,Oxide.Core.Libraries.Covalence.IPlayer,Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            Called by a link plugin when a link occured
            </summary>
            <param name="plugin">Plugin that initiated the link</param>
            <param name="player">Player being linked</param>
            <param name="discord">DiscordUser being linked</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.OnUnlinked(Oxide.Core.Plugins.Plugin,Oxide.Core.Libraries.Covalence.IPlayer,Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            Called by a link plugin when an unlink occured
            </summary>
            <param name="plugin">Plugin that is unlinking</param>
            <param name="player">Player being unlinked</param>
            <param name="discord">DiscordUser being unlinked</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Linking.IDiscordLinkPlugin">
            <summary>
            Represents a plugin that supports Discord Link library
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.IDiscordLinkPlugin.GetSteamToDiscordIds">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.IDictionary`2"/> of Steam ID's to Discord ID's
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Linking.PlayerId">
            <summary>
            Represents a <see cref="T:Oxide.Ext.Discord.Libraries.Linking.DiscordLink"/> Player ID
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Linking.PlayerId.Id">
            <summary>
            ID of the player
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Linking.PlayerId.IsValid">
            <summary>
            Returns true if the ID is valid; false otherwise
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Linking.PlayerId.Player">
            <summary>
            Returns the IPlayer for the Player ID
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.PlayerId.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="id">ID of the player</param>
            <exception cref="T:System.ArgumentNullException">Thrown if ID is null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.PlayerId.#ctor(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Constructor
            </summary>
            <param name="player">IPlayer for the ID</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the IPlayer is null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.PlayerId.Equals(Oxide.Ext.Discord.Libraries.Linking.PlayerId)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.PlayerId.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.PlayerId.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Locale.DiscordLocale">
            <summary>
            Represents a Locale in Discord
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Locale.DiscordLocale.Id">
            <summary>
            ID of the locale
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Locale.DiscordLocale.IsValid">
            <summary>
            Is the Locale Valid
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocale.GetServerLocale">
            <summary>
            Returns the Server Locale for this Discord Locale
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocale.Parse(System.String)">
            <summary>
            Parses a Discord Locale
            </summary>
            <param name="locale">Locale to Parse</param>
            <returns>Parsed Discord Locale</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocale.Equals(Oxide.Ext.Discord.Libraries.Locale.DiscordLocale)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocale.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocale.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocale.op_Equality(Oxide.Ext.Discord.Libraries.Locale.DiscordLocale,Oxide.Ext.Discord.Libraries.Locale.DiscordLocale)">
            <summary>
            Returns if two Discord Locales are equal to each other
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocale.op_Inequality(Oxide.Ext.Discord.Libraries.Locale.DiscordLocale,Oxide.Ext.Discord.Libraries.Locale.DiscordLocale)">
            <summary>
            Returns if two Discord Locales are not equal to each other
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocale.ToString">
            <summary>
            Returns the ID of the Locale
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales">
            <summary>
            Converts discord locale codes into oxide locale codes
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales.DefaultServerLanguage">
            <summary>
            Default Oxide Lang (English)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales.ServerLanguage">
            <summary>
            Returns the Oxide Server language
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales.#ctor(Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales.AddOxideLocale(Oxide.Ext.Discord.Libraries.Locale.ServerLocale,Oxide.Ext.Discord.Libraries.Locale.DiscordLocale)">
            <summary>
            Adds a one way <see cref="T:Oxide.Ext.Discord.Libraries.Locale.ServerLocale"/> -> <see cref="T:Oxide.Ext.Discord.Libraries.Locale.DiscordLocale"/> mapping
            </summary>
            <param name="serverLang"></param>
            <param name="discordLang"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales.AddDiscordLocale(Oxide.Ext.Discord.Libraries.Locale.DiscordLocale,Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <summary>
            Adds a one way <see cref="T:Oxide.Ext.Discord.Libraries.Locale.DiscordLocale"/> -> <see cref="T:Oxide.Ext.Discord.Libraries.Locale.ServerLocale"/> mapping
            </summary>
            <param name="discordLang"></param>
            <param name="serverLang"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales.Contains(Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <summary>
            Returns if the <see cref="T:Oxide.Ext.Discord.Libraries.Locale.ServerLocale"/> mapping exists
            </summary>
            <param name="locale"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales.Contains(Oxide.Ext.Discord.Libraries.Locale.DiscordLocale)">
            <summary>
            Returns if the <see cref="T:Oxide.Ext.Discord.Libraries.Locale.DiscordLocale"/> mapping exists
            </summary>
            <param name="locale"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales.GetServerLanguage(Oxide.Ext.Discord.Libraries.Locale.DiscordLocale)">
            <summary>
            Returns the oxide locale for a given discord locale
            </summary>
            <param name="discordLocale">Discord locale to get oxide locale for</param>
            <returns>Oxide locale if it exists; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales.GetDiscordLocale(Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <summary>
            Returns the discord locale for a given oxide locale
            </summary>
            <param name="serverLocale">oxide locale to get discord locale for</param>
            <returns>Discord locale if it exists; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales.GetPlayerLanguage(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Returns the oxide locale for the given IPlayer
            </summary>
            <param name="player"><see cref="T:Oxide.Core.Libraries.Covalence.IPlayer"/> to get the locale for</param>
            <returns>Locale for the given IPlayer</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales.GetPlayerLanguage(System.String)">
            <summary>
            Returns the oxide locale for the given playerId
            </summary>
            <param name="playerId">PlayerId to get the locale for</param>
            <returns>Locale for the given playerId</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales.GetDiscordLocalizations(Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Returns all the discord localizations for a specific lang key in a plugin
            </summary>
            <param name="plugin"></param>
            <param name="langKey"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales.GetDiscordInteractionLangMessage(Oxide.Core.Plugins.Plugin,Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction,System.String)">
            <summary>
            Retrieves the lang message for a Discord Interaction
            </summary>
            <param name="plugin">Plugin the lang is from</param>
            <param name="interaction">The interaction to be localized</param>
            <param name="langKey">The lang key to lookup</param>
            <returns>Localized message if found; Empty string otherwise</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if any of the input arguments are null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales.GetDiscordInteractionLangMessage(Oxide.Core.Plugins.Plugin,Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction,System.String,System.Object[])">
            <summary>
            Retrieves the lang message for a Discord Interaction
            </summary>
            <param name="plugin">Plugin the lang is from</param>
            <param name="interaction">The interaction to be localized</param>
            <param name="langKey">The lang key to lookup</param>
            <param name="args">Localization formatting args</param>
            <returns>Localized message if found; Empty string otherwise</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if any of the input arguments are null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.DiscordLocales.OnPluginUnloaded(Oxide.Core.Plugins.Plugin)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Locale.ServerLocale">
            <summary>
            Represents a Server Locale
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Locale.ServerLocale.Id">
            <summary>
            ID of the Locale
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Locale.ServerLocale.IsValid">
            <summary>
            Returns if the Locale is valid
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Locale.ServerLocale.IsDefault">
            <summary>
            Returns if the Locale is the default server language "en"
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.ServerLocale.GetDiscordLocale">
            <summary>
            Returns the <see cref="T:Oxide.Ext.Discord.Libraries.Locale.DiscordLocale"/> for this server locale
            </summary>
            <returns></returns>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Locale.ServerLocale.Default">
            <summary>
            The default locale for servers
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.ServerLocale.Parse(System.String)">
            <summary>
            Parses a locale returning a <see cref="T:Oxide.Ext.Discord.Libraries.Locale.ServerLocale"/>
            </summary>
            <param name="locale"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.ServerLocale.Equals(Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.ServerLocale.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.ServerLocale.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.ServerLocale.op_Equality(Oxide.Ext.Discord.Libraries.Locale.ServerLocale,Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <summary>
            Returns if two Server Locales are equal to each other
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.ServerLocale.op_Inequality(Oxide.Ext.Discord.Libraries.Locale.ServerLocale,Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <summary>
            Returns if two Server Locales are not equal to each other
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Locale.ServerLocale.ToString">
            <summary>
            Returns the ID of the ServerLocale
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.ApplicationCommandPlaceholders">
            <summary>
            <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand"/> placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ApplicationCommandPlaceholders.Id(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.Id"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ApplicationCommandPlaceholders.Name(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.Name"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ApplicationCommandPlaceholders.Mention(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.Mention"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ApplicationCommandPlaceholders.MentionCustom(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand)">
            <summary>
            <see cref="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand.MentionCustom(System.String)"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ApplicationCommandPlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.ChannelPlaceholders">
            <summary>
            <see cref="T:Oxide.Ext.Discord.Entities.Channels.DiscordChannel"/> Placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ChannelPlaceholders.Id(Oxide.Ext.Discord.Entities.Channels.DiscordChannel)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Id"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ChannelPlaceholders.Name(Oxide.Ext.Discord.Entities.Channels.DiscordChannel)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Name"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ChannelPlaceholders.Icon(Oxide.Ext.Discord.Entities.Channels.DiscordChannel)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.IconUrl"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ChannelPlaceholders.Topic(Oxide.Ext.Discord.Entities.Channels.DiscordChannel)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Topic"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ChannelPlaceholders.Mention(Oxide.Ext.Discord.Entities.Channels.DiscordChannel)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Channels.DiscordChannel.Mention"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ChannelPlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.DateTimePlaceholders">
            <summary>
            <see cref="T:System.DateTime"/> placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.DateTimePlaceholders.Year(System.DateTime)">
            <summary>
            <see cref="P:System.DateTime.Year"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.DateTimePlaceholders.Month(System.DateTime)">
            <summary>
            <see cref="P:System.DateTime.Month"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.DateTimePlaceholders.Day(System.DateTime)">
            <summary>
            <see cref="P:System.DateTime.Day"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.DateTimePlaceholders.Hour(System.DateTime)">
            <summary>
            <see cref="P:System.DateTime.Hour"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.DateTimePlaceholders.Minute(System.DateTime)">
            <summary>
            <see cref="P:System.DateTime.Minute"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.DateTimePlaceholders.Second(System.DateTime)">
            <summary>
            <see cref="P:System.DateTime.Second"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.DateTimePlaceholders.Millisecond(System.DateTime)">
            <summary>
            <see cref="P:System.DateTime.Millisecond"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.DateTimePlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.GuildPlaceholders">
            <summary>
            <see cref="T:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild"/> placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.GuildPlaceholders.Id(Oxide.Ext.Discord.Entities.Guilds.DiscordGuild)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Id"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.GuildPlaceholders.Name(Oxide.Ext.Discord.Entities.Guilds.DiscordGuild)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Name"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.GuildPlaceholders.Description(Oxide.Ext.Discord.Entities.Guilds.DiscordGuild)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Description"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.GuildPlaceholders.Icon(Oxide.Ext.Discord.Entities.Guilds.DiscordGuild)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.IconUrl"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.GuildPlaceholders.Banner(Oxide.Ext.Discord.Entities.Guilds.DiscordGuild)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.BannerUrl"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.GuildPlaceholders.MemberCount(Oxide.Ext.Discord.Entities.Guilds.DiscordGuild)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild.Members"/> count placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.GuildPlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.InteractionPlaceholders">
            <summary>
            <see cref="T:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction"/> placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.InteractionPlaceholders.Lang(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState,Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction)">
            <summary>
            <see cref="M:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction.GetLangMessage(Oxide.Core.Plugins.Plugin,System.String)"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.InteractionPlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.MemberPlaceholders">
            <summary>
            <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildMember"/> placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.MemberPlaceholders.Id(Oxide.Ext.Discord.Entities.Guilds.GuildMember)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Id"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.MemberPlaceholders.Name(Oxide.Ext.Discord.Entities.Guilds.GuildMember)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Id"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.MemberPlaceholders.Mention(Oxide.Ext.Discord.Entities.Guilds.GuildMember)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Id"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.MemberPlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.MessagePlaceholders">
            <summary>
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.DiscordMessage"/> placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.MessagePlaceholders.Id(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState,Oxide.Ext.Discord.Entities.Messages.DiscordMessage)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Id"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.MessagePlaceholders.ChannelId(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState,Oxide.Ext.Discord.Entities.Messages.DiscordMessage)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.ChannelId"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.MessagePlaceholders.Content(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState,Oxide.Ext.Discord.Entities.Messages.DiscordMessage)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Messages.DiscordMessage.Content"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.MessagePlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders">
            <summary>
            <see cref="T:Oxide.Core.Libraries.Covalence.IPlayer"/> placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.Id(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            <see cref="P:Oxide.Core.Libraries.Covalence.IPlayer.Id"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.Name(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            <see cref="P:Oxide.Core.Libraries.Covalence.IPlayer.Name"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.Connected(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            <see cref="P:Oxide.Core.Libraries.Covalence.IPlayer.IsConnected"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.Health(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            <see cref="P:Oxide.Core.Libraries.Covalence.IPlayer.Health"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.MaxHealth(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            <see cref="P:Oxide.Core.Libraries.Covalence.IPlayer.MaxHealth"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.Position(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            <see cref="M:Oxide.Core.Libraries.Covalence.IPlayer.Position"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.Ping(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            <see cref="P:Oxide.Core.Libraries.Covalence.IPlayer.Ping"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.Permissions(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Player Permissions Placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.Groups(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Player Groups Placeholder
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.SteamProfileUrl(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Steam Profile Url Placeholder 
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.SteamAvatarUrl(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Steam Avatar Url Placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.BattleMetricsSteamIdUrl(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Battle metrics Steam ID Url Placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.BattleMetricsNameUrl(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Battle metrics Place Name Url Placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.ServerArmorUrl(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Battle metrics Place Name Url Placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.IsLinked(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState,Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            <see cref="M:Oxide.Ext.Discord.Extensions.PlayerExt.IsLinked(Oxide.Core.Libraries.Covalence.IPlayer)"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PlayerPlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.PluginPlaceholders">
            <summary>
            <see cref="T:Oxide.Core.Plugins.Plugin"/> placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PluginPlaceholders.Name(Oxide.Core.Plugins.Plugin)">
            <summary>
            <see cref="P:Oxide.Core.Plugins.Plugin.Name"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PluginPlaceholders.Title(Oxide.Core.Plugins.Plugin)">
            <summary>
            <see cref="P:Oxide.Core.Plugins.Plugin.Title"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PluginPlaceholders.Author(Oxide.Core.Plugins.Plugin)">
            <summary>
            <see cref="P:Oxide.Core.Plugins.Plugin.Author"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PluginPlaceholders.Version(Oxide.Core.Plugins.Plugin)">
            <summary>
            <see cref="P:Oxide.Core.Plugins.Plugin.Version"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PluginPlaceholders.Description(Oxide.Core.Plugins.Plugin)">
            <summary>
            <see cref="P:Oxide.Core.Plugins.Plugin.Description"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PluginPlaceholders.FullName(Oxide.Core.Plugins.Plugin)">
            <summary>
            <see cref="M:Oxide.Ext.Discord.Extensions.PluginExt.FullName(Oxide.Core.Plugins.Plugin)"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PluginPlaceholders.HookTime(Oxide.Core.Plugins.Plugin)">
            <summary>
            <see cref="P:Oxide.Core.Plugins.Plugin.TotalHookTime"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PluginPlaceholders.LangMessage(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState,Oxide.Core.Plugins.Plugin)">
            <summary>
            Lang message for a plugin
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.PluginPlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.RequestErrorPlaceholders">
            <summary>
            <see cref="T:Oxide.Ext.Discord.Entities.Api.ResponseError"/> placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.RequestErrorPlaceholders.HttpCode(Oxide.Ext.Discord.Entities.Api.ResponseError)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Api.ResponseError.HttpStatusCode"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.RequestErrorPlaceholders.Message(Oxide.Ext.Discord.Entities.Api.ResponseError)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Api.ResponseError.ResponseMessage"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.RequestErrorPlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.RolePlaceholders">
            <summary>
            <see cref="T:Oxide.Ext.Discord.Entities.Permissions.DiscordRole"/> placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.RolePlaceholders.Id(Oxide.Ext.Discord.Entities.Permissions.DiscordRole)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Id"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.RolePlaceholders.Name(Oxide.Ext.Discord.Entities.Permissions.DiscordRole)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Name"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.RolePlaceholders.Mention(Oxide.Ext.Discord.Entities.Permissions.DiscordRole)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Mention"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.RolePlaceholders.Icon(Oxide.Ext.Discord.Entities.Permissions.DiscordRole)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Permissions.DiscordRole.Icon"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.RolePlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.ServerPlaceholders">
            <summary>
            <see cref="T:Oxide.Core.Libraries.Covalence.IServer"/> placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ServerPlaceholders.Name(Oxide.Core.Libraries.Covalence.IServer)">
            <summary>
            <see cref="P:Oxide.Core.Libraries.Covalence.IServer.Name"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ServerPlaceholders.Players(Oxide.Core.Libraries.Covalence.IServer)">
            <summary>
            <see cref="P:Oxide.Core.Libraries.Covalence.IServer.Players"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ServerPlaceholders.MaxPlayers(Oxide.Core.Libraries.Covalence.IServer)">
            <summary>
            <see cref="P:Oxide.Core.Libraries.Covalence.IServer.MaxPlayers"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ServerPlaceholders.Version(Oxide.Core.Libraries.Covalence.IServer)">
            <summary>
            <see cref="P:Oxide.Core.Libraries.Covalence.IServer.Version"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ServerPlaceholders.Protocol(Oxide.Core.Libraries.Covalence.IServer)">
            <summary>
            <see cref="P:Oxide.Core.Libraries.Covalence.IServer.Protocol"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.ServerPlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.SnowflakePlaceholders">
            <summary>
            <see cref="T:Oxide.Ext.Discord.Entities.Snowflake"/> placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.SnowflakePlaceholders.Created(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            <see cref="M:Oxide.Ext.Discord.Entities.Snowflake.GetCreationDate"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.SnowflakePlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimeSpanPlaceholders">
            <summary>
            <see cref="T:System.TimeSpan"/> placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimeSpanPlaceholders.Days(System.TimeSpan)">
            <summary>
            <see cref="P:System.TimeSpan.Days"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimeSpanPlaceholders.Hours(System.TimeSpan)">
            <summary>
            <see cref="P:System.TimeSpan.Hours"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimeSpanPlaceholders.Minutes(System.TimeSpan)">
            <summary>
            <see cref="P:System.TimeSpan.Minutes"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimeSpanPlaceholders.Seconds(System.TimeSpan)">
            <summary>
            <see cref="P:System.TimeSpan.Seconds"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimeSpanPlaceholders.Milliseconds(System.TimeSpan)">
            <summary>
            <see cref="P:System.TimeSpan.Milliseconds"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimeSpanPlaceholders.TotalDays(System.TimeSpan)">
            <summary>
            <see cref="P:System.TimeSpan.TotalDays"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimeSpanPlaceholders.TotalHours(System.TimeSpan)">
            <summary>
            <see cref="P:System.TimeSpan.TotalHours"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimeSpanPlaceholders.TotalMinutes(System.TimeSpan)">
            <summary>
            <see cref="P:System.TimeSpan.TotalMinutes"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimeSpanPlaceholders.TotalSeconds(System.TimeSpan)">
            <summary>
            <see cref="P:System.TimeSpan.TotalSeconds"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimeSpanPlaceholders.TotalMilliseconds(System.TimeSpan)">
            <summary>
            <see cref="P:System.TimeSpan.TotalMilliseconds"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimeSpanPlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimestampPlaceholders">
            <summary>
            Timestamp placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimestampPlaceholders.Timestamp(System.Int64)">
            <summary>
            <see cref="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.UnixTimestamp(System.Int64,Oxide.Ext.Discord.Helpers.TimestampStyles)"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimestampPlaceholders.ShortTime(System.Int64)">
            <summary>
            <see cref="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.UnixTimestamp(System.Int64,Oxide.Ext.Discord.Helpers.TimestampStyles)"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimestampPlaceholders.Longtime(System.Int64)">
            <summary>
            <see cref="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.UnixTimestamp(System.Int64,Oxide.Ext.Discord.Helpers.TimestampStyles)"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimestampPlaceholders.ShortDate(System.Int64)">
            <summary>
            <see cref="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.UnixTimestamp(System.Int64,Oxide.Ext.Discord.Helpers.TimestampStyles)"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimestampPlaceholders.LongDate(System.Int64)">
            <summary>
            <see cref="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.UnixTimestamp(System.Int64,Oxide.Ext.Discord.Helpers.TimestampStyles)"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimestampPlaceholders.ShortDateTime(System.Int64)">
            <summary>
            <see cref="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.UnixTimestamp(System.Int64,Oxide.Ext.Discord.Helpers.TimestampStyles)"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimestampPlaceholders.LongDateTime(System.Int64)">
            <summary>
            <see cref="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.UnixTimestamp(System.Int64,Oxide.Ext.Discord.Helpers.TimestampStyles)"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimestampPlaceholders.RelativeTime(System.Int64)">
            <summary>
            <see cref="M:Oxide.Ext.Discord.Helpers.DiscordFormatting.UnixTimestamp(System.Int64,Oxide.Ext.Discord.Helpers.TimestampStyles)"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.TimestampPlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.Default.UserPlaceholders">
            <summary>
            <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/> placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.UserPlaceholders.Id(Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Id"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.UserPlaceholders.UserName(Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Username"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.UserPlaceholders.Discriminator(Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Discriminator"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.UserPlaceholders.FullName(Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.FullUserName"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.UserPlaceholders.AvatarUrl(Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetAvatarUrl"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.UserPlaceholders.BannerUrl(Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetBannerUrl"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.UserPlaceholders.Mention(Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            <see cref="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Mention"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.UserPlaceholders.IsLinked(Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            <see cref="M:Oxide.Ext.Discord.Extensions.DiscordUserExt.IsLinked(Oxide.Ext.Discord.Entities.Users.DiscordUser)"/> placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.Default.UserPlaceholders.RegisterPlaceholders(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers placeholders for the given plugin. 
            </summary>
            <param name="plugin">Plugin to register placeholders for</param>
            <param name="placeholderPrefix">Prefix to use for the placeholders</param>
            <param name="dataKey">Data key in <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.DiscordPlaceholders">
            <summary>
            Discord Placeholders Library
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.DiscordPlaceholders.ProcessPlaceholders(System.String,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Process placeholders for the given Text
            </summary>
            <param name="text">Text to process placeholders for</param>
            <param name="data">Placeholder Data for the placeholders</param>
            <returns>string with placeholders replaced. If no placeholders are found the original string is returned</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.DiscordPlaceholders.CreateData(Oxide.Core.Plugins.Plugin)">
            <summary>
            Creates Pooled <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/>
            </summary>
            <returns><see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.DiscordPlaceholders.RegisterPlaceholder(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers a placeholder static value placeholder
            </summary>
            <param name="plugin">Plugin this placeholder is for</param>
            <param name="placeholder">Placeholder string</param>
            <param name="value">Static string value</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.DiscordPlaceholders.RegisterPlaceholder``1(Oxide.Core.Plugins.Plugin,System.String,System.Func{``0})">
            <summary>
            Registers a placeholder
            </summary>
            <param name="plugin">Plugin this placeholder is for</param>
            <param name="placeholder">Placeholder string</param>
            <param name="callback">Callback Method for the placeholder</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.DiscordPlaceholders.RegisterPlaceholder``1(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Registers a placeholder that uses the dataKey value
            </summary>
            <param name="plugin">Plugin this placeholder is for</param>
            <param name="placeholder">Placeholder string</param>
            <param name="dataKey"></param>
            <typeparam name="TData">Type that is registered in the PlaceholderData</typeparam>
            <exception cref="T:System.ArgumentNullException">Thrown if placeholder or plugin is null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.DiscordPlaceholders.RegisterPlaceholder``2(Oxide.Core.Plugins.Plugin,System.String,System.Func{``0,``1})">
            <summary>
            Registers a placeholder of type {T}
            </summary>
            <param name="plugin">Plugin this placeholder is for</param>
            <param name="placeholder">Placeholder string</param>
            <param name="callback">Callback Method for the placeholder</param>
            <typeparam name="TData">Type of the data key</typeparam>
            <typeparam name="TResult">The return type of the placeholder callback</typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.DiscordPlaceholders.RegisterPlaceholder``2(Oxide.Core.Plugins.Plugin,System.String,System.String,System.Func{``0,``1})">
            <summary>
            Registers a placeholder of type {T}
            </summary>
            <param name="plugin">Plugin this placeholder is for</param>
            <param name="placeholder">Placeholder string</param>
            <param name="dataKey">The name of the data key in PlaceholderData</param>
            <param name="callback">Callback Method for the placeholder</param>
            <typeparam name="TData">Type of the data key</typeparam>
            <typeparam name="TResult">The return type of the placeholder callback</typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.DiscordPlaceholders.RegisterPlaceholder``2(Oxide.Core.Plugins.Plugin,System.String,System.Func{Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState,``0,``1})">
            <summary>
            Registers a placeholder of type {T}
            </summary>
            <param name="plugin">Plugin this placeholder is for</param>
            <param name="placeholder">Placeholder string</param>
            <param name="callback">Callback Method for the placeholder</param>
            <typeparam name="TData">Type of the data key</typeparam>
            <typeparam name="TResult">The return type of the placeholder callback</typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.DiscordPlaceholders.RegisterPlaceholder``2(Oxide.Core.Plugins.Plugin,System.String,System.String,System.Func{Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState,``0,``1})">
            <summary>
            Registers a placeholder of type {T}
            </summary>
            <param name="plugin">Plugin this placeholder is for</param>
            <param name="placeholder">Placeholder string</param>
            <param name="dataKey">The name of the data key in PlaceholderData</param>
            <param name="callback">Callback Method for the placeholder</param>
            <typeparam name="TData">Type of the data key</typeparam>
            <typeparam name="TResult">The return type of the placeholder callback</typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.DiscordPlaceholders.OnPluginUnloaded(Oxide.Core.Plugins.Plugin)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData">
            <summary>
            Placeholder Data for placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddCommand(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand)">
            <summary>
            Add a <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand"/>
            </summary>
            <param name="command">Application Command to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddGuild(Oxide.Ext.Discord.Clients.DiscordClient,System.Nullable{Oxide.Ext.Discord.Entities.Snowflake})">
            <summary>
            Add a <see cref="T:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild"/> by <see cref="T:Oxide.Ext.Discord.Clients.DiscordClient"/> and GuildId
            </summary>
            <param name="client">Discord Client for the guild</param>
            <param name="guildId">Guild ID of the guild</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddGuild(Oxide.Ext.Discord.Entities.Guilds.DiscordGuild)">
            <summary>
            Add a <see cref="T:Oxide.Ext.Discord.Entities.Guilds.DiscordGuild"/>
            </summary>
            <param name="guild">Guild to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddMessage(Oxide.Ext.Discord.Entities.Messages.DiscordMessage)">
            <summary>
            Add a <see cref="T:Oxide.Ext.Discord.Entities.Messages.DiscordMessage"/>
            </summary>
            <param name="message">Message to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddGuildMember(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Add a <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildMember"/> by <see cref="T:Oxide.Ext.Discord.Clients.DiscordClient"/>, GuildId, and UserId
            </summary>
            <param name="client">DiscordClient for the guild</param>
            <param name="guildId">Guild ID for the guild</param>
            <param name="memberId">Member UserId in the guild</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddGuildMember(Oxide.Ext.Discord.Entities.Guilds.GuildMember)">
            <summary>
            Add a <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildMember"/>
            </summary>
            <param name="member">Member to add</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddUser(Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            Adds a <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/>
            </summary>
            <param name="user">User to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddRole(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Adds a <see cref="T:Oxide.Ext.Discord.Entities.Permissions.DiscordRole"/> by <see cref="T:Oxide.Ext.Discord.Clients.DiscordClient"/>, GuildId, and RoleId
            </summary>
            <param name="client">Client for the guild</param>
            <param name="guildId">Guild ID of the guild</param>
            <param name="roleId">Role ID of the role</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddRole(Oxide.Ext.Discord.Entities.Permissions.DiscordRole)">
            <summary>
            Adds a <see cref="T:Oxide.Ext.Discord.Entities.Permissions.DiscordRole"/>
            </summary>
            <param name="role">Role to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddChannel(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Nullable{Oxide.Ext.Discord.Entities.Snowflake})">
            <summary>
            Adds a <see cref="T:Oxide.Ext.Discord.Entities.Channels.DiscordChannel"/> by <see cref="T:Oxide.Ext.Discord.Clients.DiscordClient"/>, ChannelId, and Optional GuildId
            </summary>
            <param name="client">Client for the channel</param>
            <param name="channelId">Channel ID of the channel</param>
            <param name="guildId">Guild ID of the channel if channel is in a guild</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddChannel(Oxide.Ext.Discord.Entities.Channels.DiscordChannel)">
            <summary>
            Adds a <see cref="T:Oxide.Ext.Discord.Entities.Channels.DiscordChannel"/>
            </summary>
            <param name="channel">Channel to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddInteraction(Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction)">
            <summary>
            Adds a <see cref="T:Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction"/>
            </summary>
            <param name="interaction">Interaction to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddPlayer(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Adds a <see cref="T:Oxide.Core.Libraries.Covalence.IPlayer"/>
            </summary>
            <param name="player">player to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddTarget(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Adds a target <see cref="T:Oxide.Core.Libraries.Covalence.IPlayer"/>
            </summary>
            <param name="player">player to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddPlugin(Oxide.Core.Plugins.Plugin)">
            <summary>
            Adds a <see cref="T:Oxide.Core.Plugins.Plugin"/>
            </summary>
            <param name="plugin">Plugin to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddTimestamp(System.Int64)">
            <summary>
            Adds a Unix Timestamp
            </summary>
            <param name="timestamp">Unix timestamp</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddSnowflake(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Adds a <see cref="T:Oxide.Ext.Discord.Entities.Snowflake"/>
            </summary>
            <param name="id"><see cref="T:Oxide.Ext.Discord.Entities.Snowflake"/> ID</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.AddRequestError(Oxide.Ext.Discord.Entities.Api.ResponseError)">
            <summary>
            Add a <see cref="T:Oxide.Ext.Discord.Entities.Api.ResponseError"/>
            </summary>
            <param name="error">RequestError to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.Add``1(System.String,``0)">
            <summary>
            Adds the data with the given name
            </summary>
            <param name="name">Name of the data key</param>
            <param name="obj">Object to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.Get``1">
            <summary>
            Returns the object with the given type of {T}
            The key name used is <code>nameof(T)</code>
            </summary>
            <typeparam name="T">Type to return</typeparam>
            <returns>{T}</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.Get``1(System.String)">
            <summary>
            Returns the object with the given type of T
            If the object is not found the default(T) is returned
            </summary>
            <param name="name">Name of the data key</param>
            <typeparam name="T">Type to return</typeparam>
            <returns>{T}</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.GetKeys">
            <summary>
            Returns comma seperated string of all the registered key
            Useful for debugging placeholders
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.ManualPool">
            <summary>
            Disable automatic pooling and handle manually by plugin
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.Clone">
            <summary>
            Clones the current placeholder data into a new <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData.EnterPool">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderFormatting">
            <summary>
            Formatting Helpers for Placeholders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderFormatting.Replace(System.Text.StringBuilder,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState,System.String)">
            <summary>
            Replace the <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState"/> with the the string value
            </summary>
            <param name="builder"><see cref="T:System.Text.StringBuilder"/> for the placeholder</param>
            <param name="state"><see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState"/> for the placeholder</param>
            <param name="value">Placeholder value to replace</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderFormatting.Replace(System.Text.StringBuilder,System.Text.RegularExpressions.Match,System.String)">
            <summary>
            Replace the <see cref="T:System.Text.RegularExpressions.Match"/> with the the string value
            </summary>
            <param name="builder"><see cref="T:System.Text.StringBuilder"/> for the placeholder</param>
            <param name="match"><see cref="T:System.Text.RegularExpressions.Match"/> for the placeholder</param>
            <param name="value">Placeholder value to replace</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderFormatting.Replace(System.Text.StringBuilder,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState,System.Boolean)">
            <summary>
            Replace the <see cref="T:System.Text.RegularExpressions.Match"/> with the the string value
            </summary>
            <param name="builder"><see cref="T:System.Text.StringBuilder"/> for the placeholder</param>
            <param name="state"><see cref="T:System.Text.RegularExpressions.Match"/> for the placeholder</param>
            <param name="value">Snowflake value to replace</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderFormatting.Replace(System.Text.StringBuilder,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Replace the <see cref="T:System.Text.RegularExpressions.Match"/> with the the <see cref="T:Oxide.Ext.Discord.Entities.Snowflake"/> value
            </summary>
            <param name="builder"><see cref="T:System.Text.StringBuilder"/> for the placeholder</param>
            <param name="state"><see cref="T:System.Text.RegularExpressions.Match"/> for the placeholder</param>
            <param name="value">Snowflake value to replace</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderFormatting.Replace(System.Text.StringBuilder,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState,System.IFormattable)">
            <summary>
            Replace the <see cref="T:System.Text.RegularExpressions.Match"/> with the the string value
            </summary>
            <param name="builder"><see cref="T:System.Text.StringBuilder"/> for the placeholder</param>
            <param name="state"><see cref="T:System.Text.RegularExpressions.Match"/> for the placeholder</param>
            <param name="value"><see cref="T:System.IFormattable"/> value to use with formatting</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderFormatting.Replace(System.Text.StringBuilder,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState,Oxide.Core.Libraries.Covalence.GenericPosition)">
            <summary>
            Replace the <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState"/> with the formatted position
            </summary>
            <param name="builder"><see cref="T:System.Text.StringBuilder"/> for the placeholder</param>
            <param name="placeholderState"><see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState"/> for the placeholder</param>
            <param name="position"><see cref="T:Oxide.Core.Libraries.Covalence.GenericPosition"/> position to format and replace</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderFormatting.ApplyPlaceholder(System.String,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Applies the placeholder to the text
            If <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/> is null text is returned and no placeholders are processed
            </summary>
            <param name="text">Text to apply placeholders to</param>
            <param name="data"><see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/> for the placeholder</param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState">
            <summary>
            Represents the current state for a matched placeholder
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState.Data">
            <summary>
            Placeholder Data for the state
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState.Name">
            <summary>
            Name of the placeholder
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState.Format">
            <summary>
            Format specified in the placeholder
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState.Index">
            <summary>
            Index in the string of the placeholder
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState.Length">
            <summary>
            Length of the placeholder
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState.Create(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Creates a pooled <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState"/>
            </summary>
            <param name="data">Data to be used in the state</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderState.EnterPool">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Pooling.DiscordPool">
            <summary>
            Discord Pool Library
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Pooling.DiscordPool.GetOrCreate(Oxide.Core.Plugins.Plugin)">
            <summary>
            Returns an existing <see cref="T:Oxide.Ext.Discord.Pooling.DiscordPluginPool"/> for the given plugin or returns a new one
            </summary>
            <param name="plugin">The pool the plugin is for</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Thrown if the plugin is null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Pooling.DiscordPool.OnPluginLoaded(Oxide.Ext.Discord.Plugins.Setup.PluginSetup,Oxide.Ext.Discord.Connections.BotConnection)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Pooling.DiscordPool.OnPluginUnloaded(Oxide.Core.Plugins.Plugin)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Subscription.DiscordSubscription">
            <summary>
            Represents a channel subscription for a plugin
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Subscription.DiscordSubscription.#ctor(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.Messages.DiscordMessage})">
            <summary>
            Constructor
            </summary>
            <param name="client">Discord Client for the subscription</param>
            <param name="channelId">ID of the channel</param>
            <param name="callback">Callback when the channel message is sent</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Subscription.DiscordSubscription.CanRun(Oxide.Ext.Discord.Clients.BotClient)">
            <summary>
            Returns if a subscription can run.
            They can only run for the client that they were created for.
            </summary>
            <param name="client">Client to compare against</param>
            <returns>True if same bot client; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Subscription.DiscordSubscription.Invoke(Oxide.Ext.Discord.Entities.Messages.DiscordMessage)">
            <summary>
            Invokes the callback with the message
            </summary>
            <param name="message">Message that was sent in the given channel</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Subscription.DiscordSubscription.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Subscription.DiscordSubscriptions">
            <summary>
            Represents Discord Subscriptions Oxide Library
            Allows for plugins to subscribe to discord channels
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Subscription.DiscordSubscriptions.#ctor(Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            DiscordSubscriptions Constructor
            </summary>
            <param name="logger">Logger</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Subscription.DiscordSubscriptions.HasSubscriptions">
            <summary>
            Returns if any subscriptions have been registered
            </summary>
            <returns>True if there are any subscriptions; False otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Subscription.DiscordSubscriptions.AddChannelSubscription(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.Messages.DiscordMessage})">
            <summary>
            Allows a plugin to add a subscription to a discord channel
            </summary>
            <param name="client">Client that is subscribing</param>
            <param name="channelId">Channel ID of the channel</param>
            <param name="message">Callback with the message that was created in the channel</param>
            <exception cref="T:System.ArgumentNullException">Exception if plugin or message is null</exception>
            <exception cref="T:System.ArgumentException">Exception if Channel ID is not valid</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Subscription.DiscordSubscriptions.RemoveChannelSubscription(Oxide.Core.Plugins.Plugin,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Removes a subscribed channel for a plugin
            </summary>
            <param name="plugin">Plugin to remove the subscription for</param>
            <param name="channelId">Channel ID to remove</param>
            <exception cref="T:System.ArgumentNullException">Exception if plugin is null</exception>
            <exception cref="T:System.ArgumentException">Exception if channel ID is not valid</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Subscription.DiscordSubscriptions.OnPluginUnloaded(Oxide.Core.Plugins.Plugin)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Subscription.DiscordSubscriptions.RemovePluginSubscriptions(Oxide.Core.Plugins.Plugin)">
            <summary>
            Remove all subscriptions for a plugin
            </summary>
            <param name="plugin">Plugin to remove subscriptions for</param>
            <exception cref="T:System.ArgumentNullException">Exception if plugin is null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Subscription.DiscordSubscriptions.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.AutoComplete.DiscordAutoCompleteChoiceTemplate">
            <summary>
            Template for Discord Auto Completes
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.AutoComplete.DiscordAutoCompleteChoiceTemplate.Name">
            <summary>
            Choice Text (1-100 characters)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.AutoComplete.DiscordAutoCompleteChoiceTemplate.ApplyLocalization(Oxide.Ext.Discord.Libraries.Locale.DiscordLocale,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Apply localizations to the auto complete choice
            </summary>
            <param name="locale">DiscordLocale being applied</param>
            <param name="choice">Choice to apply the template to</param>
            <param name="placeholders">Placeholders for be applied</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.AutoComplete.DiscordAutoCompleteChoiceTemplate.ApplyName(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Apply the name to the auto complete choice
            </summary>
            <param name="choice">Choice to apply the template to</param>
            <param name="placeholders">Placeholders for be applied</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.AutoComplete.DiscordAutoCompleteChoiceTemplates">
            <summary>
            Auto Complete Choice Templates Library
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.AutoComplete.DiscordAutoCompleteChoiceTemplates.#ctor(Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.AutoComplete.DiscordAutoCompleteChoiceTemplates.RegisterGlobalTemplate(Oxide.Core.Plugins.Plugin,System.String,Oxide.Ext.Discord.Libraries.Templates.AutoComplete.DiscordAutoCompleteChoiceTemplate,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion)">
            <summary>
            Registers a global template for Auto Complete Choices
            </summary>
            <param name="plugin">Plugin the template is for</param>
            <param name="templateName">Name of the template</param>
            <param name="template">The template to register</param>
            <param name="version">Current version of the template</param>
            <param name="minVersion">Minimum supported version of the template</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Throw if plugin or templateName is null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.AutoComplete.DiscordAutoCompleteChoiceTemplates.RegisterLocalizedTemplate(Oxide.Core.Plugins.Plugin,System.String,Oxide.Ext.Discord.Libraries.Templates.AutoComplete.DiscordAutoCompleteChoiceTemplate,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion,System.String)">
            <summary>
            Registers a global template for Auto Complete Choices
            </summary>
            <param name="plugin">Plugin the template is for</param>
            <param name="templateName">Name of the template</param>
            <param name="template">The template to register</param>
            <param name="version">Current version of the template</param>
            <param name="minVersion">Minimum supported version of the template</param>
            <param name="language">Server Language for the localized template</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Throw if plugin, templateName, or language is null/empty</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.AutoComplete.DiscordAutoCompleteChoiceTemplates.GetGlobalTemplate(Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Returns a global Auto Complete Template for the given plugin and template name
            </summary>
            <param name="plugin">Plugin for the template</param>
            <param name="templateName">Name of the template</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.AutoComplete.DiscordAutoCompleteChoiceTemplates.ApplyGlobal(Oxide.Core.Plugins.Plugin,System.String,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Applies a Global Template to a <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice"/> with optional placeholders
            </summary>
            <param name="plugin">Plugin for the template</param>
            <param name="templateName">Name of the template</param>
            <param name="choice">Choice to be applied to</param>
            <param name="placeholders">Placeholders to apply</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Thrown if plugin or templateName is null/empty</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.AutoComplete.DiscordAutoCompleteChoiceTemplates.ApplyLocalized(Oxide.Core.Plugins.Plugin,System.String,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData,System.String)">
            <summary>
            Applies a Localized Template to a <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice"/> with optional placeholders
            </summary>
            <param name="plugin">Plugin for the template</param>
            <param name="templateName">Name of the template</param>
            <param name="choice">Choice to be applied to</param>
            <param name="placeholders">Placeholders to apply</param>
            <param name="language">Server Language to apply</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Thrown if plugin or templateName is null/empty</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.AutoComplete.DiscordAutoCompleteChoiceTemplates.ApplyLocalized(Oxide.Core.Plugins.Plugin,System.String,Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice,Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Applies a Localized Template to a <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice"/> with optional placeholders
            </summary>
            <param name="plugin">Plugin for the template</param>
            <param name="templateName">Name of the template</param>
            <param name="interaction">Interaction for the localization</param>
            <param name="choice">Choice to be applied to</param>
            <param name="placeholders">Placeholders to apply</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Thrown if plugin or templateName is null/empty</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.AutoComplete.DiscordAutoCompleteChoiceTemplates.OnPluginUnloaded(Oxide.Core.Plugins.Plugin)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.BaseMessageTemplateLibrary`1">
            <summary>
            Library for Discord Message templates
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.BaseMessageTemplateLibrary`1.RegisterGlobalTemplateAsync(Oxide.Core.Plugins.Plugin,System.String,`0,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion)">
            <summary>
            Registers a global message template
            Global Message templates cannot be localized
            </summary>
            <param name="plugin">Plugin the template is for</param>
            <param name="templateName">Unique name of the template</param>
            <param name="template">Template to register</param>
            <param name="version">Version of the template</param>
            <param name="minVersion">Min supported version for this template</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.BaseMessageTemplateLibrary`1.RegisterLocalizedTemplateAsync(Oxide.Core.Plugins.Plugin,System.String,`0,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion,System.String)">
            <summary>
            Registers a message template with the given name and language
            </summary>
            <param name="plugin">Plugin the <see cref="T:Oxide.Ext.Discord.Libraries.Templates.Messages.DiscordMessageTemplate"/> is for</param>
            <param name="templateName">Name of the <see cref="T:Oxide.Ext.Discord.Libraries.Templates.Messages.DiscordMessageTemplate"/></param>
            <param name="template">Template to be registered</param>
            <param name="version">Version of the template</param>
            <param name="minVersion">
            The minimum supported template version.<br/>
            If an existing template exists and it's version is >=  the minimum supported version then we will use that template.<br/>
            If an existing template exists and it's version is &lt; the min supported version. The existing version is backed up and a new template is created 
            </param>
            <param name="language">Language for the template</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.BaseMessageTemplateLibrary`1.GetGlobalTemplate(Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Returns a global message template for the plugin with the given name
            </summary>
            <param name="plugin">Plugin the template is for</param>
            <param name="templateName">Name of the template</param>
            <returns><see cref="T:Oxide.Ext.Discord.Libraries.Templates.Messages.DiscordMessageTemplate"/></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.BaseMessageTemplateLibrary`1.GetPlayerTemplate(Oxide.Core.Plugins.Plugin,System.String,Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Returns a message template for a given <see cref="T:Oxide.Core.Libraries.Covalence.IPlayer"/> player
            </summary>
            <param name="plugin">Plugin the template is for</param>
            <param name="templateName">Name of the template</param>
            <param name="player">IPlayer for the template</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Thrown if Plugin is null or name / language is null or empty</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.BaseMessageTemplateLibrary`1.GetPlayerTemplate(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Returns a message template for a given <see cref="T:Oxide.Core.Libraries.Covalence.IPlayer"/> player
            </summary>
            <param name="plugin">Plugin the template is for</param>
            <param name="templateName">Name of the template</param>
            <param name="playerId">Player ID for the template</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Thrown if Plugin is null or name / language is null or empty</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.BaseMessageTemplateLibrary`1.GetLocalizedTemplate(Oxide.Core.Plugins.Plugin,System.String,System.String)">
            <summary>
            Returns a message template for a given language
            </summary>
            <param name="plugin">Plugin the template is for</param>
            <param name="templateName">Name of the template</param>
            <param name="language">Oxide language of the template</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Thrown if Plugin is null or name / language is null or empty</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.BaseMessageTemplateLibrary`1.GetLocalizedTemplate(Oxide.Core.Plugins.Plugin,System.String,Oxide.Ext.Discord.Entities.Interactions.DiscordInteraction)">
            <summary>
            Returns a message template for a given language
            </summary>
            <param name="plugin">Plugin the template is for</param>
            <param name="templateName">Name of the template</param>
            <param name="interaction">Interaction to get the template for</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Thrown if Plugin is null or name / language is null or empty</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.BaseMessageTemplateLibrary`1.OnPluginUnloaded(Oxide.Core.Plugins.Plugin)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.BaseTemplateLibrary`1">
            <summary>
            Oxide Library for Discord Templates
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Templates.BaseTemplateLibrary`1.Logger">
            <summary>
            Logger for the <see cref="T:Oxide.Ext.Discord.Libraries.Templates.BaseTemplateLibrary`1"/>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Templates.BaseTemplateLibrary`1._rootDirectory">
            <summary>
            Root Directory for the library
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Templates.BaseTemplateLibrary`1._templateTypeDirectory">
            <summary>
            Template Type Directory
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Templates.BaseTemplateLibrary`1.TemplateType">
            <summary>
            The template type of this template library
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.BaseTemplateLibrary`1.#ctor(Oxide.Ext.Discord.Libraries.Templates.TemplateType,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Constructor
            </summary>
            <param name="type">The template type of this library</param>
            <param name="logger"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.BaseTemplateLibrary`1.GetTemplateFolder(Oxide.Ext.Discord.Plugins.PluginId)">
            <summary>
            Returns the template folder for a given plugin
            </summary>
            <param name="plugin">Plugin Name the template is for</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.BaseTemplateLibrary`1.OnPluginUnloaded(Oxide.Core.Plugins.Plugin)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.BulkTemplateRegistration`1">
            <summary>
            Used for bulk template registration
            </summary>
            <typeparam name="T">Type of the template being registered</typeparam>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.BulkTemplateRegistration`1.Language">
            <summary>
            Language for this template
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.BulkTemplateRegistration`1.Template">
            <summary>
            Template to register
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.BulkTemplateRegistration`1.Version">
            <summary>
            Version of the template
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.BulkTemplateRegistration`1.#ctor(`0,System.String,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion)">
            <summary>
            Constructor for bulk template registration
            </summary>
            <param name="template">Template to register</param>
            <param name="language">Language for the template</param>
            <param name="version">Version of the template</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Commands.ArgumentLocalization">
            <summary>
            Localization for Application Command Arguments
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Commands.ArgumentLocalization.Name">
            <summary>
            Localization for <see cref="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.Name"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Commands.ArgumentLocalization.Description">
            <summary>
            Localization for <see cref="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.Description"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Commands.ArgumentLocalization.Choices">
            <summary>
            Localization for Select Menu Choices
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.ArgumentLocalization.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.ArgumentLocalization.#ctor(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption,Oxide.Ext.Discord.Libraries.Locale.DiscordLocale)">
            <summary>
            Constructor
            </summary>
            <param name="option">Option to create the localization for</param>
            <param name="locale">The oxide lang for the localization</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.ArgumentLocalization.ApplyArgumentLocalization(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption,Oxide.Ext.Discord.Libraries.Locale.DiscordLocale)">
            <summary>
            Apply localizations to the command option
            </summary>
            <param name="option"></param>
            <param name="locale"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Commands.ChoicesLocalization">
            <summary>
            Localization for Select Menu Choices
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Commands.ChoicesLocalization.Name">
            <summary>
            Localization for <see cref="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice.Name"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.ChoicesLocalization.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.ChoicesLocalization.#ctor(System.String)">
            <summary>
            Constructor for command option choice localization
            </summary>
            <param name="name">Localized choice name</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.ChoicesLocalization.#ctor(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="option">Option to localize</param>
            <param name="lang">Oxide lang of the localization</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.ChoicesLocalization.ApplyChoiceLocalization(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOptionChoice,Oxide.Ext.Discord.Libraries.Locale.DiscordLocale)">
            <summary>
            Apply Choice Localizations
            </summary>
            <param name="choice"></param>
            <param name="locale"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Commands.CommandLocalization">
            <summary>
            Localization for Application Commands
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Commands.CommandLocalization.Name">
            <summary>
            Localization for <see cref="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate.Name"/> or <see cref="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.Name"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Commands.CommandLocalization.Description">
            <summary>
            Localization for <see cref="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate.Description"/> or <see cref="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption.Description"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Commands.CommandLocalization.Options">
            <summary>
            Localized Options for the Command
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Commands.CommandLocalization.Arguments">
            <summary>
            Localized Argument Options
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.CommandLocalization.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.CommandLocalization.#ctor(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate,Oxide.Ext.Discord.Libraries.Locale.DiscordLocale)">
            <summary>
            Constructor
            </summary>
            <param name="create">Command to be created</param>
            <param name="locale">Oxide lang of the localization</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.CommandLocalization.#ctor(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandOption,Oxide.Ext.Discord.Libraries.Locale.DiscordLocale)">
            <summary>
            Constructor
            </summary>
            <param name="opt"></param>
            <param name="locale"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.CommandLocalization.ApplyCommandLocalization(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate,Oxide.Ext.Discord.Libraries.Locale.DiscordLocale)">
            <summary>
            Apply Command Localizations to the <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate"/>
            </summary>
            <param name="create"></param>
            <param name="locale"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Commands.DiscordCommandLocalization">
            <summary>
            Command Localizations for Application Commands
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Commands.DiscordCommandLocalization.Command">
            <summary>
            Localized Command
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.DiscordCommandLocalization.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.DiscordCommandLocalization.#ctor(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate,Oxide.Ext.Discord.Libraries.Locale.ServerLocale)">
            <summary>
            Constructor
            </summary>
            <param name="command">Command to create the localization for</param>
            <param name="locale">Oxide Lang for the command</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.DiscordCommandLocalization.ApplyCommandLocalization(Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate,Oxide.Ext.Discord.Libraries.Locale.DiscordLocale)">
            <summary>
            Apply localizations to <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate"/> for language
            </summary>
            <param name="create"></param>
            <param name="locale"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Commands.DiscordCommandLocalizations">
            <summary>
            Library for localizing <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.DiscordApplicationCommand"/>s
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.DiscordCommandLocalizations.RegisterCommandLocalizationAsync(Oxide.Core.Plugins.Plugin,System.String,Oxide.Ext.Discord.Libraries.Templates.Commands.DiscordCommandLocalization,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion,System.String)">
            <summary>
            Registers Application Command Localization for a given language
            </summary>
            <param name="plugin">Plugin the for the command localization</param>
            <param name="fileNameSuffix">Suffix to be applied to the localization. IE DiscordExtension.{suffix}.json (optional)</param>
            <param name="localization">Localization to register</param>
            <param name="version">Version of the template</param>
            <param name="minVersion">Min supported registered version</param>
            <param name="language">Language to register</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.DiscordCommandLocalizations.BulkRegisterCommandLocalizationsAsync(Oxide.Core.Plugins.Plugin,System.String,System.Collections.Generic.List{Oxide.Ext.Discord.Libraries.Templates.BulkTemplateRegistration{Oxide.Ext.Discord.Libraries.Templates.Commands.DiscordCommandLocalization}},Oxide.Ext.Discord.Libraries.Templates.TemplateVersion)">
            <summary>
            Registers multiple command localizations
            </summary>
            <param name="plugin">Plugin the for the command localization</param>
            <param name="fileNameSuffix">Suffix to be applied to the localization. IE DiscordExtension.{suffix}.json (optional)</param>
            <param name="commands">List of <see cref="T:Oxide.Ext.Discord.Libraries.Templates.Commands.DiscordCommandLocalization"/> to bulk register</param>
            <param name="minVersion">Min supported registered version</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Commands.DiscordCommandLocalizations.ApplyCommandLocalizationsAsync(Oxide.Core.Plugins.Plugin,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.CommandCreate,System.String)">
            <summary>
            Applies Command Localizations Async
            </summary>
            <param name="plugin">Plugin the localizations are for</param>
            <param name="create">The command to apply the localizations to</param>
            <param name="fileNameSuffix">fileName suffix used when registering</param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Components.BaseComponentTemplate">
            <summary>
            Base Template for Message Components
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.BaseComponentTemplate.Visible">
            <summary>
            If the component should be added to the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.BaseComponentTemplate.Type">
            <summary>
            Type of the component
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Components.BaseComponentTemplate.#ctor(Oxide.Ext.Discord.Entities.Interactions.MessageComponents.MessageComponentType)">
            <summary>
            Represents a base Message Component Template
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Components.BaseComponentTemplate.ToComponent(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Returns the built component
            </summary>
            <param name="data"><see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/> to use</param>
            <returns>Component</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Components.ButtonTemplate">
            <summary>
            Template for Button Components
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.ButtonTemplate.Label">
            <summary>
            Display label for the button
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.ButtonTemplate.Emoji">
            <summary>
            Emoji for the button
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.ButtonTemplate.Style">
            <summary>
            <see cref="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonStyle"/> for the button
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.ButtonTemplate.Command">
            <summary>
            Command for the button. If <see cref="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonStyle.Link"/> then this will set the Url field; Else the CustomId field
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.ButtonTemplate.Inline">
            <summary>
            Should the button be on the same or new row
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.ButtonTemplate.Enabled">
            <summary>
            If the Button is enabled
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Components.ButtonTemplate.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Components.ButtonTemplate.#ctor(System.String,Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonStyle,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructor without emoji
            </summary>
            <param name="label">Button Label</param>
            <param name="style"><see cref="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonStyle"/></param>
            <param name="command">Button Command</param>
            <param name="enabled">Is button enabled?</param>
            <param name="inline">Should the button be on the same row or a new row?</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Components.ButtonTemplate.#ctor(System.String,Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonStyle,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructor with emoji
            </summary>
            <param name="label">Button Label</param>
            <param name="style"><see cref="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonStyle"/></param>
            <param name="command">Button Command</param>
            <param name="emoji">Emoji for the button</param>
            <param name="enabled">Is button enabled?</param>
            <param name="inline">Should the button be on the same row or a new row?</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Components.ButtonTemplate.ToComponent(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Converts the template to a <see cref="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.ButtonComponent"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Components.InputTextTemplate">
            <summary>
            Input Text Message Component Template
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.InputTextTemplate.CustomId">
            <summary>
            Custom ID of the input text
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.InputTextTemplate.Style">
            <summary>
            The style of the input text
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.InputTextTemplate.Label">
            <summary>
            Text that appears on top of the input text field, max 80 characters
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.InputTextTemplate.MinLength">
            <summary>
            The minimum length of the text input
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.InputTextTemplate.MaxLength">
            <summary>
            The maximum length of the text input
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.InputTextTemplate.Placeholder">
            <summary>
            The placeholder for the text input field
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.InputTextTemplate.Value">
            <summary>
            The pre-filled value for text input
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.InputTextTemplate.Required">
            <summary>
            Is the Input Text Required to be filled out
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Components.InputTextTemplate.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Components.InputTextTemplate.#ctor(System.String,System.String,System.String,Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextStyles,System.Boolean,System.String,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="label"></param>
            <param name="customId"></param>
            <param name="value"></param>
            <param name="style"></param>
            <param name="required"></param>
            <param name="placeholder"></param>
            <param name="minLength"></param>
            <param name="maxLength"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Components.InputTextTemplate.ToComponent(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Converts the template to a <see cref="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.InputTextComponent"/>
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuOptionTemplate">
            <summary>
            Template for Select Menu Options
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuOptionTemplate.Label">
            <summary>
            The user-facing name of the option,
            Max 100 characters
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuOptionTemplate.Value">
            <summary>
            The dev-define value of the option,
            Max 100 characters
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuOptionTemplate.Description">
            <summary>
            An additional description of the option,
            Max 100 characters
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuOptionTemplate.Emoji">
            <summary>
            Emoji in the option
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuOptionTemplate.Default">
            <summary>
            Will render this option as selected by default
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuOptionTemplate.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuOptionTemplate.#ctor(System.String,System.String,System.String,Oxide.Ext.Discord.Libraries.Templates.Emojis.EmojiTemplate,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="label"></param>
            <param name="value"></param>
            <param name="description"></param>
            <param name="emoji"></param>
            <param name="default"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuOptionTemplate.ToOption(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Converts the template to <see cref="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.SelectMenuOption"/>
            </summary>
            <param name="data"><see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/> to use</param>
            <returns><see cref="T:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.SelectMenus.SelectMenuOption"/></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuTemplate">
            <summary>
            Represents a template for select menus
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuTemplate.CustomId">
            <summary>
            Command for the Select Menu
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuTemplate.Placeholder">
            <summary>
            Custom placeholder text if nothing is selected
            Max 150 characters
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuTemplate.Options">
            <summary>
            The choices in the select
            Max 25 options
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuTemplate.ChannelTypes">
            <summary>
            <see cref="F:Oxide.Ext.Discord.Entities.Interactions.MessageComponents.MessageComponentType.ChannelSelect"/> <see cref="T:Oxide.Ext.Discord.Entities.Channels.ChannelType"/> to show
            Max 25 options
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuTemplate.MinValues">
            <summary>
            the minimum number of items that must be chosen
            Default 1, Min 0, Max 25
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuTemplate.MaxValues">
            <summary>
            the maximum  number of items that must be chosen
            Default 1, Min 0, Max 25
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuTemplate.Enabled">
            <summary>
            If the Button is enabled
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuTemplate.#ctor(Oxide.Ext.Discord.Entities.Interactions.MessageComponents.MessageComponentType)">
            <summary>
            Constructor
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Components.SelectMenuTemplate.ToComponent(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.DiscordTemplate`1">
            <summary>
            Base Template used in Discord Templates
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.DiscordTemplate`1.Template">
            <summary>
            Template Data for the template
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.DiscordTemplate`1.Version">
            <summary>
            The version of the Template
            Used when Registering templates to determine if we need to backup a template and create a new template for the given version
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedFieldTemplate">
            <summary>
            Discord Template for Embed Field
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedFieldTemplate.Name">
            <summary>
            Title of the field
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedFieldTemplate.Value">
            <summary>
            Value of the field
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedFieldTemplate.Inline">
            <summary>
            Should the field be on the same row
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedFieldTemplate.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedFieldTemplate.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="inline"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedFieldTemplate.ToEntity(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData,Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField)">
            <summary>
            Converts the template to an <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField"/>
            </summary>
            <param name="data">Data to use</param>
            <param name="field">Initial field (Optional)</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedFieldTemplate.ToEntityBulk(System.Collections.Generic.List{Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData})">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedFieldTemplates">
            <summary>
            Modal Templates Library
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedFieldTemplates.#ctor(Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate">
            <summary>
            Discord Template for embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate.Enabled">
            <summary>
            If this embed is enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate.Title">
            <summary>
            The Tile for the embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate.Url">
            <summary>
            This Title Url for the embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate.Description">
            <summary>
            The description of the embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate.Color">
            <summary>
            The Hex Color for the embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate.ImageUrl">
            <summary>
            Image URL to show in the embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate.ThumbnailUrl">
            <summary>
            Thumbnail url to show in the embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate.VideoUrl">
            <summary>
            Video url to show in the embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate.TimeStamp">
            <summary>
            Show timestamp in the embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate.Fields">
            <summary>
            Fields for the embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate.Footer">
            <summary>
            Footer for the embed
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="title"></param>
            <param name="description"></param>
            <param name="titleUrl"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate.ToEntity(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData,Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed)">
            <summary>
            Converts the template to a <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.DiscordEmbed"/>
            </summary>
            <param name="data">Data to use</param>
            <param name="embed">Initial embed to use</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplate.ToEntityBulk(System.Collections.Generic.List{Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData})">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplates">
            <summary>
            Modal Templates Library
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Embeds.DiscordEmbedTemplates.#ctor(Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Embeds.EmbedFooterTemplate">
            <summary>
            Discord Template for Embed Footer
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.EmbedFooterTemplate.Enabled">
            <summary>
            Show Embed Footer
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.EmbedFooterTemplate.Text">
            <summary>
            Embed Footer Text
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Embeds.EmbedFooterTemplate.IconUrl">
            <summary>
            Embed Footer Icon
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Embeds.EmbedFooterTemplate.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Embeds.EmbedFooterTemplate.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="text"></param>
            <param name="iconUrl"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Embeds.EmbedFooterTemplate.ToFooter(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Converts the template to a <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedFooter"/>
            </summary>
            <param name="data">Data to use</param>
            <returns><see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedFooter"/></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Emojis.EmojiTemplate">
            <summary>
            Discord Template for Emoji
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Emojis.EmojiTemplate.Emoji">
            <summary>
            Emoji Name or ID
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Emojis.EmojiTemplate.Animated">
            <summary>
            If the emoji is Animated
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Emojis.EmojiTemplate.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Emojis.EmojiTemplate.#ctor(System.String)">
            <summary>
            Unicode emoji constructor
            </summary>
            <param name="emoji">Unicode Emoji</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Emojis.EmojiTemplate.#ctor(Oxide.Ext.Discord.Entities.Snowflake,System.Boolean)">
            <summary>
            Custom Emoji Constructor
            </summary>
            <param name="emojiId">ID of the emoji</param>
            <param name="animated">Is the emoji animated?</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Emojis.EmojiTemplate.ToEmoji">
            <summary>
            Converts the <see cref="T:Oxide.Ext.Discord.Libraries.Templates.Emojis.EmojiTemplate"/> to a <see cref="T:Oxide.Ext.Discord.Entities.Emojis.DiscordEmoji"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Messages.DiscordMessageTemplate">
            <summary>
            Discord Message Template for sending localized Discord Messages
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Messages.DiscordMessageTemplate.Content">
            <summary>
            String contents of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Messages.DiscordMessageTemplate.Embeds">
            <summary>
            Embeds for the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Messages.DiscordMessageTemplate.Components">
            <summary>
            Buttons for the message
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Messages.DiscordMessageTemplate.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Messages.DiscordMessageTemplate.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Messages.DiscordMessageTemplate.ToMessage``1(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData,``0)">
            <summary>
            Converts the <see cref="T:Oxide.Ext.Discord.Libraries.Templates.Messages.DiscordMessageTemplate"/> to a {T} message
            {T} supports all message types
            </summary>
            <param name="data">Placeholder Data for the template</param>
            <param name="message">{T} message to use when creating the message; if null a new {T} will be created</param>
            <returns><see cref="T:Oxide.Ext.Discord.Libraries.Templates.Messages.DiscordMessageTemplate"/> converted to type {T} message</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Messages.DiscordMessageTemplates">
            <summary>
            Modal Templates Library
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Messages.DiscordMessageTemplates.#ctor(Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Modals.DiscordModalTemplate">
            <summary>
            Template used for Modal Message Component
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Modals.DiscordModalTemplate.Title">
            <summary>
            Title of the modal
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Modals.DiscordModalTemplate.CustomId">
            <summary>
            Title of the modal
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Templates.Modals.DiscordModalTemplate.Components">
            <summary>
            Components of the Modal
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Modals.DiscordModalTemplate.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Modals.DiscordModalTemplate.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="title"></param>
            <param name="customId"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Modals.DiscordModalTemplate.ToModal(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData,Oxide.Ext.Discord.Entities.Interactions.Response.InteractionModalMessage)">
            <summary>
            Converts the template to a <see cref="T:Oxide.Ext.Discord.Entities.Interactions.Response.InteractionModalMessage"/>
            </summary>
            <param name="data"></param>
            <param name="modal"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.Modals.DiscordModalTemplates">
            <summary>
            Modal Templates Library
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.Modals.DiscordModalTemplates.#ctor(Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.TemplateType">
            <summary>
            Represents available template type
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Templates.TemplateType.Message">
            <summary>
            Message Template Type
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Templates.TemplateType.Embed">
            <summary>
            Embed Template Type
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Templates.TemplateType.EmbedField">
            <summary>
            Embed Field Type
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Templates.TemplateType.Modal">
            <summary>
            Modal Template Type
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Templates.TemplateType.Command">
            <summary>
            Command Template Type
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Templates.TemplateType.AutoCompleteChoice">
            <summary>
            Auto Complete Choice Template Type
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion">
            <summary>
            Version of a specific template
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion.Major">
            <summary>
            Major Version
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion.Minor">
            <summary>
            Minor Version
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion.Revision">
            <summary>
            Revision Version
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion.#ctor(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="major">Major Version</param>
            <param name="minor">Minor Version</param>
            <param name="revision">Revision Version</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion.Equals(Oxide.Ext.Discord.Libraries.Templates.TemplateVersion)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion.CompareTo(Oxide.Ext.Discord.Libraries.Templates.TemplateVersion)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion.op_Equality(Oxide.Ext.Discord.Libraries.Templates.TemplateVersion,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion)">
            <summary>
            Returns if the template versions are equal
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion.op_Inequality(Oxide.Ext.Discord.Libraries.Templates.TemplateVersion,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion)">
            <summary>
            Returns if the template versions are not equal
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion.op_LessThan(Oxide.Ext.Discord.Libraries.Templates.TemplateVersion,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion)">
            <summary>
            Returns if the left template version is less than the right
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion.op_LessThanOrEqual(Oxide.Ext.Discord.Libraries.Templates.TemplateVersion,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion)">
            <summary>
            Returns if the left template version is less than or equal the right
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion.op_GreaterThan(Oxide.Ext.Discord.Libraries.Templates.TemplateVersion,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion)">
            <summary>
            Returns if the right template version is greater than the left
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion.op_GreaterThanOrEqual(Oxide.Ext.Discord.Libraries.Templates.TemplateVersion,Oxide.Ext.Discord.Libraries.Templates.TemplateVersion)">
            <summary>
            Returns if the right template version is greater or equal than the left
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Templates.TemplateVersion.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Logging.DebugLogger">
            <summary>
            Debug Logger used for logging debug information
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.IncrementIndent">
            <summary>
            Increments the Indent
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.DecrementIndent">
            <summary>
            Decrements the Indent
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendIndent">
            <summary>
            Appends the current indent into the logger
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendFieldPrefix(System.String)">
            <summary>
            Appends the field name into the logger
            </summary>
            <param name="name">Name of the field</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendField(System.String,System.String)">
            <summary>
            Appends a field into the logger
            </summary>
            <param name="name">Name of the field</param>
            <param name="value">Value of the field</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendField(System.String,System.Int32)">
            <summary>
            Appends a field with the given name and int value
            </summary>
            <param name="name">Name of the field</param>
            <param name="value">Value of the field</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendField(System.String,System.Double)">
            <summary>
            Appends a field with the given name and double value
            </summary>
            <param name="name">Name of the field</param>
            <param name="value">Value of the field</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendField(System.String,System.Single)">
            <summary>
            Appends a field with the given name and float value
            </summary>
            <param name="name">Name of the field</param>
            <param name="value">Value of the field</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendField(System.String,System.UInt64)">
            <summary>
            Appends a field with the given name and ulong value
            </summary>
            <param name="name">Name of the field</param>
            <param name="value">Value of the field</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendField(System.String,System.Int64)">
            <summary>
            Appends a field with the given name and long value
            </summary>
            <param name="name">Name of the field</param>
            <param name="value">Value of the field</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendField(System.String,System.Boolean)">
            <summary>
            Appends a field with the given name and bool value
            </summary>
            <param name="name">Name of the field</param>
            <param name="value">Value of the field</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendField(System.String,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Appends a field with the given name and Snowflake value
            </summary>
            <param name="name">Name of the field</param>
            <param name="value">Value of the field</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendField(System.String,System.Nullable{Oxide.Ext.Discord.Entities.Snowflake})">
            <summary>
            Appends a field with the given name and Snowflake? value
            </summary>
            <param name="name">Name of the field</param>
            <param name="value">Value of the field</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendFieldEnum``1(System.String,``0)">
            <summary>
            Appends a field with the given name and enum value
            </summary>
            <param name="name">Name of the field</param>
            <param name="value">Value of the field</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendFieldOutOf(System.String,System.Int32,System.Int32)">
            <summary>
            Appends a field with the given name and int amount over int total value
            </summary>
            <param name="name">Name of the field</param>
            <param name="amount">Amount / Top value</param>
            <param name="total">Total / Bottom Value</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendMethod(System.String,System.Reflection.MethodInfo)">
            <summary>
            Appends a field with the given name and method info
            </summary>
            <param name="name">Name of the field</param>
            <param name="info">Method info to append</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendField(System.String,System.String,System.String)">
            <summary>
            Appends a field with the given name and values seperated by a space
            </summary>
            <param name="name">Name of the field</param>
            <param name="value1">First value</param>
            <param name="value2">Second value</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendField(System.String,System.TimeSpan)">
            <summary>
            Appends a field with the given name and TimeSpan value
            </summary>
            <param name="name">Name of the field</param>
            <param name="time">TimeSpan value</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendNullField(System.String)">
            <summary>
            Appends a field with the given name and Null value
            </summary>
            <param name="name">Name of the field</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendLine">
            <summary>
            Appends a line to the logger
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendLine(System.Char,System.Int32)">
            <summary>
            Appends a line to the logger with the given character repeated amount time
            </summary>
            <param name="character">Character to repeat</param>
            <param name="amount">Amount of times to repeat the character</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendLine(System.String)">
            <summary>
            Appends a line to the logger with the given string value
            </summary>
            <param name="value">Value of the line</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendChannelPath(System.String,Oxide.Ext.Discord.Entities.Guilds.DiscordGuild,Oxide.Ext.Discord.Entities.Channels.DiscordChannel,Oxide.Ext.Discord.Entities.Channels.DiscordChannel)">
            <summary>
            Appends a channel path to the logger.
            This path will include the guild name / Parent Channel Name (Optional) / Channel Name
            </summary>
            <param name="name">Name of the field</param>
            <param name="guild">Guild for the name</param>
            <param name="channel">Channel for the channel name</param>
            <param name="parent">Parent for the Parent Channel Name</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendObject(System.String,Oxide.Ext.Discord.Interfaces.Logging.IDebugLoggable)">
            <summary>
            Appends a <see cref="T:Oxide.Ext.Discord.Interfaces.Logging.IDebugLoggable"/> object to the logger with the given name
            </summary>
            <param name="name">Name of the object</param>
            <param name="obj">Object to be logged</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendList(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends an <see cref="T:System.Collections.Generic.IEnumerable`1"/> where T is string items to add to the logger
            </summary>
            <param name="name">Name of the list</param>
            <param name="items">String items to add</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendList(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Appends an <see cref="T:System.Collections.Generic.List`1"/> where T is string items to add to the logger
            </summary>
            <param name="name">Name of the list</param>
            <param name="items">String items to add</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendList``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Appends an <see cref="T:System.Collections.Generic.IEnumerable`1"/> where T is <see cref="T:Oxide.Ext.Discord.Interfaces.Logging.IDebugLoggable"/> items to add to the logger
            </summary>
            <param name="name">Name of the list</param>
            <param name="items">Loggable items to add</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.AppendList``1(System.String,System.Collections.Generic.List{``0})">
            <summary>
            Appends an <see cref="T:System.Collections.Generic.List`1"/> where T is <see cref="T:Oxide.Ext.Discord.Interfaces.Logging.IDebugLoggable"/> items to add to the logger
            </summary>
            <param name="name">Name of the list</param>
            <param name="items">Loggable items to add</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.StartArray(System.String)">
            <summary>
            Starts an array on the logger with the given name
            </summary>
            <param name="name">Name of the array</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.EndArray">
            <summary>
            Ends an array on the logger
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.StartObject(System.String)">
            <summary>
            Starts an object on the logger with the given name
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.EndObject">
            <summary>
            Ends an object on the logger
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DebugLogger.ToString">
            <summary>
            Returns the logged data as a string
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Logging.DiscordConsoleLogger">
            <summary>
            Represents a Console Logger for Discord
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DiscordConsoleLogger.AddMessage(Oxide.Ext.Discord.Logging.DiscordLogLevel,System.String,System.Exception)">
            <summary>
            Adds a message to the server console
            </summary>
            <param name="level"></param>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Logging.DiscordFileLogger">
            <summary>
            Represents a File Logger for Discord
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Logging.DiscordLogger">
            <summary>
            Represents a discord extension logger
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DiscordLogger.#ctor(Oxide.Ext.Discord.Logging.DiscordLogLevel,Oxide.Ext.Discord.Logging.IDiscordLoggingConfig,Oxide.Ext.Discord.Logging.DiscordLogHandler)">
            <summary>
            Creates a new logger with the given log level
            </summary>
            <param name="logLevel">Log level of the logger</param>
            <param name="config">Configuration for the logger</param>
            <param name="handler">Handler for the logger</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DiscordLogger.Log(Oxide.Ext.Discord.Logging.DiscordLogLevel,System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DiscordLogger.UpdateLogLevel(Oxide.Ext.Discord.Logging.DiscordLogLevel)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DiscordLogger.IsLogging(Oxide.Ext.Discord.Logging.DiscordLogLevel)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DiscordLogger.IsConsoleLogging(Oxide.Ext.Discord.Logging.DiscordLogLevel)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DiscordLogger.IsFileLogging(Oxide.Ext.Discord.Logging.DiscordLogLevel)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DiscordLogger.Shutdown">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Logging.DiscordLoggerFactory">
            <summary>
            Factory for creating DiscordLoggers
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.DiscordLoggerFactory.CreateLogger(Oxide.Core.Plugins.Plugin,Oxide.Ext.Discord.Logging.DiscordLogLevel,Oxide.Ext.Discord.Logging.IDiscordLoggingConfig)">
            <summary>
            Returns a newly created <see cref="T:Oxide.Ext.Discord.Logging.DiscordLogger"/> for a given plugin
            </summary>
            <param name="plugin">Plugin the logger is for</param>
            <param name="logLevel">The current LogLevel for the logger</param>
            <param name="config">The config for the logger</param>
            <returns><see cref="T:Oxide.Ext.Discord.Logging.DiscordLogger"/></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Logging.DiscordLogLevel">
            <summary>
            Represents the log level for a logger
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Logging.DiscordLogLevel.Verbose">
            <summary>
            Verbose log level displays all message
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Logging.DiscordLogLevel.Debug">
            <summary>
            Debug log level display all messages up to and include Debug
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Logging.DiscordLogLevel.Info">
            <summary>
            Info log level display all messages up to and include Info
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Logging.DiscordLogLevel.Warning">
            <summary>
            Warning log level display all messages up to and include Warning
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Logging.DiscordLogLevel.Error">
            <summary>
            Error log level display all messages up to and include Error
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Logging.DiscordLogLevel.Exception">
            <summary>
            Exception log level display all messages up to and include Exception
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Logging.DiscordLogLevel.Off">
            <summary>
            Disables all logging
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Logging.IDiscordLoggingConfig">
            <summary>
            Interface for Discord Logging Configuration
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Logging.IDiscordLoggingConfig.ConsoleLogLevel">
            <summary>
            Log Level for the Console
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Logging.IDiscordLoggingConfig.FileLogLevel">
            <summary>
            Log Level for file Logging
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Logging.IDiscordLoggingConfig.ConsoleLogFormat">
            <summary>
            Format for console logging
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Logging.IDiscordLoggingConfig.FileLogFormat">
            <summary>
            Format for file logging
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Logging.ILogger">
            <summary>
            Represents an interface for a logger
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.ILogger.UpdateLogLevel(Oxide.Ext.Discord.Logging.DiscordLogLevel)">
            <summary>
            Updates the log level for the current logger
            </summary>
            <param name="level">Level to update the logger to</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.ILogger.IsLogging(Oxide.Ext.Discord.Logging.DiscordLogLevel)">
            <summary>
            Returns true if the logger is logging for the passed log level
            </summary>
            <param name="level">Log Level to check</param>
            <returns>True if the logger is logging for the given log level</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.ILogger.IsConsoleLogging(Oxide.Ext.Discord.Logging.DiscordLogLevel)">
            <summary>
            Returns if the logger is logging for server console
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.ILogger.IsFileLogging(Oxide.Ext.Discord.Logging.DiscordLogLevel)">
            <summary>
            Returns if the logger is logging for file logger
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.ILogger.Log(Oxide.Ext.Discord.Logging.DiscordLogLevel,System.String,System.Exception)">
            <summary>
            Log the message with the specified level
            </summary>
            <param name="level">Log Level for the message</param>
            <param name="message">Message to log</param>
            <param name="exception">Exception for the log</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.ILogger.Shutdown">
            <summary>
            Shuts down the logger
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Network.DiscordStreamContent">
            <summary>
            Stream content that is sent over HTTP
            This is used because <see cref="T:System.Net.Http.StreamContent"/> disposes the underlying stream when disposed and we don't want that since we cache our stream
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Network.DiscordStreamContent.#ctor(System.IO.MemoryStream)">
            <summary>
            Constructor
            </summary>
            <param name="content">Stream content to send over HTTP</param>
            <exception cref="T:System.ArgumentNullException">Throws if content is null</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Network.DiscordStreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Network.DiscordStreamContent.TryComputeLength(System.Int64@)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Network.DiscordStreamContent.CreateContentReadStreamAsync">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Plugins.PluginId">
            <summary>
            Represents a Plugin ID
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Plugins.PluginId.Id">
            <summary>
            Hashcode value of the Plugin Name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Plugins.PluginId.IsValid">
            <summary>
            Returns if the PluginId is valid
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Plugins.PluginId.Equals(Oxide.Ext.Discord.Plugins.PluginId)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Plugins.PluginId.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Plugins.PluginId.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Plugins.PluginId.op_Equality(Oxide.Ext.Discord.Plugins.PluginId,Oxide.Ext.Discord.Plugins.PluginId)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Plugins.PluginId.op_Inequality(Oxide.Ext.Discord.Plugins.PluginId,Oxide.Ext.Discord.Plugins.PluginId)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Plugins.PluginId.ToString">
            <summary>
            Returns the PluginName
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Plugins.PluginId.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Plugins.Setup.PluginSetup">
            <summary>
            Build Discord Extension Setup Data for a plugin
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Plugins.Setup.PluginSetup.#ctor(Oxide.Core.Plugins.Plugin)">
            <summary>
            Constructor
            </summary>
            <param name="plugin">Plugin the data is for</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Pooling.BasePool`2">
            <summary>
            Represents a BasePool in Discord
            </summary>
            <typeparam name="TPooled">Type being pooled</typeparam>
            <typeparam name="TPool">Type of the pool</typeparam>
        </member>
        <member name="F:Oxide.Ext.Discord.Pooling.BasePool`2.PluginPool">
            <summary>
            Plugin Pool for this pool
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.BasePool`2.GetPoolSize(Oxide.Ext.Discord.Pooling.PoolSettings)">
            <summary>
            Returns the pool size from the pool settings for the pool
            </summary>
            <param name="settings"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.BasePool`2.ForPlugin(Oxide.Ext.Discord.Pooling.DiscordPluginPool)">
            <summary>
            Returns a pool for the given plugin pool
            </summary>
            <param name="pluginPool"><see cref="T:Oxide.Ext.Discord.Pooling.DiscordPluginPool"/> to get the pool from</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.BasePool`2.Get">
            <summary>
            Returns an element from the pool if it exists else it creates a new one
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.BasePool`2.CreateNew">
            <summary>
            Creates new type of T
            </summary>
            <returns>Newly created type of T</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.BasePool`2.Free(`0)">
            <summary>
            Frees an item back to the pool
            </summary>
            <param name="item">Item being freed</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.BasePool`2.OnPluginUnloaded(Oxide.Ext.Discord.Pooling.DiscordPluginPool)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.BasePool`2.ClearPoolEntities">
            <summary>
            Clears the pool of all pooled objects and resets state to when the pool was first created
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.BasePool`2.RemoveAllPools">
            <summary>
            Wipes all the pools for this type
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.BasePool`2.OnGetItem(`0)">
            <summary>
            Called when an item is retrieved from the pool
            </summary>
            <param name="item">Item being retrieved</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.BasePool`2.OnFreeItem(`0@)">
            <summary>
            Returns if an item can be freed to the pool
            </summary>
            <param name="item">Item to be freed</param>
            <returns>True if can be freed; false otherwise</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Pooling.BasePoolable">
            <summary>
            Represents a poolable object
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Pooling.BasePoolable._shouldPool">
            <summary>
            Returns if the object should be pooled.
            This field is set to true when leaving the pool.
            If the object instantiated using new() outside the pool it will be false
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.BasePoolable.EnterPool">
            <summary>
            Called when the object is returned to the pool.
            Can be overriden in child classes to cleanup used data
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.BasePoolable.LeavePool">
            <summary>
            Called when the object leaves the pool.
            Can be overriden in child classes to set the initial object state
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.BasePoolable.Dispose">
            <summary>
            Disposes the object when used in a using statement
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Pooling.DiscordPluginPool">
            <summary>
            Built in pooling for discord entities
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.#ctor(Oxide.Core.Plugins.Plugin)">
            <summary>
            Constructor
            </summary>
            <param name="plugin">Plugin the pool is for</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.SetSettings(Oxide.Ext.Discord.Pooling.PoolSettings)">
            <summary>
            Sets the settings for the pools
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.Get``1">
            <summary>
            Returns a pooled object of {T} type
            Must inherit from <see cref="T:Oxide.Ext.Discord.Pooling.BasePoolable"/> and have an empty default constructor
            </summary>
            <typeparam name="T">Type to be returned</typeparam>
            <returns>Pooled object of type T</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.Free``1(``0)">
            <summary>
            Returns a <see cref="T:Oxide.Ext.Discord.Pooling.BasePoolable"/> back into the pool
            </summary>
            <param name="value">Object to free</param>
            <typeparam name="T">Type of object being freed</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.GetList``1">
            <summary>
            Returns a pooled <see cref="T:System.Collections.Generic.List`1"/>
            </summary>
            <typeparam name="T">Type for the list</typeparam>
            <returns>Pooled List</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.FreeList``1(System.Collections.Generic.List{``0})">
            <summary>
            Free's a pooled <see cref="T:System.Collections.Generic.List`1"/>
            </summary>
            <param name="list">List to be freed</param>
            <typeparam name="T">Type of the list</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.GetHash``2">
            <summary>
            Returns a pooled <see cref="T:Oxide.Plugins.Hash`2"/>
            </summary>
            <typeparam name="TKey">Type for the key</typeparam>
            <typeparam name="TValue">Type for the value</typeparam>
            <returns>Pooled Hash</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.FreeHash``2(Oxide.Plugins.Hash{``0,``1})">
            <summary>
            Frees a pooled <see cref="T:Oxide.Plugins.Hash`2"/>
            </summary>
            <param name="hash">Hash to be freed</param>
            <typeparam name="TKey">Type for key</typeparam>
            <typeparam name="TValue">Type for value</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.GetHashSet``1">
            <summary>
            Returns a pooled <see cref="T:System.Collections.Generic.HashSet`1"/>
            </summary>
            <typeparam name="T">Type for the HashSet</typeparam>
            <returns>Pooled List</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.FreeHashSet``1(System.Collections.Generic.HashSet{``0})">
            <summary>
            Free's a pooled <see cref="T:System.Collections.Generic.HashSet`1"/>
            </summary>
            <param name="list">HashSet to be freed</param>
            <typeparam name="T">Type of the HashSet</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.GetStringBuilder">
            <summary>
            Returns a pooled <see cref="T:System.Text.StringBuilder"/>
            </summary>
            <returns>Pooled <see cref="T:System.Text.StringBuilder"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.GetStringBuilder(System.String)">
            <summary>
            Returns a pooled <see cref="T:System.Text.StringBuilder"/>
            </summary>
            <param name="initial">Initial text for the builder</param>
            <returns>Pooled <see cref="T:System.Text.StringBuilder"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.FreeStringBuilder(System.Text.StringBuilder)">
            <summary>
            Frees a <see cref="T:System.Text.StringBuilder"/> back to the pool
            </summary>
            <param name="sb">StringBuilder being freed</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.FreeStringBuilderToString(System.Text.StringBuilder)">
            <summary>
            Frees a <see cref="T:System.Text.StringBuilder"/> back to the pool returning the built <see cref="T:System.String"/>
            </summary>
            <param name="sb"><see cref="T:System.Text.StringBuilder"/> being freed</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.GetMemoryStream">
            <summary>
            Returns a pooled <see cref="T:System.IO.MemoryStream"/>
            </summary>
            <returns>Pooled <see cref="T:System.IO.MemoryStream"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.FreeMemoryStream(System.IO.MemoryStream)">
            <summary>
            Frees a <see cref="T:System.IO.MemoryStream"/> back to the pool
            </summary>
            <param name="stream"><see cref="T:System.IO.MemoryStream"/> being freed</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.GetPlaceholderData">
            <summary>
            Returns a pooled <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/>
            </summary>
            <returns>Pooled <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.FreePlaceholderData(Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData)">
            <summary>
            Frees a <see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/> back to the pool
            </summary>
            <param name="data"><see cref="T:Oxide.Ext.Discord.Libraries.Placeholders.PlaceholderData"/> being freed</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.GetBoxed``1(``0)">
            <summary>
            Returns a pooled <see cref="T:Oxide.Ext.Discord.Pooling.Entities.Boxed`1"/>
            </summary>
            <typeparam name="T">Type for the Boxed</typeparam>
            <returns>Pooled Boxed</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.DiscordPluginPool.FreeBoxed``1(Oxide.Ext.Discord.Pooling.Entities.Boxed{``0})">
            <summary>
            Free's a pooled <see cref="T:Oxide.Ext.Discord.Pooling.Pools.BoxedPool`1"/>
            </summary>
            <param name="boxed">Boxed to be freed</param>
            <typeparam name="T">Type of the Boxed</typeparam>
        </member>
        <member name="T:Oxide.Ext.Discord.Pooling.IPool">
            <summary>
            Represents a pool
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.IPool.OnPluginUnloaded(Oxide.Ext.Discord.Pooling.DiscordPluginPool)">
            <summary>
            Called on a pool when a plugin is unloaded
            </summary>
            <param name="pluginPool"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.IPool.ClearPoolEntities">
            <summary>
            Clears the pool of all items
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.IPool.RemoveAllPools">
            <summary>
            Wipes all pools of the given type
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Pooling.IPool`1">
            <summary>
            Represents a pool of type T
            </summary>
            <typeparam name="T">Type to be pooled</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.IPool`1.Get">
            <summary>
            Returns the Pooled type or a new instance if pool is empty.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.IPool`1.Free(`0)">
            <summary>
            Returns the pooled type back to the pool
            </summary>
            <param name="poolable"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Pooling.PoolSettings">
            <summary>
            Settings for the pools
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Pooling.PoolSettings.HashPoolSize">
            <summary>
            Size of the <see cref="T:Oxide.Ext.Discord.Pooling.Pools.HashPool`2"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Pooling.PoolSettings.HashSetPoolSize">
            <summary>
            Size of the <see cref="T:Oxide.Ext.Discord.Pooling.Pools.HashSetPool`1"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Pooling.PoolSettings.ListPoolSize">
            <summary>
            Size of the <see cref="T:Oxide.Ext.Discord.Pooling.Pools.ListPool`1"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Pooling.PoolSettings.MemoryStreamPoolSize">
            <summary>
            Size of the <see cref="T:Oxide.Ext.Discord.Pooling.Pools.MemoryStreamPool"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Pooling.PoolSettings.ObjectPoolSize">
            <summary>
            Size of the <see cref="T:Oxide.Ext.Discord.Pooling.Pools.ObjectPool`1"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Pooling.PoolSettings.PlaceholderDataPoolSize">
            <summary>
            Size of the <see cref="T:Oxide.Ext.Discord.Pooling.Pools.PlaceholderDataPool"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Pooling.PoolSettings.StringBuilderPoolSize">
            <summary>
            Size of the <see cref="T:Oxide.Ext.Discord.Pooling.Pools.StringBuilderPool"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Pooling.PoolSize">
            <summary>
            Represents size constraints for a pool
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Pooling.PoolSize.StartingSize">
            <summary>
            Starting size of the pool
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Pooling.PoolSize.MaxSize">
            <summary>
            Max size of the pool
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Pooling.PoolSize.IsValid">
            <summary>
            If the pool size is valid
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.PoolSize.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor settings the startingSize and maxSize
            </summary>
            <param name="startingSize">Starting size of the pool</param>
            <param name="maxSize">Max size of the pool</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.PoolSize.CanResize(System.Int32)">
            <summary>
            Returns true of the current size can be resized
            </summary>
            <param name="currentSize"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.PoolSize.GetNextSize(System.Int32)">
            <summary>
            Returns the next size for the current size
            </summary>
            <param name="currentSize"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Pooling.Pools.BoxedPool`1">
            <summary>
            Represents a pool for <see cref="T:Oxide.Ext.Discord.Pooling.Entities.Boxed`1"/>;
            </summary>
            <typeparam name="T">Type that will be in the boxed object</typeparam>
        </member>
        <member name="T:Oxide.Ext.Discord.Pooling.Pools.DiscordArrayPool`1">
            <summary>
            Represents a <see cref="T:Oxide.Ext.Discord.Pooling.Pools.DiscordArrayPool`1"/>
            </summary>
            <typeparam name="T">Type of the array pool</typeparam>
        </member>
        <member name="F:Oxide.Ext.Discord.Pooling.Pools.DiscordArrayPool`1.Shared">
            <summary>
            <see cref="T:Oxide.Ext.Discord.Pooling.Pools.DiscordArrayPool`1"/> Instance
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.Pools.DiscordArrayPool`1.Rent(System.Int32)">
            <summary>
            Rents an array from the pool
            </summary>
            <param name="minimumLength"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.Pools.DiscordArrayPool`1.Return(`0[])">
            <summary>
            Returns an array to the pool
            </summary>
            <param name="array"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Oxide.Ext.Discord.Pooling.Pools.HashPool`2">
            <summary>
            Represents a pool for Hash&lt;TKey, TValue&gt;
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.Pools.HashPool`2.OnFreeItem(Oxide.Plugins.Hash{`0,`1}@)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Pooling.Pools.HashSetPool`1">
            <summary>
            Represents a pool for Hash&lt;TKey, TValue&gt;
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.Pools.HashSetPool`1.OnFreeItem(System.Collections.Generic.HashSet{`0}@)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Pooling.Pools.ListPool`1">
            <summary>
            Represents a pool for list&lt;T&gt;
            </summary>
            <typeparam name="T">Type that will be in the list</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.Pools.ListPool`1.OnFreeItem(System.Collections.Generic.List{`0}@)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Pooling.Pools.MemoryStreamPool">
            <summary>
            Represents a pool for MemoryStream
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.Pools.MemoryStreamPool.OnFreeItem(System.IO.MemoryStream@)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Pooling.Pools.StringBuilderPool">
            <summary>
            Pool for StringBuilders
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Pooling.Pools.StringBuilderPool.OnFreeItem(System.Text.StringBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Promises.BasePromise">
            <summary>
            Represents the base class for all promises
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Promises.BasePromise.Id">
            <summary>
            ID of the promise
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Promises.BasePromise.State">
            <summary>
            Tracks the current state of the promise.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.BasePromise.Exception">
            <summary>
            The exception when the promise is rejected.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.BasePromise.Rejects">
            <summary>
            Collection of handlers for rejected promises
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.BasePromise.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.BasePromise.Reject(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.BasePromise.InvokeRejectHandlers(System.Exception)">
            <summary>
            Invoke all resolve handlers.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.BasePromise.ClearHandlers">
            <summary>
            Clears all the handlers for the promises
            Called after completion
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.BasePromise.DelayedDispose">
            <summary>
            Delays disposing the promise till NextTick
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.BasePromise.LeavePool">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.BasePromise.EnterPool">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Promises.Promise">
            <summary>
            Implements a non-generic C# promise, this is a promise that simply resolves without delivering a value.
            https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.Promise._resolves">
            <summary>
            Completed handlers that accept no value.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.#ctor">
            <summary>
            Constructor for the promise
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Create">
            <summary>
            Creates a Promise
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Resolved">
            <summary>
            Returns a promise that has been resolved
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Rejected(System.Exception)">
            <summary>
            Convert an exception directly into a rejected promise.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.ClearHandlers">
            <summary>
            Helper function clear out all handlers after resolution or rejection.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.InvokeResolveHandlers">
            <summary>
            Invoke all resolve handlers.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Resolve">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Catch(System.Action{System.Exception})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Catch``1(System.Action{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Then``1(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Then(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Then(System.Action)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Then``1(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}},System.Func{System.Exception,Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Then(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise},System.Action{System.Exception})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Then(Oxide.Ext.Discord.Interfaces.Promises.IPromise)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Then(System.Action,System.Action{System.Exception})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.AddHandlers(Oxide.Ext.Discord.Promises.ResolveHandler,Oxide.Ext.Discord.Promises.RejectHandler)">
            <summary>
            Helper function to invoke or register resolve/reject handlers.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.ThenAll(System.Func{System.Collections.Generic.IEnumerable{Oxide.Ext.Discord.Interfaces.Promises.IPromise}})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.ThenAll``1(System.Func{System.Collections.Generic.IEnumerable{Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}}})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.All(Oxide.Ext.Discord.Interfaces.Promises.IPromise[])">
            <summary>
            Returns a promise that resolves when all of the promises in the enumerable argument have resolved.
            Returns a promise of a collection of the resolved results.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.All(System.Collections.Generic.IEnumerable{Oxide.Ext.Discord.Interfaces.Promises.IPromise})">
            <summary>
            Returns a promise that resolves when all of the promises in the enumerable argument have resolved.
            Returns a promise of a collection of the resolved results.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.ThenSequence(System.Func{System.Collections.Generic.IEnumerable{System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise}}})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Sequence(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise}[])">
            <summary>
            Chain a number of operations using promises.
            Takes a number of functions each of which starts an async operation and yields a promise.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Sequence(System.Collections.Generic.IEnumerable{System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise}})">
            <summary>
            Chain a sequence of operations using promises.
            Takes a collection of functions each of which starts an async operation and yields a promise.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.Finally(System.Action)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.ContinueWith(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.ContinueWith``1(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise.EnterPool">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Promises.PromiseState">
            <summary>
            Specifies the state of a promise.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.PromiseState.Pending">
            The promise is in-flight.
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.PromiseState.Rejected">
            The promise has been rejected.
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.PromiseState.Resolved">
            The promise has been resolved.
        </member>
        <member name="T:Oxide.Ext.Discord.Promises.Promise`1">
            <summary>
            Implements a C# promise.
            https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.Promise`1._resolveValue">
            <summary>
            The value when the promises is resolved.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.Promise`1._resolves">
            <summary>
            Completed handlers that accept a value.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Create">
            <summary>
            Returns a promise that is currently pending
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Create``1">
            <summary>
            Returns a promise that is currently pending
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Create(System.Action{System.Action{`0},System.Action{System.Exception}})">
            <summary>
            
            </summary>
            <param name="resolver"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Resolved(`0)">
            <summary>
            Convert a simple value directly into a resolved promise.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Rejected(System.Exception)">
            <summary>
            Convert an exception directly into a rejected promise.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Resolve(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.InvokeResolveHandlers(`0)">
            <summary>
            Invoke all resolve handlers.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Catch(System.Action{System.Exception})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Catch``1(System.Action{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Catch(System.Func{System.Exception,`0})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Then``1(System.Func{`0,Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Then(System.Action{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Then``1(System.Func{`0,Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}},System.Func{System.Exception,Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Then(System.Func{`0,Oxide.Ext.Discord.Interfaces.Promises.IPromise},System.Action{System.Exception})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Then(Oxide.Ext.Discord.Interfaces.Promises.IPromise{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Then(System.Action{`0},System.Action{System.Exception})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Then``1(System.Func{`0,``0})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.AddHandlers(Oxide.Ext.Discord.Promises.ResolveHandler{`0},Oxide.Ext.Discord.Promises.RejectHandler)">
            <summary>
            Helper function to invoke or register resolve/reject handlers.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.ThenAll``1(System.Func{`0,System.Collections.Generic.IEnumerable{Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}}})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.ThenAll(System.Func{`0,System.Collections.Generic.IEnumerable{Oxide.Ext.Discord.Interfaces.Promises.IPromise}})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.All(Oxide.Ext.Discord.Interfaces.Promises.IPromise{`0}[])">
            <summary>
            Returns a promise that resolves when all of the promises in the enumerable argument have resolved.
            Returns a promise of a collection of the resolved results.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.All(System.Collections.Generic.IEnumerable{Oxide.Ext.Discord.Interfaces.Promises.IPromise{`0}})">
            <summary>
            Returns a promise that resolves when all of the promises in the enumerable argument have resolved.
            Returns a promise of a collection of the resolved results.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.Finally(System.Action)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.ContinueWith(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.ContinueWith``1(System.Func{Oxide.Ext.Discord.Interfaces.Promises.IPromise{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.ClearHandlers">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Promise`1.EnterPool">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Promises.RejectHandler">
            <summary>
            Represents a handler invoked when the promise is rejected.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.RejectHandler._callback">
            <summary>
            Callback fn.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.RejectHandler._rejectable">
            <summary>
            The promise that is rejected when there is an error while invoking the handler.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Promises.ResolveHandler">
            <summary>
            Represents a handler invoked when the promise is resolved.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.ResolveHandler._resolve">
            <summary>
            Callback fn.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.ResolveHandler._rejectable">
            <summary>
            The promise that is rejected when there is an error while invoking the handler.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Promises.ResolveHandler`1">
            <summary>
            Represents a handler invoked when the promise is resolved.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.ResolveHandler`1._resolve">
            <summary>
            Callback fn.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.ResolveHandler`1._rejectable">
            <summary>
            The promise that is rejected when there is an error while invoking the handler.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.Timer.BaseTimerInstance.PendingPromise">
            <summary>
            The pending promise which is an interface for a promise that can be rejected or resolved.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.Timer.EventTimerInstance._predicate">
            <summary>
            Predicate for resolving the promise
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.Timer.EventTimerInstance._timeStarted">
            <summary>
            The time the promise was started
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Promises.Timer.PromiseTimer">
            <summary>
            Timer Implementation using promises
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.Timer.PromiseTimer._currentTime">
            <summary>
            The current running total for time that this PromiseTimer has run for
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Promises.Timer.PromiseTimer._waiting">
            <summary>
            Currently pending promises
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Timer.PromiseTimer.WaitFor(System.Single)">
            <summary>
            Resolve the returned promise once the time has elapsed
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Timer.PromiseTimer.WaitWhile(System.Func{System.Single,System.Boolean})">
            <summary>
            Resolve the returned promise once the predicate evaluates to false
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Timer.PromiseTimer.WaitUntil(System.Func{System.Single,System.Boolean})">
            <summary>
            Resolve the returned promise once the predicate evaluates to true
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Timer.PromiseTimer.Cancel(Oxide.Ext.Discord.Interfaces.Promises.IPromise)">
            <summary>
            Cancel a waiting promise and reject it immediately.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Promises.Timer.PromiseTimer.Update(System.Single)">
            <summary>
            Update all pending promises. Must be called for the promises to progress and resolve at all.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.RateLimits.BaseRateLimit">
            <summary>
            Represents a base rate limit for websocket and rest api requests
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.RateLimits.BaseRateLimit.NumRequests">
            <summary>
            The number of requests that have executed since the last reset
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.RateLimits.BaseRateLimit.LastReset">
            <summary>
            Returns when the last reset occured
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.RateLimits.BaseRateLimit.MaxRequests">
            <summary>
            The max number of requests this rate limit can handle per interval
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.RateLimits.BaseRateLimit.ResetInterval">
            <summary>
            The interval in which this resets at
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.RateLimits.BaseRateLimit.Logger">
            <summary>
            Logger for the rate limit
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.RateLimits.BaseRateLimit.#ctor(System.Int32,System.Int64,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Base Rate Limit Constructor
            </summary>
            <param name="maxRequests">Max requests per interval</param>
            <param name="interval">Reset Interval in milliseconds</param>
            <param name="logger">Logger</param>
        </member>
        <member name="M:Oxide.Ext.Discord.RateLimits.BaseRateLimit.NextReset">
            <summary>
            Returns the next reset for the rate limit
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.RateLimits.BaseRateLimit.FiredRequestInternal">
            <summary>
            Called when an API request is fired
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.RateLimits.BaseRateLimit.OnRateLimitReset">
            <summary>
            Called when the rate limit is reset
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.RateLimits.BaseRateLimit.HasReachedRateLimit">
            <summary>
            Returns true if we have reached the global rate limit 
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.RateLimits.BaseRateLimit.Shutdown">
            <summary>
            Called when a bot is shutting down
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.RateLimits.RestRateLimit">
            <summary>
            Represents a rate limit for rest requests
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.RateLimits.RestRateLimit.#ctor(Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Constructor for RestRateLimit
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.RateLimits.RestRateLimit.ReachedRateLimit(System.DateTimeOffset)">
            <summary>
            Called if we receive a header notifying us of hitting the rate limit
            </summary>
            <param name="retryAfter">How long until we should retry API request again</param>
        </member>
        <member name="M:Oxide.Ext.Discord.RateLimits.RestRateLimit.OnRateLimitReset">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.RateLimits.RestRateLimit.NextReset">
            <summary>
            Returns how long until the current rate limit period will expire
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.RateLimits.RestRateLimit.FiredRequest">
            <summary>
            Called when an API request is fired
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.RateLimits.WebsocketRateLimit">
            <summary>
            Represents a WebSocket Rate Limit
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.RateLimits.WebsocketRateLimit.#ctor(Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Constructor for WebsocketRateLimit
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.RateLimits.WebsocketRateLimit.FiredRequest(Oxide.Ext.Discord.Entities.Gateway.Commands.WebSocketCommand)">
            <summary>
            Called when an API request is fired
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.RateLimits.WebsocketRateLimit.CanFireRequest(Oxide.Ext.Discord.Entities.Gateway.Commands.WebSocketCommand)">
            <summary>
            Returns if the client can return the given command.
            This is used to limit plugins to a certain number of websocket commands per rate limit tick
            </summary>
            <param name="command">Command that is to be ran</param>
            <returns>True if the command can run; False otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.RateLimits.WebsocketRateLimit.OnRateLimitReset">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Rest.Buckets.Bucket">
            <summary>
            Contains bucket information for a REST API Bucket
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Buckets.Bucket.Id">
            <summary>
            The ID of this bucket which is based on the route
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Buckets.Bucket.Limit">
            <summary>
            The number of requests that can be made per rate limit reset
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Buckets.Bucket.Remaining">
            <summary>
            How many requests are remaining before hitting the rate limit for the bucket
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Buckets.Bucket.ResetAt">
            <summary>
            How long until the rate limit resets
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Buckets.Bucket.Init(Oxide.Ext.Discord.Rest.Buckets.BucketId,Oxide.Ext.Discord.Rest.RestHandler,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Creates a new bucket for the given <see cref="T:Oxide.Ext.Discord.Rest.RestHandler"/>
            </summary>
            <param name="bucketId">ID of the bucket. If not a known bucket then will be part of the route. If know bucket will be the Discord bucket ID</param>
            <param name="rest">The handler that owns this Bucket</param>
            <param name="logger">Logger for this bucket</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Buckets.Bucket.QueueRequest(Oxide.Ext.Discord.Rest.Requests.RequestHandler)">
            <summary>
            Queues a new request for the buck
            </summary>
            <param name="handler"><see cref="T:Oxide.Ext.Discord.Rest.Requests.RequestHandler"/> to be queued</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Buckets.Bucket.LeavePool">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Buckets.Bucket.EnterPool">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Buckets.Bucket.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Rest.Buckets.BucketId">
            <summary>
            Represents an ID for a bucket
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Buckets.BucketId.Id">
            <summary>
            ID of the bucket
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Rest.Buckets.BucketId.IsValid">
            <summary>
            If the bucket ID is valid
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Buckets.BucketId.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="id">ID of the bucket</param>
            <exception cref="T:System.ArgumentNullException">Thrown if ID is null or empty</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Buckets.BucketId.Equals(Oxide.Ext.Discord.Rest.Buckets.BucketId)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Buckets.BucketId.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Buckets.BucketId.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Buckets.BucketId.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Buckets.BucketId.op_Equality(Oxide.Ext.Discord.Rest.Buckets.BucketId,Oxide.Ext.Discord.Rest.Buckets.BucketId)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Buckets.BucketId.op_Inequality(Oxide.Ext.Discord.Rest.Buckets.BucketId,Oxide.Ext.Discord.Rest.Buckets.BucketId)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Rest.Requests.BaseRequest">
            <summary>
            Represents a base request class for REST API calls
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.BaseRequest.Id">
            <summary>
            ID of the request. Generated from the DateTimeOffset when the request was created
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.BaseRequest.Method">
            <summary>
            HTTP request method
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.BaseRequest.Status">
            <summary>
            Current status of the request
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.BaseRequest.Route">
            <summary>
            Route on the API
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.BaseRequest.Data">
            <summary>
            Data to be sent with the request
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.BaseRequest.Client">
            <summary>
            Discord Client making the request
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.BaseRequest._errorResetAt">
            <summary>
            How long to wait before retrying request since there was a web exception
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.BaseRequest.Logger">
            <summary>
            Logger for the request
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.BaseRequest.Init(Oxide.Ext.Discord.Clients.DiscordClient,System.Net.Http.HttpClient,Oxide.Core.Libraries.RequestMethod,System.String,System.Object)">
            <summary>
            Initializes the request
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.BaseRequest.OnRequestSuccess(Oxide.Ext.Discord.Entities.Api.RequestResponse)">
            <summary>
            Callback for successful API Calls
            </summary>
            <param name="response">Response for the API Call</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.BaseRequest.OnRequestError(Oxide.Ext.Discord.Entities.Api.RequestResponse)">
            <summary>
            Callback for API calls that error
            </summary>
            <param name="response">Response for the error</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.BaseRequest.EnterPool">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.BaseRequest.LeavePool">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.BaseRequest.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Rest.Requests.Request">
            <summary>
            Represents a Request that does not return data
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.Request.CreateRequest(Oxide.Ext.Discord.Pooling.DiscordPluginPool,Oxide.Ext.Discord.Clients.DiscordClient,System.Net.Http.HttpClient,Oxide.Core.Libraries.RequestMethod,System.String,System.Object,Oxide.Ext.Discord.Interfaces.Promises.IPendingPromise)">
            <summary>
            Creates a REST API request that returns type of T from the response
            </summary>
            <param name="pluginPool"><see cref="T:Oxide.Ext.Discord.Pooling.DiscordPluginPool"/> for the request</param>
            <param name="client">Client making the request</param>
            <param name="httpClient"><see cref="T:System.Net.Http.HttpClient"/> for the request</param>
            <param name="method">HTTP web method</param>
            <param name="route">Route for the request</param>
            <param name="data">Data being passed into the request. Null if no data is passed</param>
            <param name="promise">Promise for the request</param>
            <returns>A <see cref="T:Oxide.Ext.Discord.Rest.Requests.Request`1"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.Request.OnRequestSuccess(Oxide.Ext.Discord.Entities.Api.RequestResponse)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.Request.OnRequestError(Oxide.Ext.Discord.Entities.Api.RequestResponse)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.Request.EnterPool">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Rest.Requests.RequestCompletedStatus">
            <summary>
            Represents the completed status for the request
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.RequestCompletedStatus.Success">
            <summary>
            The request completed successfully
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.RequestCompletedStatus.ErrorFatal">
            <summary>
            The request encountered a fatal error
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.RequestCompletedStatus.ErrorRetry">
            <summary>
            The error attempt multiple times to complete the request and was unsuccessful
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.RequestCompletedStatus.Cancelled">
            <summary>
            The request was cancelled. The <see cref="T:Oxide.Ext.Discord.Clients.DiscordClient"/> was disconnected while making the request
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Rest.Requests.RequestHandler">
            <summary>
            Represent a Discord API request
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.RequestHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.RequestHandler.StartRequest(Oxide.Ext.Discord.Rest.RestHandler,Oxide.Ext.Discord.Rest.Requests.BaseRequest)">
            <summary>
            Creates a new <see cref="T:Oxide.Ext.Discord.Rest.Requests.RequestHandler"/>
            </summary>
            <param name="rest">Rest handler for the request</param>
            <param name="request">Request to be handled by this handler</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.RequestHandler.FireRequest">
            <summary>
            Fires the request off
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.RequestHandler.Abort">
            <summary>
            Aborts a currently running request
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.RequestHandler.EnterPool">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.RequestHandler.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Rest.Requests.RequestStatus">
            <summary>
            Discord API Request Status
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.RequestStatus.InQueue">
            <summary>
            Request is in the queue waiting to be processed
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.RequestStatus.PendingBucket">
            <summary>
            Requesting is waiting for bucket to be ready
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.RequestStatus.PendingStart">
            <summary>
            Request is waiting to start
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.RequestStatus.InProgress">
            <summary>
            Request is in progress
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.RequestStatus.Completed">
            <summary>
            Request completed and was not cancelled
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Rest.Requests.Request`1">
            <summary>
            Represents a REST API request that returns {T} data
            </summary>
            <typeparam name="T">Data to be returned</typeparam>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.Requests.Request`1._promise">
            <summary>
            Callback to call if the request completed successfully
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.Request`1.CreateRequest(Oxide.Ext.Discord.Pooling.DiscordPluginPool,Oxide.Ext.Discord.Clients.DiscordClient,System.Net.Http.HttpClient,Oxide.Core.Libraries.RequestMethod,System.String,System.Object,Oxide.Ext.Discord.Interfaces.Promises.IPendingPromise{`0})">
            <summary>
            Creates a REST API request that returns type of T from the response
            </summary>
            <param name="pluginPool"><see cref="T:Oxide.Ext.Discord.Pooling.DiscordPluginPool"/> for the request</param>
            <param name="client">Client making the request</param>
            <param name="httpClient"><see cref="T:System.Net.Http.HttpClient"/> for the request</param>
            <param name="method">HTTP web method</param>
            <param name="route">Route for the request</param>
            <param name="data">Data being passed into the request. Null if no data is passed</param>
            <param name="promise">Promise for the request</param>
            <returns>A <see cref="T:Oxide.Ext.Discord.Rest.Requests.Request`1"/></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.Request`1.OnRequestSuccess(Oxide.Ext.Discord.Entities.Api.RequestResponse)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.Request`1.OnRequestError(Oxide.Ext.Discord.Entities.Api.RequestResponse)">
            <inheritdoc/>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.Requests.Request`1.EnterPool">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Rest.RestHandler">
            <summary>
            Represents a REST handler for a bot
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.RestHandler.Client">
            <summary>
            <see cref="T:System.Net.Http.HttpClient"/> for API Requests
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.RestHandler.RateLimit">
            <summary>
            Global Rate Limit for the bot
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.RestHandler.Buckets">
            <summary>
            Buckets with Routes we don't know the Hash of yet
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Rest.RestHandler.RouteToBucketId">
            <summary>
            Route to Bucket ID
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.#ctor(Oxide.Ext.Discord.Clients.BotClient,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Creates a new REST handler for a bot client
            </summary>
            <param name="client">Client the request is for</param>
            <param name="logger">Logger from the client</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.Get``1(Oxide.Ext.Discord.Clients.DiscordClient,System.String)">
            <summary>
            Performs a HTTP Get Request with TResult response
            </summary>
            <param name="client">Client for the request</param>
            <param name="url">Url for the request</param>
            <typeparam name="TResult">Result to be returned from the request</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.Post(Oxide.Ext.Discord.Clients.DiscordClient,System.String,System.Object)">
            <summary>
            Performs a HTTP Post Request
            </summary>
            <param name="client">Client for the request</param>
            <param name="url">Url for the request</param>
            <param name="data">Data to post</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.Post``1(Oxide.Ext.Discord.Clients.DiscordClient,System.String,System.Object)">
            <summary>
            Performs a HTTP Post Request with TResult response
            </summary>
            <param name="client">Client for the request</param>
            <param name="url">Url for the request</param>
            <param name="data">Data to post</param>
            <typeparam name="TResult">Result to be returned from the request</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.Put(Oxide.Ext.Discord.Clients.DiscordClient,System.String,System.Object)">
            <summary>
            Performs a HTTP Put Request
            </summary>
            <param name="client">Client for the request</param>
            <param name="url">Url for the request</param>
            <param name="data">Data to put</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.Put``1(Oxide.Ext.Discord.Clients.DiscordClient,System.String,System.Object)">
            <summary>
            Performs a HTTP Put Request with TResult response
            </summary>
            <param name="client">Client for the request</param>
            <param name="url">Url for the request</param>
            <param name="data">Data to put</param>
            <typeparam name="TResult">Result to be returned from the request</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.Patch(Oxide.Ext.Discord.Clients.DiscordClient,System.String,System.Object)">
            <summary>
            Performs a HTTP Patch Request
            </summary>
            <param name="client">Client for the request</param>
            <param name="url">Url for the request</param>
            <param name="data">Data to patch</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.Patch``1(Oxide.Ext.Discord.Clients.DiscordClient,System.String,System.Object)">
            <summary>
            Performs a HTTP Patch Request with TResult response
            </summary>
            <param name="client">Client for the request</param>
            <param name="url">Url for the request</param>
            <param name="data">Data to patch</param>
            <typeparam name="TResult">Result to be returned from the request</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.Delete(Oxide.Ext.Discord.Clients.DiscordClient,System.String)">
            <summary>
            Performs a HTTP Delete Request
            </summary>
            <param name="client">Client for the request</param>
            <param name="url">Url for the request</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.Delete``1(Oxide.Ext.Discord.Clients.DiscordClient,System.String)">
            <summary>
            Performs a HTTP Delete Request with TResult response
            </summary>
            <param name="client">Client for the request</param>
            <param name="url">Url for the request</param>
            <typeparam name="TResult">Result to be returned from the request</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.CreateRequest(Oxide.Ext.Discord.Clients.DiscordClient,System.String,Oxide.Core.Libraries.RequestMethod,System.Object)">
            <summary>
            Creates a new request and queues it to be ran
            </summary>
            <param name="client">Client making the request</param>
            <param name="url">URL of the request</param>
            <param name="method">HTTP method of the request</param>
            <param name="data">Data to be sent with the request</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.CreateRequest``1(Oxide.Ext.Discord.Clients.DiscordClient,System.String,Oxide.Core.Libraries.RequestMethod,System.Object)">
            <summary>
            Creates a new request and queues it to be ran
            </summary>
            <param name="client">Client making the request</param>
            <param name="url">URL of the request</param>
            <param name="method">HTTP method of the request</param>
            <param name="data">Data to be sent with the request</param>
            <typeparam name="T">The type that is expected to be returned</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.StartRequest(Oxide.Ext.Discord.Rest.Requests.BaseRequest)">
            <summary>
            Starts the request
            </summary>
            <param name="request">Request to be started</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.QueueBucket(Oxide.Ext.Discord.Rest.Requests.RequestHandler,Oxide.Ext.Discord.Rest.Requests.BaseRequest)">
            <summary>
            Queues the request for the bucket
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.GetBucket(Oxide.Ext.Discord.Rest.Buckets.BucketId)">
            <summary>
            Returns the bucket with the given ID
            </summary>
            <param name="bucketId"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.Shutdown">
            <summary>
            Shutdown the REST handler
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Rest.RestHandler.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.Singleton.Singleton`1">
            <summary>
            Represents a singleton of type {T}
            </summary>
            <typeparam name="T">Type of the singleton</typeparam>
        </member>
        <member name="F:Oxide.Ext.Discord.Singleton.Singleton`1.Instance">
            <summary>
            Retrieves the instance of the singleton
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Trie.Node`1.GetData">
            <summary>
            Gets the data of the whole sub-tree rooted on this node.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Trie.UkkonenTrie`1">
            <summary>
            A Ukkonen Suffix Trie
            </summary>
            <typeparam name="T">Type to store in the Trie</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Trie.UkkonenTrie`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Trie.UkkonenTrie`1.#ctor(System.Func{`0,`0,System.Boolean})">
            <summary>
            Constructor
            </summary>
            <param name="equalsFunc">Function to match values when removing</param>
        </member>
        <member name="P:Oxide.Ext.Discord.Trie.UkkonenTrie`1.Size">
            <summary>
            Size of the Trie
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Trie.UkkonenTrie`1.Search(System.String)">
            <summary>
            Search the trie for search value
            </summary>
            <param name="search">Text to search for</param>
            <returns><see cref="T:System.Collections.Generic.IEnumerable`1"/> of matches</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Trie.UkkonenTrie`1.Add(System.String,`0)">
            <summary>
            Add a new record into the trie
            </summary>
            <param name="key">Key for the record</param>
            <param name="value">Value to be added</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Trie.UkkonenTrie`1.Remove(System.String,`0)">
            <summary>
            Removes a record from the trie
            </summary>
            <param name="key">Key for the record</param>
            <param name="value">Value of the record</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Types.BidirectionalDictionary`2">
            <summary>
            A Dictionary that stores the keys -> values and values -> keys
            </summary>
            <typeparam name="TKey">Type of the key</typeparam>
            <typeparam name="TValue">Type of the value</typeparam>
        </member>
        <member name="P:Oxide.Ext.Discord.Types.BidirectionalDictionary`2.Count">
            <summary>
            Count of the 
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Types.BidirectionalDictionary`2.ContainsKey(`0)">
            <summary>
            Returns true of the dictionary contains the given key
            </summary>
            <param name="key">Key to check for</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Types.BidirectionalDictionary`2.ContainsKey(`1)">
            <summary>
            Returns true of the dictionary contains the given key
            </summary>
            <param name="key">Key to check for</param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.WebSockets.DiscordWebSocket">
            <summary>
            Represents a websocket that connects to discord
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebSocket._sessionId">
            <summary>
            The current session ID for the connected bot
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebSocket._resumeSessionUrl">
            <summary>
            The URL to use when resuming a session
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.ShouldReconnect">
            <summary>
            If we should attempt to reconnect to discord on disconnect
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.ShouldResume">
            <summary>
            If we should attempt to resume our previous session after connecting
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebSocket._sequence">
            <summary>
            The current sequence number for the websocket
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.SocketHasConnected">
            <summary>
            If the bot has successfully connected to the websocket at least once
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.#ctor(Oxide.Ext.Discord.Clients.BotClient,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Socket used by the BotClient
            </summary>
            <param name="client">Client using the socket</param>
            <param name="logger">Logger for the bot client</param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.Connect">
            <summary>
            Connect to the websocket
            </summary>
            <exception cref="T:System.Exception">Thrown if the socket still exists. Must call disconnect before trying to connect</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.Disconnect(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Disconnects the websocket from discord
            </summary>
            <param name="reconnect">Should we attempt to reconnect to discord after disconnecting</param>
            <param name="resume">Should we attempt to resume our previous session</param>
            <param name="requested">If discord requested that we reconnect to discord</param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.IsCurrentSocket(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns if the given websocket matches our current websocket.
            If socket is null we return false
            </summary>
            <param name="webSocketId">ID of the socket</param>
            <returns>True if current socket is not null and socket matches current socket; False otherwise.</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.Shutdown">
            <summary>
            Shutdowns the websocket completely. Used when bot is being shutdown
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.Send(Oxide.Ext.Discord.Clients.DiscordClient,Oxide.Ext.Discord.Entities.Gateway.Commands.GatewayCommandCode,System.Object)">
            <summary>
            Send a command to discord over the websocket
            </summary>
            <param name="client">Client sending the command</param>
            <param name="opCode">Command code to send</param>
            <param name="data">Data to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.SendImmediatelyAsync(Oxide.Ext.Discord.Entities.Gateway.Commands.GatewayCommandCode,System.Object)">
            <summary>
            Send a command to discord over the websocket
            </summary>
            <param name="opCode">Command code to send</param>
            <param name="data">Data to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.ReconnectIfRequested">
            <summary>
            Reconnected to the websocket is a reconnect is requested and we are not shutting down
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.Identify">
            <summary>
            Used to Identify the bot with discord
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.Resume">
            <summary>
            Used to resume the current session with discord
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.SendHeartbeat">
            <summary>
            Sends a heartbeat to Discord
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.IsConnecting">
            <summary>
            Returns if the websocket is in the connecting state
            </summary>
            <returns>Returns if the websocket is in connecting state</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.IsConnected">
            <summary>
            Returns if the websocket is in the open state
            </summary>
            <returns>Returns if the websocket is in open state</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.IsPendingReconnect">
            <summary>
            Returns if the socket is waiting to reconnect
            </summary>
            <returns>Returns if the socket is waiting to reconnect</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.IsDisconnecting">
            <summary>
            Returns if the websocket is null or is currently closing / closed
            </summary>
            <returns>Returns if the websocket is null or is currently closing / closed</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.IsDisconnected">
            <summary>
            Returns if the websocket is null or is currently closing / closed
            </summary>
            <returns>Returns if the websocket is null or is currently closing / closed</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.DiscordWebSocket.LogDebug(Oxide.Ext.Discord.Logging.DebugLogger)">
            <inheritdoc/>
        </member>
        <member name="T:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-close-event-codes">Socket Close Event Codes</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.UnknownError">
            <summary>
            We're not sure what went wrong. Try reconnecting?
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.UnknownOpcode">
            <summary>
            You sent an invalid Gateway opcode or an invalid payload for an opcode. Don't do that!
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.DecodeError">
            <summary>
            You sent an invalid payload to us. Don't do that!
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.NotAuthenticated">
            <summary>
            You sent us a payload prior to identifying.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.AuthenticationFailed">
            <summary>
            The account token sent with your identify payload is incorrect.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.AlreadyAuthenticated">
            <summary>
            You sent more than one identify payload. Don't do that!
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.InvalidSequence">
            <summary>
            The sequence sent when resuming the session was invalid. Reconnect and start a new session.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.RateLimited">
            <summary>
            Woah nelly! You're sending payloads to us too quickly. Slow it down! You will be disconnected on receiving this.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.SessionTimedOut">
            <summary>
            Your session timed out. Reconnect and start a new one.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.InvalidShard">
            <summary>
            You sent us an invalid shard when identifying.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.ShardingRequired">
            <summary>
            The session would have handled too many guilds - you are required to shard your connection in order to connect.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.InvalidApiVersion">
            <summary>
            You sent an invalid version for the gateway.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.InvalidIntents">
            <summary>
            You sent an invalid intent for a Gateway Intent. You may have incorrectly calculated the bitwise value.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.DisallowedIntent">
            <summary>
            You sent a disallowed intent for a Gateway Intent. You may have tried to specify an intent that you have not enabled or are not whitelisted for.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.DiscordExtensionReconnect">
            <summary>
            Used to identify a reconnect should occur to discord
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.DiscordWebsocketCloseCode.UnknownCloseCode">
            <summary>
            Used when a code is sent that we don't have yet.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#commands-and-events-gateway-events">Gateway Event Codes</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.Unknown">
            <summary>
            Used when we don't have a matching Dispatch Code
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.Ready">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#ready">READY</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.Resumed">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#resumed">RESUMED</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.ChannelCreated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#channel-create">CHANNEL_CREATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.ChannelUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#channel-update">CHANNEL_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.ChannelDeleted">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#channel-delete">CHANNEL_DELETE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.ChannelPinsUpdate">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#channel-pins-update">CHANNEL_PINS_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildCreated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-create">GUILD_CREATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-update">GUILD_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildDeleted">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-delete">GUILD_DELETE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildBanAdded">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-ban-add">GUILD_BAN_ADD</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildBanRemoved">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-ban-remove">GUILD_BAN_REMOVE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildEmojisUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-emojis-update">GUILD_EMOJIS_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildStickersUpdate">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-stickers-update">GUILD_STICKERS_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildIntegrationsUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-integrations-update">GUILD_INTEGRATIONS_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildMemberAdded">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-member-add">GUILD_MEMBER_ADD</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildMemberRemoved">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-member-remove">GUILD_MEMBER_REMOVE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildMemberUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-member-update">GUILD_MEMBER_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildMembersChunk">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-members-chunk">GUILD_MEMBERS_CHUNK</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildRoleCreated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-role-create">GUILD_ROLE_CREATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildRoleUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-role-update">GUILD_ROLE_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildRoleDeleted">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-role-delete">GUILD_ROLE_DELETE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildScheduledEventCreate">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-scheduled-event-create">GUILD_SCHEDULED_EVENT_CREATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildScheduledEventUpdate">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-scheduled-event-update">GUILD_SCHEDULED_EVENT_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildScheduledEventDelete">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-scheduled-event-delete">GUILD_SCHEDULED_EVENT_DELETE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildScheduledEventUserAdd">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-scheduled-event-user-add">GUILD_SCHEDULED_EVENT_USER_ADD</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.GuildScheduledEventUserRemove">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#guild-scheduled-event-user-remove">GUILD_SCHEDULED_EVENT_USER_REMOVE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.IntegrationCreated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#integration-create">INTEGRATION_CREATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.IntegrationUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#integration-update">INTEGRATION_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.IntegrationDeleted">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#integration-delete">INTEGRATION_DELETE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.MessageCreated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#message-create">MESSAGE_CREATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.MessageUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#message-update">MESSAGE_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.MessageDeleted">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#message-delete">MESSAGE_DELETE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.MessageBulkDeleted">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#message-delete-bulk">MESSAGE_DELETE_BULK</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.MessageReactionAdded">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#message-reaction-add">MESSAGE_REACTION_ADD</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.MessageReactionRemoved">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#message-reaction-remove">MESSAGE_REACTION_REMOVE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.MessageReactionAllRemoved">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#message-reaction-remove-all">MESSAGE_REACTION_REMOVE_ALL</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.MessageReactionEmojiRemoved">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#message-reaction-remove-emoji">MESSAGE_REACTION_REMOVE_EMOJI</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.PresenceUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#presence-update">PRESENCE_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.PresenceReplace">
            <summary>
            Represents the <a href="">PRESENCES_REPLACE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.TypingStarted">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#typing-start">TYPING_START</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.UserUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#user-update">USER_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.VoiceStateUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#voice-state-update">VOICE_STATE_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.VoiceServerUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#voice-server-update">VOICE_SERVER_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.WebhooksUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#webhooks-update">WEBHOOKS_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.InviteCreated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#invite-create">INVITE_CREATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.InviteDeleted">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#invite-delete">INVITE_DELETE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.ApplicationCommandsPermissionsUpdate">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#application-command-permissions-update">APPLICATION_COMMANDS_PERMISSIONS_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.InteractionCreated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#interaction-create">INTERACTION_CREATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.ThreadCreated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#thread-create">THREAD_CREATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.ThreadUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#thread-update">THREAD_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.ThreadDeleted">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#thread-delete">THREAD_DELETE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.ThreadListSync">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#thread-list-sync">THREAD_LIST_SYNC</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.ThreadMemberUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#thread-member-update">THREAD_MEMBER_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.ThreadMembersUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#thread-members-update">THREAD_MEMBERS_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.StageInstanceCreated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#stage-instance-create">STAGE_INSTANCE_CREATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.StageInstanceUpdated">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#stage-instance-update">STAGE_INSTANCE_CREATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.StageInstanceDeleted">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#stage-instance-delete">STAGE_INSTANCE_CREATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.AutoModerationRuleCreate">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#auto-moderation-rule-create">AUTO_MODERATION_RULE_CREATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.AutoModerationRuleUpdate">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#auto-moderation-rule-update">AUTO_MODERATION_RULE_UPDATE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.AutoModerationRuleDelete">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#auto-moderation-rule-delete">AUTO_MODERATION_RULE_DELETE</a> gateway event
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordDispatchCode.AutoModerationActionExecution">
            <summary>
            Represents the <a href="https://discord.com/developers/docs/topics/gateway#auto-moderation-action-execution">AUTO_MODERATION_ACTION_EXECUTION</a> gateway event
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.WebSockets.Handlers.DiscordHeartbeatHandler">
            <summary>
            Handles the heartbeating for the websocket connection
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Handlers.DiscordHeartbeatHandler._heartbeatAcknowledged">
            <summary>
            Discord Acknowledged our heartbeat successfully 
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.DiscordHeartbeatHandler.#ctor(Oxide.Ext.Discord.Clients.BotClient,Oxide.Ext.Discord.WebSockets.DiscordWebSocket,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Constructor for Heartbeat Handler
            </summary>
            <param name="client">Client for the handler</param>
            <param name="socket">Socket for the heartbeat</param>
            <param name="logger">Logger for the bot</param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.DiscordHeartbeatHandler.SetupHeartbeat(System.Single)">
            <summary>
            Setup a heartbeat for this bot with the given interval
            </summary>
            <param name="interval"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.DiscordHeartbeatHandler.OnSocketShutdown">
            <summary>
            Destroy the heartbeat timer on this bot
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.DiscordHeartbeatHandler.SendHeartbeat">
            <summary>
            Sends a heartbeat to discord.
            If the previous heartbeat wasn't acknowledged then we will attempt to reconnect
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketCommandHandler">
            <summary>
            Handles command queueing when the websocket is down
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketCommandHandler.#ctor(Oxide.Ext.Discord.Clients.BotClient,Oxide.Ext.Discord.WebSockets.DiscordWebSocket,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Constructor
            </summary>
            <param name="client">Bot Client for socket commands</param>
            <param name="webSocket">Websocket to handle commands for</param>
            <param name="logger">Logger for this handler</param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketCommandHandler.Enqueue(Oxide.Ext.Discord.Entities.Gateway.Commands.WebSocketCommand)">
            <summary>
            Enqueue a payload to be sent over the websocket
            If the websocket is connected it will be sent immediately
            If the websocket is not connected it will be queued until it is back online
            </summary>
            <param name="command">Command to send over the websocket</param>
        </member>
        <member name="T:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketEventHandler">
            <summary>
            Handles websocket events
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketEventHandler.#ctor(Oxide.Ext.Discord.Clients.BotClient,Oxide.Ext.Discord.WebSockets.DiscordWebSocket,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Creates a new socket listener
            </summary>
            <param name="client">Client this listener is for</param>
            <param name="socket">Socket this listener is for</param>
            <param name="logger">Logger for the client</param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketEventHandler.SocketOpened(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Called when a socket is open
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketEventHandler.SocketClosed(Oxide.Ext.Discord.Entities.Snowflake,System.Net.WebSockets.WebSocketCloseStatus,System.String)">
            <summary>
            Called when a socket is closed
            </summary>
            <param name="websocketId">ID of the web socket</param>
            <param name="status"><see cref="T:System.Net.WebSockets.WebSocketCloseStatus"/> for the web socket</param>
            <param name="message">Close message from the web socket</param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketEventHandler.HandleDiscordClosedSocket(System.Int32,System.String)">
            <summary>
            Parse out the closing reason if discord closed the socket
            </summary>
            <param name="code">Socket close code</param>
            <param name="reason">Socket close reason</param>
            <returns>True if discord closed the socket with one of it's close codes</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketEventHandler.SocketErrored(Oxide.Ext.Discord.Entities.Snowflake,System.Exception)">
            <summary>
            Called when an error occurs on a socket
            </summary>
            <param name="webSocketId">ID of the web socket</param>
            <param name="ex">Exception throw</param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketEventHandler.SocketMessage(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Json.Serialization.DiscordJsonReader)">
            <summary>
            Called when a socket receives a message
            </summary>
            <param name="webSocketId">ID of the web socket</param>
            <param name="reader">Json Reader containing the message</param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketEventHandler.HandleDispatchPresenceUpdate(Oxide.Ext.Discord.Entities.Gateway.Events.PresenceUpdatedEvent)">
            <summary>
             * From Discord API docs:
             * The user object within this event can be partial, the only field which must be sent is the id field, everything else is optional.
             * Along with this limitation, no fields are required, and the types of the fields are not validated.
             * Your client should expect any combination of fields and types within this event
            </summary>
            <param name="update"></param>
            https://discord.com/developers/docs/topics/gateway#presence-update
        </member>
        <member name="T:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketHandler">
            <summary>
            Handles the web socket connection and events
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketHandler.#ctor(Oxide.Ext.Discord.Interfaces.WebSockets.IWebSocketEventHandler,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Constructor
            </summary>
            <param name="handler">Handles for web socket events</param>
            <param name="logger"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketHandler.Connect(System.String)">
            <summary>
            Connects to the websocket at the given URL
            </summary>
            <param name="url"></param>
            <exception cref="T:Oxide.Ext.Discord.Exceptions.Entities.Websocket.DiscordWebSocketException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketHandler.SendAsync(System.IO.MemoryStream)">
            <summary>
            Sends the string message over the web socket
            </summary>
            <param name="stream">Stream to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketHandler.Disconnect(System.Int32,System.String)">
            <summary>
            Disconnects from the websocket with the given code and reason
            </summary>
            <param name="code">Code to close with</param>
            <param name="reason">Reason for the close</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketHandler.Disconnect(System.Net.WebSockets.WebSocketCloseStatus,System.String)">
            <summary>
            Disconnects from the websocket with the given code and reason
            </summary>
            <param name="status"><see cref="T:System.Net.WebSockets.WebSocketCloseStatus"/>to close with</param>
            <param name="reason">Reason for the close</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketHandler.DisconnectInternal(Oxide.Ext.Discord.WebSockets.DiscordWebsocketClient,System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Boolean)">
            <summary>
            Disconnects from the websocket with the given code and reason
            </summary>
            <param name="client">Client for the websockk</param>
            <param name="status">Status to close with</param>
            <param name="reason">Reason for the close</param>
            <param name="closeReceived">If we received a close from the websocket</param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketReconnectHandler">
            <summary>
            Handles reconnecting to the web socket
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketReconnectHandler.#ctor(Oxide.Ext.Discord.Clients.BotClient,Oxide.Ext.Discord.WebSockets.DiscordWebSocket,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Constructor
            </summary>
            <param name="client"></param>
            <param name="webSocket"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketReconnectHandler.StartReconnect">
            <summary>
            Starts the reconnect process
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketReconnectHandler.CancelReconnect">
            <summary>
            Cancels the reconnect timer
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketReconnectHandler.OnWebsocketReady">
            <summary>
            Called when the websocket received a ready event from discord
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Handlers.WebSocketReconnectHandler.OnSocketShutdown">
            <summary>
            Called when the bot is shutting down
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.WebSockets.SocketState">
            <summary>
            Represents our current state for the websocket
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketState.Connecting">
            <summary>
            Socket is in the process of connecting
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketState.Connected">
            <summary>
            Socket is connect and functioning normally
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketState.Disconnecting">
            <summary>
            Websocket is currently disconnecting from a connected web socket
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketState.Disconnected">
            <summary>
            Websocket is currently disconnect and not waiting to connect
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.IsDirty">
            <summary>
            Gets whether the current repository is dirty.
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.IsDirtyString">
            <summary>
            => @"true"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.RepositoryUrl">
            <summary>
            => @"https://github.com/dassjosh/Oxide.Ext.Discord.git"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Branch">
            <summary>
            => @"develop"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Commit">
            <summary>
            => @"6fa91fff"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Sha">
            <summary>
            => @"6fa91fff0269816ada2cd414262a008cdef0908f"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.CommitDate">
            <summary>
            => @"2023-06-25T09:52:53-05:00"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Commits">
            <summary>
            => @"601"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Tag">
            <summary>
            => @"2.1.9-601-g6fa91fff"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseTag">
            <summary>
            => @"2.1.9"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Major">
            <summary>
            => @"2"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Minor">
            <summary>
            => @"1"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Patch">
            <summary>
            => @"9"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Major">
            <summary>
            => @"2"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Minor">
            <summary>
            => @"1"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Patch">
            <summary>
            => @"610"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Label">
            <summary>
            => @""
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.DashLabel">
            <summary>
            => @""
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Source">
            <summary>
            => @"Tag"
            </summary>
        </member>
    </members>
</doc>
